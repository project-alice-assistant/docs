(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var i,s,r=t[0],l=t[1],c=t[2],u=0,h=[];u<r.length;u++)s=r[u],Object.prototype.hasOwnProperty.call(o,s)&&o[s]&&h.push(o[s][0]),o[s]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(d&&d(t);h.length;)h.shift()();return a.push.apply(a,c||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],i=!0,r=1;r<n.length;r++){var l=n[r];0!==o[l]&&(i=!1)}i&&(a.splice(t--,1),e=s(s.s=n[0]))}return e}var i={},o={1:0},a=[];function s(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,i){n=o[e]=[t,i]}));t.push(n[2]=i);var a,r=document.createElement("script");r.charset="utf-8",r.timeout=120,s.nc&&r.setAttribute("nonce",s.nc),r.src=function(e){return s.p+"assets/js/"+({}[e]||e)+"."+{2:"09656052",3:"8a7fc4c5",4:"308e8b15",5:"1411d3c0",6:"63d59d20",7:"0e24214b",8:"4964cf68",9:"b67165a5",10:"4c14399a",11:"1596e5c0",12:"b864e056",13:"597a1db2",14:"a950578d",15:"f50d1495",16:"9d9c32f2",17:"0c7baefc",18:"c22e2077",19:"f4af632c",20:"fe3f47bf",21:"47417a5c",22:"b50dc196",23:"6fed163f",24:"9c708912",25:"82a51196",26:"da10f47e",27:"54f9e0d7",28:"d643634a",29:"b711ae2d",30:"33f81d20",31:"66a2a883",32:"8bc3ff95",33:"a4341dad",34:"e61f93c9",35:"5932148f",36:"1d9e6b49",37:"ffa7cdac",38:"e7209772",39:"d214560d",40:"7d7b6455",41:"22f1628e",42:"c15787ac",43:"73d858f6",44:"58702129",45:"b84e01e0",46:"4a731dcc",47:"311a4857",48:"519b7827",49:"e2a51b36",50:"a93d23d7",51:"138163f0",52:"3a54cb0f",53:"a64f9b29",54:"a662fc24",55:"3c2eb78b",56:"47d7dc3c",57:"782234f1",58:"83d77ac1",59:"c1ef7d68",60:"c1b2adae",61:"6b12a7b1",62:"107a4cab",63:"5cbedda2",64:"2443ea00",65:"adfeb33c",66:"37b8b7d7",67:"98ec0164",68:"9f5a60b0",69:"eddcfbce",70:"8d3dd2d2",71:"626b27f3",72:"b3c5d130",73:"20736bee",74:"57951b71",75:"2836b249",76:"88876aec",77:"114894c7",78:"16c49fbb",79:"56f474fb",80:"c0ad2c7f",81:"769f26ac",82:"d6aa85be",83:"b249c9ee",84:"42825485",85:"a4b6e340",86:"92e42b69",87:"57107773"}[e]+".js"}(e);var l=new Error;a=function(t){r.onerror=r.onload=null,clearTimeout(c);var n=o[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",l.name="ChunkLoadError",l.type=i,l.request=a,n[1](l)}o[e]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:r})}),12e4);r.onerror=r.onload=a,document.head.appendChild(r)}return Promise.all(t)},s.m=e,s.c=i,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,function(t){return e[t]}.bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/",s.oe=function(e){throw console.error(e),e};var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=t,r=r.slice();for(var c=0;c<r.length;c++)t(r[c]);var d=l;a.push([103,0]),n()}([function(e,t,n){"use strict";n.d(t,"d",(function(){return w})),n.d(t,"c",(function(){return v})),n.d(t,"b",(function(){return b})),n.d(t,"e",(function(){return k})),n.d(t,"a",(function(){return x})),n.d(t,"f",(function(){return A})),n.d(t,"g",(function(){return S})),n.d(t,"h",(function(){return j}));n(93),n(129);var i=n(1),o={NotFound:()=>Promise.all([n.e(0),n.e(3)]).then(n.bind(null,320)),Layout:()=>Promise.all([n.e(0),n.e(2)]).then(n.bind(null,319))},a={"v-0681b175":()=>n.e(9).then(n.bind(null,324)),"v-4c727654":()=>n.e(10).then(n.bind(null,325)),"v-e0c0a552":()=>n.e(11).then(n.bind(null,326)),"v-5a17b974":()=>n.e(12).then(n.bind(null,327)),"v-58ced0b4":()=>n.e(13).then(n.bind(null,328)),"v-1f9c4177":()=>n.e(14).then(n.bind(null,329)),"v-76fb2d2b":()=>n.e(15).then(n.bind(null,330)),"v-4c3563b4":()=>n.e(16).then(n.bind(null,331)),"v-1991b62f":()=>n.e(17).then(n.bind(null,332)),"v-bab27eb4":()=>n.e(18).then(n.bind(null,333)),"v-f12c40b4":()=>n.e(19).then(n.bind(null,334)),"v-70285a65":()=>n.e(20).then(n.bind(null,335)),"v-f32f0cf4":()=>n.e(21).then(n.bind(null,336)),"v-1c15c334":()=>n.e(22).then(n.bind(null,337)),"v-08421b36":()=>n.e(23).then(n.bind(null,338)),"v-7599ab7e":()=>n.e(24).then(n.bind(null,339)),"v-3ca6ddb6":()=>n.e(25).then(n.bind(null,340)),"v-bc7e3184":()=>n.e(26).then(n.bind(null,341)),"v-1dd60934":()=>n.e(27).then(n.bind(null,342)),"v-03cf46ac":()=>n.e(28).then(n.bind(null,343)),"v-3ef16335":()=>n.e(29).then(n.bind(null,344)),"v-599b782f":()=>n.e(30).then(n.bind(null,345)),"v-4f62e6f6":()=>n.e(31).then(n.bind(null,346)),"v-1fbf6992":()=>n.e(32).then(n.bind(null,347)),"v-fa956c34":()=>n.e(33).then(n.bind(null,348)),"v-2a00bb85":()=>n.e(34).then(n.bind(null,349)),"v-798f791f":()=>n.e(35).then(n.bind(null,350)),"v-46952605":()=>n.e(36).then(n.bind(null,351)),"v-03bb25b6":()=>n.e(37).then(n.bind(null,352)),"v-21d949f6":()=>n.e(38).then(n.bind(null,353)),"v-41edb305":()=>n.e(39).then(n.bind(null,354)),"v-09f1f986":()=>n.e(40).then(n.bind(null,355)),"v-585f6345":()=>n.e(41).then(n.bind(null,356)),"v-7e6cd7b4":()=>n.e(42).then(n.bind(null,357)),"v-2e5d5b53":()=>n.e(43).then(n.bind(null,358)),"v-5756d057":()=>n.e(44).then(n.bind(null,359)),"v-910389fe":()=>n.e(45).then(n.bind(null,360)),"v-464ee06f":()=>n.e(46).then(n.bind(null,361)),"v-35f71965":()=>n.e(47).then(n.bind(null,362)),"v-10d31522":()=>n.e(48).then(n.bind(null,363)),"v-3cfb3881":()=>n.e(49).then(n.bind(null,364)),"v-75c9dde5":()=>n.e(50).then(n.bind(null,365)),"v-2eab9c93":()=>n.e(51).then(n.bind(null,366)),"v-532802c5":()=>n.e(52).then(n.bind(null,367)),"v-d63d2936":()=>n.e(53).then(n.bind(null,368)),"v-59baa413":()=>n.e(54).then(n.bind(null,369)),"v-08842bf3":()=>n.e(55).then(n.bind(null,370)),"v-783892cf":()=>n.e(56).then(n.bind(null,371)),"v-5c61de05":()=>n.e(57).then(n.bind(null,372)),"v-0c231626":()=>n.e(58).then(n.bind(null,373)),"v-207e9734":()=>n.e(59).then(n.bind(null,374)),"v-592be0a9":()=>n.e(60).then(n.bind(null,375)),"v-a7323dfc":()=>n.e(61).then(n.bind(null,376)),"v-e860ba34":()=>n.e(62).then(n.bind(null,377)),"v-5c24c47a":()=>n.e(63).then(n.bind(null,378)),"v-53571db6":()=>n.e(64).then(n.bind(null,379)),"v-6d308145":()=>n.e(65).then(n.bind(null,380)),"v-6fa52ccd":()=>n.e(66).then(n.bind(null,381)),"v-d9d86b36":()=>n.e(67).then(n.bind(null,382)),"v-61d60636":()=>n.e(68).then(n.bind(null,383)),"v-7851e59f":()=>n.e(69).then(n.bind(null,384)),"v-2a8104ed":()=>n.e(70).then(n.bind(null,385)),"v-02cf5705":()=>n.e(71).then(n.bind(null,386)),"v-5d648005":()=>n.e(72).then(n.bind(null,387)),"v-190fa89e":()=>n.e(73).then(n.bind(null,388)),"v-20fa3876":()=>n.e(74).then(n.bind(null,389)),"v-202eb20e":()=>n.e(75).then(n.bind(null,390)),"v-43b644ef":()=>n.e(76).then(n.bind(null,391)),"v-2f01e9b6":()=>n.e(77).then(n.bind(null,392)),"v-a71cd67a":()=>n.e(78).then(n.bind(null,393)),"v-88c0dfb6":()=>n.e(79).then(n.bind(null,394)),"v-5d8c4f65":()=>n.e(80).then(n.bind(null,395)),"v-2aedfd5d":()=>n.e(81).then(n.bind(null,396)),"v-36a43626":()=>n.e(82).then(n.bind(null,397)),"v-dc05a280":()=>n.e(83).then(n.bind(null,398)),"v-834a41b6":()=>n.e(84).then(n.bind(null,399)),"v-2a25b445":()=>n.e(85).then(n.bind(null,400)),"v-3b1acf32":()=>n.e(86).then(n.bind(null,401)),"v-8f2e0e76":()=>n.e(87).then(n.bind(null,402))};function s(e){const t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}const r=/-(\w)/g,l=s(e=>e.replace(r,(e,t)=>t?t.toUpperCase():"")),c=/\B([A-Z])/g,d=s(e=>e.replace(c,"-$1").toLowerCase()),u=s(e=>e.charAt(0).toUpperCase()+e.slice(1));function h(e,t){if(!t)return;if(e(t))return e(t);return t.includes("-")?e(u(l(t))):e(u(t))||e(d(t))}const p=Object.assign({},o,a),f=e=>p[e],m=e=>a[e],g=e=>o[e],y=e=>i.a.component(e);function w(e){return h(m,e)}function v(e){return h(g,e)}function b(e){return h(f,e)}function k(e){return h(y,e)}function x(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!k(e)&&b(e)){const t=await b(e)();i.a.component(e,t.default)}}))}function A(e,t,n){switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),e[t].push(...n);break;default:throw new Error("Unknown option name.")}}function S(e,t){const{$localePath:n}=e;return"object"==typeof t&&t[n]?t[n]:t}function j(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return Fn}));
/*!
 * Vue.js v2.7.14
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var i=Object.freeze({}),o=Array.isArray;function a(e){return null==e}function s(e){return null!=e}function r(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function d(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function h(e){return"[object Object]"===u.call(e)}function p(e){return"[object RegExp]"===u.call(e)}function f(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return s(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||h(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function y(e){var t=parseFloat(e);return isNaN(t)?e:t}function w(e,t){for(var n=Object.create(null),i=e.split(","),o=0;o<i.length;o++)n[i[o]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}w("slot,component",!0);var v=w("key,ref,slot,slot-scope,is");function b(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var i=e.indexOf(t);if(i>-1)return e.splice(i,1)}}var k=Object.prototype.hasOwnProperty;function x(e,t){return k.call(e,t)}function A(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var S=/-(\w)/g,j=A((function(e){return e.replace(S,(function(e,t){return t?t.toUpperCase():""}))})),T=A((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),_=/\B([A-Z])/g,I=A((function(e){return e.replace(_,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var i=arguments.length;return i?i>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function z(e,t){t=t||0;for(var n=e.length-t,i=new Array(n);n--;)i[n]=e[n+t];return i}function C(e,t){for(var n in t)e[n]=t[n];return e}function E(e){for(var t={},n=0;n<e.length;n++)e[n]&&C(t,e[n]);return t}function O(e,t,n){}var D=function(e,t,n){return!1},L=function(e){return e};function W(e,t){if(e===t)return!0;var n=d(e),i=d(t);if(!n||!i)return!n&&!i&&String(e)===String(t);try{var o=Array.isArray(e),a=Array.isArray(t);if(o&&a)return e.length===t.length&&e.every((function(e,n){return W(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(o||a)return!1;var s=Object.keys(e),r=Object.keys(t);return s.length===r.length&&s.every((function(n){return W(e[n],t[n])}))}catch(e){return!1}}function R(e,t){for(var n=0;n<e.length;n++)if(W(e[n],t))return n;return-1}function H(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function N(e,t){return e===t?0===e&&1/e!=1/t:e==e||t==t}var M=["component","directive","filter"],q=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:O,parsePlatformTagName:L,mustUseProp:D,async:!0,_lifecycleHooks:q},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function G(e,t,n,i){Object.defineProperty(e,t,{value:n,enumerable:!!i,writable:!0,configurable:!0})}var F=new RegExp("[^".concat($.source,".$_\\d]"));var Y="__proto__"in{},V="undefined"!=typeof window,K=V&&window.navigator.userAgent.toLowerCase(),J=K&&/msie|trident/.test(K),Z=K&&K.indexOf("msie 9.0")>0,Q=K&&K.indexOf("edge/")>0;K&&K.indexOf("android");var X=K&&/iphone|ipad|ipod|ios/.test(K);K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K);var ee,te=K&&K.match(/firefox\/(\d+)/),ne={}.watch,ie=!1;if(V)try{var oe={};Object.defineProperty(oe,"passive",{get:function(){ie=!0}}),window.addEventListener("test-passive",null,oe)}catch(e){}var ae=function(){return void 0===ee&&(ee=!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ee},se=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return"function"==typeof e&&/native code/.test(e.toString())}var le,ce="undefined"!=typeof Symbol&&re(Symbol)&&"undefined"!=typeof Reflect&&re(Reflect.ownKeys);le="undefined"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var de=null;function ue(e){void 0===e&&(e=null),e||de&&de._scope.off(),de=e,e&&e._scope.on()}var he=function(){function e(e,t,n,i,o,a,s,r){this.tag=e,this.data=t,this.children=n,this.text=i,this.elm=o,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=r,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),pe=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function fe(e){return new he(void 0,void 0,void 0,String(e))}function me(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ge=0,ye=[],we=function(){function e(){this._pending=!1,this.id=ge++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ye.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var t=this.subs.filter((function(e){return e}));for(var n=0,i=t.length;n<i;n++){0,t[n].update()}},e}();we.target=null;var ve=[];function be(e){ve.push(e),we.target=e}function ke(){ve.pop(),we.target=ve[ve.length-1]}var xe=Array.prototype,Ae=Object.create(xe);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=xe[e];G(Ae,e,(function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var o,a=t.apply(this,n),s=this.__ob__;switch(e){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&s.observeArray(o),s.dep.notify(),a}))}));var Se=Object.getOwnPropertyNames(Ae),je={},Te=!0;function _e(e){Te=e}var Ie={notify:O,depend:O,addSub:O,removeSub:O},Pe=function(){function e(e,t,n){if(void 0===t&&(t=!1),void 0===n&&(n=!1),this.value=e,this.shallow=t,this.mock=n,this.dep=n?Ie:new we,this.vmCount=0,G(e,"__ob__",this),o(e)){if(!n)if(Y)e.__proto__=Ae;else for(var i=0,a=Se.length;i<a;i++){G(e,r=Se[i],Ae[r])}t||this.observeArray(e)}else{var s=Object.keys(e);for(i=0;i<s.length;i++){var r;Ce(e,r=s[i],je,void 0,t,n)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)ze(e[t],!1,this.mock)},e}();function ze(e,t,n){return e&&x(e,"__ob__")&&e.__ob__ instanceof Pe?e.__ob__:!Te||!n&&ae()||!o(e)&&!h(e)||!Object.isExtensible(e)||e.__v_skip||He(e)||e instanceof he?void 0:new Pe(e,t,n)}function Ce(e,t,n,i,a,s){var r=new we,l=Object.getOwnPropertyDescriptor(e,t);if(!l||!1!==l.configurable){var c=l&&l.get,d=l&&l.set;c&&!d||n!==je&&2!==arguments.length||(n=e[t]);var u=!a&&ze(n,!1,s);return Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=c?c.call(e):n;return we.target&&(r.depend(),u&&(u.dep.depend(),o(t)&&De(t))),He(t)&&!a?t.value:t},set:function(t){var i=c?c.call(e):n;if(N(i,t)){if(d)d.call(e,t);else{if(c)return;if(!a&&He(i)&&!He(t))return void(i.value=t);n=t}u=!a&&ze(t,!1,s),r.notify()}}}),r}}function Ee(e,t,n){if(!Re(e)){var i=e.__ob__;return o(e)&&f(t)?(e.length=Math.max(e.length,t),e.splice(t,1,n),i&&!i.shallow&&i.mock&&ze(n,!1,!0),n):t in e&&!(t in Object.prototype)?(e[t]=n,n):e._isVue||i&&i.vmCount?n:i?(Ce(i.value,t,n,void 0,i.shallow,i.mock),i.dep.notify(),n):(e[t]=n,n)}}function Oe(e,t){if(o(e)&&f(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||Re(e)||x(e,t)&&(delete e[t],n&&n.dep.notify())}}function De(e){for(var t=void 0,n=0,i=e.length;n<i;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),o(t)&&De(t)}function Le(e){return We(e,!0),G(e,"__v_isShallow",!0),e}function We(e,t){if(!Re(e)){ze(e,t,ae());0}}function Re(e){return!(!e||!e.__v_isReadonly)}function He(e){return!(!e||!0!==e.__v_isRef)}function Ne(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(He(e))return e.value;var i=e&&e.__ob__;return i&&i.dep.depend(),e},set:function(e){var i=t[n];He(i)&&!He(e)?i.value=e:t[n]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Me;var qe=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Me,!e&&Me&&(this.index=(Me.scopes||(Me.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=Me;try{return Me=this,e()}finally{Me=t}}else 0},e.prototype.on=function(){Me=this},e.prototype.off=function(){Me=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Ue(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}var $e=A((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),i="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=i?e.slice(1):e,once:n,capture:i,passive:t}}));function Be(e,t){function n(){var e=n.fns;if(!o(e))return Tt(e,null,arguments,t,"v-on handler");for(var i=e.slice(),a=0;a<i.length;a++)Tt(i[a],null,arguments,t,"v-on handler")}return n.fns=e,n}function Ge(e,t,n,i,o,s){var l,c,d,u;for(l in e)c=e[l],d=t[l],u=$e(l),a(c)||(a(d)?(a(c.fns)&&(c=e[l]=Be(c,s)),r(u.once)&&(c=e[l]=o(u.name,c,u.capture)),n(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,e[l]=d));for(l in t)a(e[l])&&i((u=$e(l)).name,t[l],u.capture)}function Fe(e,t,n){var i;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function l(){n.apply(this,arguments),b(i.fns,l)}a(o)?i=Be([l]):s(o.fns)&&r(o.merged)?(i=o).fns.push(l):i=Be([o,l]),i.merged=!0,e[t]=i}function Ye(e,t,n,i,o){if(s(t)){if(x(t,n))return e[n]=t[n],o||delete t[n],!0;if(x(t,i))return e[n]=t[i],o||delete t[i],!0}return!1}function Ve(e){return l(e)?[fe(e)]:o(e)?function e(t,n){var i,c,d,u,h=[];for(i=0;i<t.length;i++)a(c=t[i])||"boolean"==typeof c||(d=h.length-1,u=h[d],o(c)?c.length>0&&(Ke((c=e(c,"".concat(n||"","_").concat(i)))[0])&&Ke(u)&&(h[d]=fe(u.text+c[0].text),c.shift()),h.push.apply(h,c)):l(c)?Ke(u)?h[d]=fe(u.text+c):""!==c&&h.push(fe(c)):Ke(c)&&Ke(u)?h[d]=fe(u.text+c.text):(r(t._isVList)&&s(c.tag)&&a(c.key)&&s(n)&&(c.key="__vlist".concat(n,"_").concat(i,"__")),h.push(c)));return h}(e):void 0}function Ke(e){return s(e)&&s(e.text)&&!1===e.isComment}function Je(e,t){var n,i,a,r,l=null;if(o(e)||"string"==typeof e)for(l=new Array(e.length),n=0,i=e.length;n<i;n++)l[n]=t(e[n],n);else if("number"==typeof e)for(l=new Array(e),n=0;n<e;n++)l[n]=t(n+1,n);else if(d(e))if(ce&&e[Symbol.iterator]){l=[];for(var c=e[Symbol.iterator](),u=c.next();!u.done;)l.push(t(u.value,l.length)),u=c.next()}else for(a=Object.keys(e),l=new Array(a.length),n=0,i=a.length;n<i;n++)r=a[n],l[n]=t(e[r],r,n);return s(l)||(l=[]),l._isVList=!0,l}function Ze(e,t,n,i){var o,a=this.$scopedSlots[e];a?(n=n||{},i&&(n=C(C({},i),n)),o=a(n)||(c(t)?t():t)):o=this.$slots[e]||(c(t)?t():t);var s=n&&n.slot;return s?this.$createElement("template",{slot:s},o):o}function Qe(e){return zn(this.$options,"filters",e,!0)||L}function Xe(e,t){return o(e)?-1===e.indexOf(t):e!==t}function et(e,t,n,i,o){var a=U.keyCodes[t]||n;return o&&i&&!U.keyCodes[t]?Xe(o,i):a?Xe(a,e):i?I(i)!==t:void 0===e}function tt(e,t,n,i,a){if(n)if(d(n)){o(n)&&(n=E(n));var s=void 0,r=function(o){if("class"===o||"style"===o||v(o))s=e;else{var r=e.attrs&&e.attrs.type;s=i||U.mustUseProp(t,r,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=j(o),c=I(o);l in s||c in s||(s[o]=n[o],a&&((e.on||(e.on={}))["update:".concat(o)]=function(e){n[o]=e}))};for(var l in n)r(l)}else;return e}function nt(e,t){var n=this._staticTrees||(this._staticTrees=[]),i=n[e];return i&&!t||ot(i=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),i}function it(e,t,n){return ot(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function ot(e,t,n){if(o(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&at(e[i],"".concat(t,"_").concat(i),n);else at(e,t,n)}function at(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function st(e,t){if(t)if(h(t)){var n=e.on=e.on?C({},e.on):{};for(var i in t){var o=n[i],a=t[i];n[i]=o?[].concat(o,a):a}}else;return e}function rt(e,t,n,i){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var s=e[a];o(s)?rt(s,t,n):s&&(s.proxy&&(s.fn.proxy=!0),t[s.key]=s.fn)}return i&&(t.$key=i),t}function lt(e,t){for(var n=0;n<t.length;n+=2){var i=t[n];"string"==typeof i&&i&&(e[t[n]]=t[n+1])}return e}function ct(e,t){return"string"==typeof e?t+e:e}function dt(e){e._o=it,e._n=y,e._s=g,e._l=Je,e._t=Ze,e._q=W,e._i=R,e._m=nt,e._f=Qe,e._k=et,e._b=tt,e._v=fe,e._e=pe,e._u=rt,e._g=st,e._d=lt,e._p=ct}function ut(e,t){if(!e||!e.length)return{};for(var n={},i=0,o=e.length;i<o;i++){var a=e[i],s=a.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,a.context!==t&&a.fnContext!==t||!s||null==s.slot)(n.default||(n.default=[])).push(a);else{var r=s.slot,l=n[r]||(n[r]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in n)n[c].every(ht)&&delete n[c];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function pt(e){return e.isComment&&e.asyncFactory}function ft(e,t,n,o){var a,s=Object.keys(n).length>0,r=t?!!t.$stable:!s,l=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(r&&o&&o!==i&&l===o.$key&&!s&&!o.$hasNormal)return o;for(var c in a={},t)t[c]&&"$"!==c[0]&&(a[c]=mt(e,n,c,t[c]))}else a={};for(var d in n)d in a||(a[d]=gt(n,d));return t&&Object.isExtensible(t)&&(t._normalized=a),G(a,"$stable",r),G(a,"$key",l),G(a,"$hasNormal",s),a}function mt(e,t,n,i){var a=function(){var t=de;ue(e);var n=arguments.length?i.apply(null,arguments):i({}),a=(n=n&&"object"==typeof n&&!o(n)?[n]:Ve(n))&&n[0];return ue(t),n&&(!a||1===n.length&&a.isComment&&!pt(a))?void 0:n};return i.proxy&&Object.defineProperty(t,n,{get:a,enumerable:!0,configurable:!0}),a}function gt(e,t){return function(){return e[t]}}function yt(e){return{get attrs(){if(!e._attrsProxy){var t=e._attrsProxy={};G(t,"_v_attr_proxy",!0),wt(t,e.$attrs,i,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||wt(e._listenersProxy={},e.$listeners,i,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||bt(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:P(e.$emit,e),expose:function(t){t&&Object.keys(t).forEach((function(n){return Ne(e,t,n)}))}}}function wt(e,t,n,i,o){var a=!1;for(var s in t)s in e?t[s]!==n[s]&&(a=!0):(a=!0,vt(e,s,i,o));for(var s in e)s in t||(a=!0,delete e[s]);return a}function vt(e,t,n,i){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[i][t]}})}function bt(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var kt=null;function xt(e,t){return(e.__esModule||ce&&"Module"===e[Symbol.toStringTag])&&(e=e.default),d(e)?t.extend(e):e}function At(e){if(o(e))for(var t=0;t<e.length;t++){var n=e[t];if(s(n)&&(s(n.componentOptions)||pt(n)))return n}}function St(e,t,n,i,u,h){return(o(n)||l(n))&&(u=i,i=n,n=void 0),r(h)&&(u=2),function(e,t,n,i,l){if(s(n)&&s(n.__ob__))return pe();s(n)&&s(n.is)&&(t=n.is);if(!t)return pe();0;o(i)&&c(i[0])&&((n=n||{}).scopedSlots={default:i[0]},i.length=0);2===l?i=Ve(i):1===l&&(i=function(e){for(var t=0;t<e.length;t++)if(o(e[t]))return Array.prototype.concat.apply([],e);return e}(i));var u,h;if("string"==typeof t){var p=void 0;h=e.$vnode&&e.$vnode.ns||U.getTagNamespace(t),u=U.isReservedTag(t)?new he(U.parsePlatformTagName(t),n,i,void 0,void 0,e):n&&n.pre||!s(p=zn(e.$options,"components",t))?new he(t,n,i,void 0,void 0,e):bn(p,n,e,i,t)}else u=bn(t,n,e,i);return o(u)?u:s(u)?(s(h)&&function e(t,n,i){t.ns=n,"foreignObject"===t.tag&&(n=void 0,i=!0);if(s(t.children))for(var o=0,l=t.children.length;o<l;o++){var c=t.children[o];s(c.tag)&&(a(c.ns)||r(i)&&"svg"!==c.tag)&&e(c,n,i)}}(u,h),s(n)&&function(e){d(e.style)&&qt(e.style);d(e.class)&&qt(e.class)}(n),u):pe()}(e,t,n,i,u)}function jt(e,t,n){be();try{if(t)for(var i=t;i=i.$parent;){var o=i.$options.errorCaptured;if(o)for(var a=0;a<o.length;a++)try{if(!1===o[a].call(i,e,t,n))return}catch(e){_t(e,i,"errorCaptured hook")}}_t(e,t,n)}finally{ke()}}function Tt(e,t,n,i,o){var a;try{(a=n?e.apply(t,n):e.call(t))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(e){return jt(e,i,o+" (Promise/async)")})),a._handled=!0)}catch(e){jt(e,i,o)}return a}function _t(e,t,n){if(U.errorHandler)try{return U.errorHandler.call(null,e,t,n)}catch(t){t!==e&&It(t,null,"config.errorHandler")}It(e,t,n)}function It(e,t,n){if(!V||"undefined"==typeof console)throw e;console.error(e)}var Pt,zt=!1,Ct=[],Et=!1;function Ot(){Et=!1;var e=Ct.slice(0);Ct.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&re(Promise)){var Dt=Promise.resolve();Pt=function(){Dt.then(Ot),X&&setTimeout(O)},zt=!0}else if(J||"undefined"==typeof MutationObserver||!re(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Pt="undefined"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(Ot)}:function(){setTimeout(Ot,0)};else{var Lt=1,Wt=new MutationObserver(Ot),Rt=document.createTextNode(String(Lt));Wt.observe(Rt,{characterData:!0}),Pt=function(){Lt=(Lt+1)%2,Rt.data=String(Lt)},zt=!0}function Ht(e,t){var n;if(Ct.push((function(){if(e)try{e.call(t)}catch(e){jt(e,t,"nextTick")}else n&&n(t)})),Et||(Et=!0,Pt()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function Nt(e){return function(t,n){if(void 0===n&&(n=de),n)return function(e,t,n){var i=e.$options;i[t]=Tn(i[t],n)}(n,e,t)}}Nt("beforeMount"),Nt("mounted"),Nt("beforeUpdate"),Nt("updated"),Nt("beforeDestroy"),Nt("destroyed"),Nt("activated"),Nt("deactivated"),Nt("serverPrefetch"),Nt("renderTracked"),Nt("renderTriggered"),Nt("errorCaptured");var Mt=new le;function qt(e){return function e(t,n){var i,a,s=o(t);if(!s&&!d(t)||t.__v_skip||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(s)for(i=t.length;i--;)e(t[i],n);else if(He(t))e(t.value,n);else for(a=Object.keys(t),i=a.length;i--;)e(t[a[i]],n)}(e,Mt),Mt.clear(),e}var Ut,$t=0,Bt=function(){function e(e,t,n,i,o){var a,s;a=this,void 0===(s=Me&&!Me._vm?Me:e?e._scope:void 0)&&(s=Me),s&&s.active&&s.effects.push(a),(this.vm=e)&&o&&(e._watcher=this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++$t,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new le,this.newDepIds=new le,this.expression="",c(t)?this.getter=t:(this.getter=function(e){if(!F.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;be(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;jt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&qt(e),ke(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():hn(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||d(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');Tt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&b(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Gt(e,t){Ut.$on(e,t)}function Ft(e,t){Ut.$off(e,t)}function Yt(e,t){var n=Ut;return function i(){var o=t.apply(null,arguments);null!==o&&n.$off(e,i)}}function Vt(e,t,n){Ut=e,Ge(t,n||{},Gt,Ft,Yt,e),Ut=void 0}var Kt=null;function Jt(e){var t=Kt;return Kt=e,function(){Kt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Qt(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Qt(e.$children[n]);Xt(e,"activated")}}function Xt(e,t,n,i){void 0===i&&(i=!0),be();var o=de;i&&ue(e);var a=e.$options[t],s="".concat(t," hook");if(a)for(var r=0,l=a.length;r<l;r++)Tt(a[r],e,n||null,e,s);e._hasHookEvent&&e.$emit("hook:"+t),i&&ue(o),ke()}var en=[],tn=[],nn={},on=!1,an=!1,sn=0;var rn=0,ln=Date.now;if(V&&!J){var cn=window.performance;cn&&"function"==typeof cn.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return cn.now()})}var dn=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function un(){var e,t;for(rn=ln(),an=!0,en.sort(dn),sn=0;sn<en.length;sn++)(e=en[sn]).before&&e.before(),t=e.id,nn[t]=null,e.run();var n=tn.slice(),i=en.slice();sn=en.length=tn.length=0,nn={},on=an=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Qt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],i=n.vm;i&&i._watcher===n&&i._isMounted&&!i._isDestroyed&&Xt(i,"updated")}}(i),function(){for(var e=0;e<ye.length;e++){var t=ye[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}ye.length=0}(),se&&U.devtools&&se.emit("flush")}function hn(e){var t=e.id;if(null==nn[t]&&(e!==we.target||!e.noRecurse)){if(nn[t]=!0,an){for(var n=en.length-1;n>sn&&en[n].id>e.id;)n--;en.splice(n+1,0,e)}else en.push(e);on||(on=!0,Ht(un))}}function pn(e,t){if(e){for(var n=Object.create(null),i=ce?Reflect.ownKeys(e):Object.keys(e),o=0;o<i.length;o++){var a=i[o];if("__ob__"!==a){var s=e[a].from;if(s in t._provided)n[a]=t._provided[s];else if("default"in e[a]){var r=e[a].default;n[a]=c(r)?r.call(t):r}else 0}}return n}}function fn(e,t,n,a,s){var l,c=this,d=s.options;x(a,"_uid")?(l=Object.create(a))._original=a:(l=a,a=a._original);var u=r(d._compiled),h=!u;this.data=e,this.props=t,this.children=n,this.parent=a,this.listeners=e.on||i,this.injections=pn(d.inject,a),this.slots=function(){return c.$slots||ft(a,e.scopedSlots,c.$slots=ut(n,a)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ft(a,e.scopedSlots,this.slots())}}),u&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=ft(a,e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,t,n,i){var s=St(l,e,t,n,i,h);return s&&!o(s)&&(s.fnScopeId=d._scopeId,s.fnContext=a),s}:this._c=function(e,t,n,i){return St(l,e,t,n,i,h)}}function mn(e,t,n,i,o){var a=me(e);return a.fnContext=n,a.fnOptions=i,t.slot&&((a.data||(a.data={})).slot=t.slot),a}function gn(e,t){for(var n in t)e[j(n)]=t[n]}function yn(e){return e.name||e.__name||e._componentTag}dt(fn.prototype);var wn={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;wn.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},i=e.data.inlineTemplate;s(i)&&(n.render=i.render,n.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Kt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,o,a){var s=o.data.scopedSlots,r=e.$scopedSlots,l=!!(s&&!s.$stable||r!==i&&!r.$stable||s&&e.$scopedSlots.$key!==s.$key||!s&&e.$scopedSlots.$key),c=!!(a||e.$options._renderChildren||l),d=e.$vnode;e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o),e.$options._renderChildren=a;var u=o.data.attrs||i;e._attrsProxy&&wt(e._attrsProxy,u,d.data&&d.data.attrs||i,e,"$attrs")&&(c=!0),e.$attrs=u,n=n||i;var h=e.$options._parentListeners;if(e._listenersProxy&&wt(e._listenersProxy,n,h||i,e,"$listeners"),e.$listeners=e.$options._parentListeners=n,Vt(e,n,h),t&&e.$options.props){_e(!1);for(var p=e._props,f=e.$options._propKeys||[],m=0;m<f.length;m++){var g=f[m],y=e.$options.props;p[g]=Cn(g,y,t,e)}_e(!0),e.$options.propsData=t}c&&(e.$slots=ut(a,o.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,i=e.componentInstance;i._isMounted||(i._isMounted=!0,Xt(i,"mounted")),e.data.keepAlive&&(n._isMounted?((t=i)._inactive=!1,tn.push(t)):Qt(i,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(!(n&&(t._directInactive=!0,Zt(t))||t._inactive)){t._inactive=!0;for(var i=0;i<t.$children.length;i++)e(t.$children[i]);Xt(t,"deactivated")}}(t,!0):t.$destroy())}},vn=Object.keys(wn);function bn(e,t,n,l,c){if(!a(e)){var u=n.$options._base;if(d(e)&&(e=u.extend(e)),"function"==typeof e){var h;if(a(e.cid)&&void 0===(e=function(e,t){if(r(e.error)&&s(e.errorComp))return e.errorComp;if(s(e.resolved))return e.resolved;var n=kt;if(n&&s(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),r(e.loading)&&s(e.loadingComp))return e.loadingComp;if(n&&!s(e.owners)){var i=e.owners=[n],o=!0,l=null,c=null;n.$on("hook:destroyed",(function(){return b(i,n)}));var u=function(e){for(var t=0,n=i.length;t<n;t++)i[t].$forceUpdate();e&&(i.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},h=H((function(n){e.resolved=xt(n,t),o?i.length=0:u(!0)})),p=H((function(t){s(e.errorComp)&&(e.error=!0,u(!0))})),f=e(h,p);return d(f)&&(m(f)?a(e.resolved)&&f.then(h,p):m(f.component)&&(f.component.then(h,p),s(f.error)&&(e.errorComp=xt(f.error,t)),s(f.loading)&&(e.loadingComp=xt(f.loading,t),0===f.delay?e.loading=!0:l=setTimeout((function(){l=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,u(!1))}),f.delay||200)),s(f.timeout)&&(c=setTimeout((function(){c=null,a(e.resolved)&&p(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(h=e,u)))return function(e,t,n,i,o){var a=pe();return a.asyncFactory=e,a.asyncMeta={data:t,context:n,children:i,tag:o},a}(h,t,n,l,c);t=t||{},Gn(e),s(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",i=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),r=a[i],l=t.model.callback;s(r)?(o(r)?-1===r.indexOf(l):r!==l)&&(a[i]=[l].concat(r)):a[i]=l}(e.options,t);var p=function(e,t,n){var i=t.options.props;if(!a(i)){var o={},r=e.attrs,l=e.props;if(s(r)||s(l))for(var c in i){var d=I(c);Ye(o,l,c,d,!0)||Ye(o,r,c,d,!1)}return o}}(t,e);if(r(e.options.functional))return function(e,t,n,a,r){var l=e.options,c={},d=l.props;if(s(d))for(var u in d)c[u]=Cn(u,d,t||i);else s(n.attrs)&&gn(c,n.attrs),s(n.props)&&gn(c,n.props);var h=new fn(n,c,r,a,e),p=l.render.call(null,h._c,h);if(p instanceof he)return mn(p,n,h.parent,l,h);if(o(p)){for(var f=Ve(p)||[],m=new Array(f.length),g=0;g<f.length;g++)m[g]=mn(f[g],n,h.parent,l,h);return m}}(e,p,t,n,l);var f=t.on;if(t.on=t.nativeOn,r(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<vn.length;n++){var i=vn[n],o=t[i],a=wn[i];o===a||o&&o._merged||(t[i]=o?kn(a,o):a)}}(t);var y=yn(e.options)||c;return new he("vue-component-".concat(e.cid).concat(y?"-".concat(y):""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:f,tag:c,children:l},h)}}}function kn(e,t){var n=function(n,i){e(n,i),t(n,i)};return n._merged=!0,n}var xn=O,An=U.optionMergeStrategies;function Sn(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var i,o,a,s=ce?Reflect.ownKeys(t):Object.keys(t),r=0;r<s.length;r++)"__ob__"!==(i=s[r])&&(o=e[i],a=t[i],n&&x(e,i)?o!==a&&h(o)&&h(a)&&Sn(o,a):Ee(e,i,a));return e}function jn(e,t,n){return n?function(){var i=c(t)?t.call(n,n):t,o=c(e)?e.call(n,n):e;return i?Sn(i,o):o}:t?e?function(){return Sn(c(t)?t.call(this,this):t,c(e)?e.call(this,this):e)}:t:e}function Tn(e,t){var n=t?e?e.concat(t):o(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function _n(e,t,n,i){var o=Object.create(e||null);return t?C(o,t):o}An.data=function(e,t,n){return n?jn(e,t,n):t&&"function"!=typeof t?e:jn(e,t)},q.forEach((function(e){An[e]=Tn})),M.forEach((function(e){An[e+"s"]=_n})),An.watch=function(e,t,n,i){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var s in C(a,e),t){var r=a[s],l=t[s];r&&!o(r)&&(r=[r]),a[s]=r?r.concat(l):o(l)?l:[l]}return a},An.props=An.methods=An.inject=An.computed=function(e,t,n,i){if(!e)return t;var o=Object.create(null);return C(o,e),t&&C(o,t),o},An.provide=function(e,t){return e?function(){var n=Object.create(null);return Sn(n,c(e)?e.call(this):e),t&&Sn(n,c(t)?t.call(this):t,!1),n}:t};var In=function(e,t){return void 0===t?e:t};function Pn(e,t,n){if(c(t)&&(t=t.options),function(e,t){var n=e.props;if(n){var i,a,s={};if(o(n))for(i=n.length;i--;)"string"==typeof(a=n[i])&&(s[j(a)]={type:null});else if(h(n))for(var r in n)a=n[r],s[j(r)]=h(a)?a:{type:a};else 0;e.props=s}}(t),function(e,t){var n=e.inject;if(n){var i=e.inject={};if(o(n))for(var a=0;a<n.length;a++)i[n[a]]={from:n[a]};else if(h(n))for(var s in n){var r=n[s];i[s]=h(r)?C({from:s},r):{from:r}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var i=t[n];c(i)&&(t[n]={bind:i,update:i})}}(t),!t._base&&(t.extends&&(e=Pn(e,t.extends,n)),t.mixins))for(var i=0,a=t.mixins.length;i<a;i++)e=Pn(e,t.mixins[i],n);var s,r={};for(s in e)l(s);for(s in t)x(e,s)||l(s);function l(i){var o=An[i]||In;r[i]=o(e[i],t[i],n,i)}return r}function zn(e,t,n,i){if("string"==typeof n){var o=e[t];if(x(o,n))return o[n];var a=j(n);if(x(o,a))return o[a];var s=T(a);return x(o,s)?o[s]:o[n]||o[a]||o[s]}}function Cn(e,t,n,i){var o=t[e],a=!x(n,e),s=n[e],r=Ln(Boolean,o.type);if(r>-1)if(a&&!x(o,"default"))s=!1;else if(""===s||s===I(e)){var l=Ln(String,o.type);(l<0||r<l)&&(s=!0)}if(void 0===s){s=function(e,t,n){if(!x(t,"default"))return;var i=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return c(i)&&"Function"!==On(t.type)?i.call(e):i}(i,o,e);var d=Te;_e(!0),ze(s),_e(d)}return s}var En=/^\s*function (\w+)/;function On(e){var t=e&&e.toString().match(En);return t?t[1]:""}function Dn(e,t){return On(e)===On(t)}function Ln(e,t){if(!o(t))return Dn(t,e)?0:-1;for(var n=0,i=t.length;n<i;n++)if(Dn(t[n],e))return n;return-1}var Wn={enumerable:!0,configurable:!0,get:O,set:O};function Rn(e,t,n){Wn.get=function(){return this[t][n]},Wn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Wn)}function Hn(e){var t=e.$options;if(t.props&&function(e,t){var n=e.$options.propsData||{},i=e._props=Le({}),o=e.$options._propKeys=[];e.$parent&&_e(!1);var a=function(a){o.push(a);var s=Cn(a,t,n,e);Ce(i,a,s),a in e||Rn(e,"_props",a)};for(var s in t)a(s);_e(!0)}(e,t.props),function(e){var t=e.$options,n=t.setup;if(n){var i=e._setupContext=yt(e);ue(e),be();var o=Tt(n,null,[e._props||Le({}),i],e,"setup");if(ke(),ue(),c(o))t.render=o;else if(d(o))if(e._setupState=o,o.__sfc){var a=e._setupProxy={};for(var s in o)"__sfc"!==s&&Ne(a,o,s)}else for(var s in o)B(s)||Ne(e,o,s);else 0}}(e),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?O:P(t[n],e)}(e,t.methods),t.data)!function(e){var t=e.$options.data;h(t=e._data=c(t)?function(e,t){be();try{return e.call(t,t)}catch(e){return jt(e,t,"data()"),{}}finally{ke()}}(t,e):t||{})||(t={});var n=Object.keys(t),i=e.$options.props,o=(e.$options.methods,n.length);for(;o--;){var a=n[o];0,i&&x(i,a)||B(a)||Rn(e,"_data",a)}var s=ze(t);s&&s.vmCount++}(e);else{var n=ze(e._data={});n&&n.vmCount++}t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),i=ae();for(var o in t){var a=t[o],s=c(a)?a:a.get;0,i||(n[o]=new Bt(e,s||O,O,Nn)),o in e||Mn(e,o,a)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var i=t[n];if(o(i))for(var a=0;a<i.length;a++)$n(e,n,i[a]);else $n(e,n,i)}}(e,t.watch)}var Nn={lazy:!0};function Mn(e,t,n){var i=!ae();c(n)?(Wn.get=i?qn(t):Un(n),Wn.set=O):(Wn.get=n.get?i&&!1!==n.cache?qn(t):Un(n.get):O,Wn.set=n.set||O),Object.defineProperty(e,t,Wn)}function qn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),we.target&&t.depend(),t.value}}function Un(e){return function(){return e.call(this,this)}}function $n(e,t,n,i){return h(n)&&(i=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,i)}var Bn=0;function Gn(e){var t=e.options;if(e.super){var n=Gn(e.super);if(n!==e.superOptions){e.superOptions=n;var i=function(e){var t,n=e.options,i=e.sealedOptions;for(var o in n)n[o]!==i[o]&&(t||(t={}),t[o]=n[o]);return t}(e);i&&C(e.extendOptions,i),(t=e.options=Pn(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Fn(e){this._init(e)}function Yn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,i=n.cid,o=e._Ctor||(e._Ctor={});if(o[i])return o[i];var a=yn(e)||yn(n.options);var s=function(e){this._init(e)};return(s.prototype=Object.create(n.prototype)).constructor=s,s.cid=t++,s.options=Pn(n.options,e),s.super=n,s.options.props&&function(e){var t=e.options.props;for(var n in t)Rn(e.prototype,"_props",n)}(s),s.options.computed&&function(e){var t=e.options.computed;for(var n in t)Mn(e.prototype,n,t[n])}(s),s.extend=n.extend,s.mixin=n.mixin,s.use=n.use,M.forEach((function(e){s[e]=n[e]})),a&&(s.options.components[a]=s),s.superOptions=n.options,s.extendOptions=e,s.sealedOptions=C({},s.options),o[i]=s,s}}function Vn(e){return e&&(yn(e.Ctor.options)||e.tag)}function Kn(e,t){return o(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!p(e)&&e.test(t)}function Jn(e,t){var n=e.cache,i=e.keys,o=e._vnode;for(var a in n){var s=n[a];if(s){var r=s.name;r&&!t(r)&&Zn(n,a,i,o)}}}function Zn(e,t,n,i){var o=e[t];!o||i&&o.tag===i.tag||o.componentInstance.$destroy(),e[t]=null,b(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Bn++,t._isVue=!0,t.__v_skip=!0,t._scope=new qe(!0),t._scope._vm=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),i=t._parentVnode;n.parent=t.parent,n._parentVnode=i;var o=i.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Pn(Gn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Vt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,o=n&&n.context;e.$slots=ut(t._renderChildren,o),e.$scopedSlots=n?ft(e.$parent,n.data.scopedSlots,e.$slots):i,e._c=function(t,n,i,o){return St(e,t,n,i,o,!1)},e.$createElement=function(t,n,i,o){return St(e,t,n,i,o,!0)};var a=n&&n.data;Ce(e,"$attrs",a&&a.attrs||i,null,!0),Ce(e,"$listeners",t._parentListeners||i,null,!0)}(t),Xt(t,"beforeCreate",void 0,!1),function(e){var t=pn(e.$options.inject,e);t&&(_e(!1),Object.keys(t).forEach((function(n){Ce(e,n,t[n])})),_e(!0))}(t),Hn(t),function(e){var t=e.$options.provide;if(t){var n=c(t)?t.call(e):t;if(!d(n))return;for(var i=Ue(e),o=ce?Reflect.ownKeys(n):Object.keys(n),a=0;a<o.length;a++){var s=o[a];Object.defineProperty(i,s,Object.getOwnPropertyDescriptor(n,s))}}}(t),Xt(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Fn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ee,e.prototype.$delete=Oe,e.prototype.$watch=function(e,t,n){if(h(t))return $n(this,e,t,n);(n=n||{}).user=!0;var i=new Bt(this,e,t,n);if(n.immediate){var o='callback for immediate watcher "'.concat(i.expression,'"');be(),Tt(t,this,[i.value],this,o),ke()}return function(){i.teardown()}}}(Fn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var i=this;if(o(e))for(var a=0,s=e.length;a<s;a++)i.$on(e[a],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function i(){n.$off(e,i),t.apply(n,arguments)}return i.fn=t,n.$on(e,i),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(o(e)){for(var i=0,a=e.length;i<a;i++)n.$off(e[i],t);return n}var s,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var l=r.length;l--;)if((s=r[l])===t||s.fn===t){r.splice(l,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?z(n):n;for(var i=z(arguments,1),o='event handler for "'.concat(e,'"'),a=0,s=n.length;a<s;a++)Tt(n[a],t,i,t,o)}return t}}(Fn),function(e){e.prototype._update=function(e,t){var n=this,i=n.$el,o=n._vnode,a=Jt(n);n._vnode=e,n.$el=o?n.__patch__(o,e):n.__patch__(n.$el,e,t,!1),a(),i&&(i.__vue__=null),n.$el&&(n.$el.__vue__=n);for(var s=n;s&&s.$vnode&&s.$parent&&s.$vnode===s.$parent._vnode;)s.$parent.$el=s.$el,s=s.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Xt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Xt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Fn),function(e){dt(e.prototype),e.prototype.$nextTick=function(e){return Ht(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,i=n.render,a=n._parentVnode;a&&t._isMounted&&(t.$scopedSlots=ft(t.$parent,a.data.scopedSlots,t.$slots,t.$scopedSlots),t._slotsProxy&&bt(t._slotsProxy,t.$scopedSlots)),t.$vnode=a;try{ue(t),kt=t,e=i.call(t._renderProxy,t.$createElement)}catch(n){jt(n,t,"render"),e=t._vnode}finally{kt=null,ue()}return o(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=pe()),e.parent=a,e}}(Fn);var Qn=[String,RegExp,Array],Xn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Qn,exclude:Qn,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,i=this.keyToCache;if(n){var o=n.tag,a=n.componentInstance,s=n.componentOptions;e[i]={name:Vn(s),tag:o,componentInstance:a},t.push(i),this.max&&t.length>parseInt(this.max)&&Zn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Zn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Jn(e,(function(e){return Kn(t,e)}))})),this.$watch("exclude",(function(t){Jn(e,(function(e){return!Kn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=At(e),n=t&&t.componentOptions;if(n){var i=Vn(n),o=this.include,a=this.exclude;if(o&&(!i||!Kn(o,i))||a&&i&&Kn(a,i))return t;var s=this.cache,r=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;s[l]?(t.componentInstance=s[l].componentInstance,b(r,l),r.push(l)):(this.vnodeToCache=t,this.keyToCache=l),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return U}};Object.defineProperty(e,"config",t),e.util={warn:xn,extend:C,mergeOptions:Pn,defineReactive:Ce},e.set=Ee,e.delete=Oe,e.nextTick=Ht,e.observable=function(e){return ze(e),e},e.options=Object.create(null),M.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,Xn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=z(arguments,1);return n.unshift(this),c(e.install)?e.install.apply(e,n):c(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Pn(this.options,e),this}}(e),Yn(e),function(e){M.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&h(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&c(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Fn),Object.defineProperty(Fn.prototype,"$isServer",{get:ae}),Object.defineProperty(Fn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Fn,"FunctionalRenderContext",{value:fn}),Fn.version="2.7.14";var ei=w("style,class"),ti=w("input,textarea,option,select,progress"),ni=w("contenteditable,draggable,spellcheck"),ii=w("events,caret,typing,plaintext-only"),oi=w("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ai="http://www.w3.org/1999/xlink",si=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},ri=function(e){return si(e)?e.slice(6,e.length):""},li=function(e){return null==e||!1===e};function ci(e){for(var t=e.data,n=e,i=e;s(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(t=di(i.data,t));for(;s(n=n.parent);)n&&n.data&&(t=di(t,n.data));return function(e,t){if(s(e)||s(t))return ui(e,hi(t));return""}(t.staticClass,t.class)}function di(e,t){return{staticClass:ui(e.staticClass,t.staticClass),class:s(e.class)?[e.class,t.class]:t.class}}function ui(e,t){return e?t?e+" "+t:e:t||""}function hi(e){return Array.isArray(e)?function(e){for(var t,n="",i=0,o=e.length;i<o;i++)s(t=hi(e[i]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):d(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var pi={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},fi=w("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),mi=w("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),gi=function(e){return fi(e)||mi(e)};var yi=Object.create(null);var wi=w("text,number,password,search,email,tel,url");var vi=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(pi[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),bi={create:function(e,t){ki(t)},update:function(e,t){e.data.ref!==t.data.ref&&(ki(e,!0),ki(t))},destroy:function(e){ki(e,!0)}};function ki(e,t){var n=e.data.ref;if(s(n)){var i=e.context,a=e.componentInstance||e.elm,r=t?null:a,l=t?void 0:a;if(c(n))Tt(n,i,[r],i,"template ref function");else{var d=e.data.refInFor,u="string"==typeof n||"number"==typeof n,h=He(n),p=i.$refs;if(u||h)if(d){var f=u?p[n]:n.value;t?o(f)&&b(f,a):o(f)?f.includes(a)||f.push(a):u?(p[n]=[a],xi(i,n,p[n])):n.value=[a]}else if(u){if(t&&p[n]!==a)return;p[n]=l,xi(i,n,r)}else if(h){if(t&&n.value!==a)return;n.value=r}else 0}}}function xi(e,t,n){var i=e._setupState;i&&x(i,t)&&(He(i[t])?i[t].value=n:i[t]=n)}var Ai=new he("",{},[]),Si=["create","activate","update","remove","destroy"];function ji(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&s(e.data)===s(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,i=s(n=e.data)&&s(n=n.attrs)&&n.type,o=s(n=t.data)&&s(n=n.attrs)&&n.type;return i===o||wi(i)&&wi(o)}(e,t)||r(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function Ti(e,t,n){var i,o,a={};for(i=t;i<=n;++i)s(o=e[i].key)&&(a[o]=i);return a}var _i={create:Ii,update:Ii,destroy:function(e){Ii(e,Ai)}};function Ii(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,i,o,a=e===Ai,s=t===Ai,r=zi(e.data.directives,e.context),l=zi(t.data.directives,t.context),c=[],d=[];for(n in l)i=r[n],o=l[n],i?(o.oldValue=i.value,o.oldArg=i.arg,Ei(o,"update",t,e),o.def&&o.def.componentUpdated&&d.push(o)):(Ei(o,"bind",t,e),o.def&&o.def.inserted&&c.push(o));if(c.length){var u=function(){for(var n=0;n<c.length;n++)Ei(c[n],"inserted",t,e)};a?Fe(t,"insert",u):u()}d.length&&Fe(t,"postpatch",(function(){for(var n=0;n<d.length;n++)Ei(d[n],"componentUpdated",t,e)}));if(!a)for(n in r)l[n]||Ei(r[n],"unbind",e,e,s)}(e,t)}var Pi=Object.create(null);function zi(e,t){var n,i,o=Object.create(null);if(!e)return o;for(n=0;n<e.length;n++){if((i=e[n]).modifiers||(i.modifiers=Pi),o[Ci(i)]=i,t._setupState&&t._setupState.__sfc){var a=i.def||zn(t,"_setupState","v-"+i.name);i.def="function"==typeof a?{bind:a,update:a}:a}i.def=i.def||zn(t.$options,"directives",i.name)}return o}function Ci(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Ei(e,t,n,i,o){var a=e.def&&e.def[t];if(a)try{a(n.elm,e,n,i,o)}catch(i){jt(i,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var Oi=[bi,_i];function Di(e,t){var n=t.componentOptions;if(!(s(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var i,o,l=t.elm,c=e.data.attrs||{},d=t.data.attrs||{};for(i in(s(d.__ob__)||r(d._v_attr_proxy))&&(d=t.data.attrs=C({},d)),d)o=d[i],c[i]!==o&&Li(l,i,o,t.data.pre);for(i in(J||Q)&&d.value!==c.value&&Li(l,"value",d.value),c)a(d[i])&&(si(i)?l.removeAttributeNS(ai,ri(i)):ni(i)||l.removeAttribute(i))}}function Li(e,t,n,i){i||e.tagName.indexOf("-")>-1?Wi(e,t,n):oi(t)?li(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):ni(t)?e.setAttribute(t,function(e,t){return li(t)||"false"===t?"false":"contenteditable"===e&&ii(t)?t:"true"}(t,n)):si(t)?li(n)?e.removeAttributeNS(ai,ri(t)):e.setAttributeNS(ai,t,n):Wi(e,t,n)}function Wi(e,t,n){if(li(n))e.removeAttribute(t);else{if(J&&!Z&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var i=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",i)};e.addEventListener("input",i),e.__ieph=!0}e.setAttribute(t,n)}}var Ri={create:Di,update:Di};function Hi(e,t){var n=t.elm,i=t.data,o=e.data;if(!(a(i.staticClass)&&a(i.class)&&(a(o)||a(o.staticClass)&&a(o.class)))){var r=ci(t),l=n._transitionClasses;s(l)&&(r=ui(r,hi(l))),r!==n._prevClass&&(n.setAttribute("class",r),n._prevClass=r)}}var Ni,Mi={create:Hi,update:Hi};function qi(e,t,n){var i=Ni;return function o(){var a=t.apply(null,arguments);null!==a&&Bi(e,o,n,i)}}var Ui=zt&&!(te&&Number(te[1])<=53);function $i(e,t,n,i){if(Ui){var o=rn,a=t;t=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}Ni.addEventListener(e,t,ie?{capture:n,passive:i}:n)}function Bi(e,t,n,i){(i||Ni).removeEventListener(e,t._wrapper||t,n)}function Gi(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},i=e.data.on||{};Ni=t.elm||e.elm,function(e){if(s(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}s(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),Ge(n,i,$i,Bi,qi,t.context),Ni=void 0}}var Fi,Yi={create:Gi,update:Gi,destroy:function(e){return Gi(e,Ai)}};function Vi(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,i,o=t.elm,l=e.data.domProps||{},c=t.data.domProps||{};for(n in(s(c.__ob__)||r(c._v_attr_proxy))&&(c=t.data.domProps=C({},c)),l)n in c||(o[n]="");for(n in c){if(i=c[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),i===l[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=i;var d=a(i)?"":String(i);Ki(o,d)&&(o.value=d)}else if("innerHTML"===n&&mi(o.tagName)&&a(o.innerHTML)){(Fi=Fi||document.createElement("div")).innerHTML="<svg>".concat(i,"</svg>");for(var u=Fi.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;u.firstChild;)o.appendChild(u.firstChild)}else if(i!==l[n])try{o[n]=i}catch(e){}}}}function Ki(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,i=e._vModifiers;if(s(i)){if(i.number)return y(n)!==y(t);if(i.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Ji={create:Vi,update:Vi},Zi=A((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var i=e.split(n);i.length>1&&(t[i[0].trim()]=i[1].trim())}})),t}));function Qi(e){var t=Xi(e.style);return e.staticStyle?C(e.staticStyle,t):t}function Xi(e){return Array.isArray(e)?E(e):"string"==typeof e?Zi(e):e}var eo,to=/^--/,no=/\s*!important$/,io=function(e,t,n){if(to.test(t))e.style.setProperty(t,n);else if(no.test(n))e.style.setProperty(I(t),n.replace(no,""),"important");else{var i=ao(t);if(Array.isArray(n))for(var o=0,a=n.length;o<a;o++)e.style[i]=n[o];else e.style[i]=n}},oo=["Webkit","Moz","ms"],ao=A((function(e){if(eo=eo||document.createElement("div").style,"filter"!==(e=j(e))&&e in eo)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<oo.length;n++){var i=oo[n]+t;if(i in eo)return i}}));function so(e,t){var n=t.data,i=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(i.staticStyle)&&a(i.style))){var o,r,l=t.elm,c=i.staticStyle,d=i.normalizedStyle||i.style||{},u=c||d,h=Xi(t.data.style)||{};t.data.normalizedStyle=s(h.__ob__)?C({},h):h;var p=function(e,t){var n,i={};if(t)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Qi(o.data))&&C(i,n);(n=Qi(e.data))&&C(i,n);for(var a=e;a=a.parent;)a.data&&(n=Qi(a.data))&&C(i,n);return i}(t,!0);for(r in u)a(p[r])&&io(l,r,"");for(r in p)(o=p[r])!==u[r]&&io(l,r,null==o?"":o)}}var ro={create:so,update:so},lo=/\s+/;function co(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(lo).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function uo(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(lo).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),i=" "+t+" ";n.indexOf(i)>=0;)n=n.replace(i," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ho(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&C(t,po(e.name||"v")),C(t,e),t}return"string"==typeof e?po(e):void 0}}var po=A((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),fo=V&&!Z,mo="transition",go="transitionend",yo="animation",wo="animationend";fo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mo="WebkitTransition",go="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(yo="WebkitAnimation",wo="webkitAnimationEnd"));var vo=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function bo(e){vo((function(){vo(e)}))}function ko(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),co(e,t))}function xo(e,t){e._transitionClasses&&b(e._transitionClasses,t),uo(e,t)}function Ao(e,t,n){var i=jo(e,t),o=i.type,a=i.timeout,s=i.propCount;if(!o)return n();var r="transition"===o?go:wo,l=0,c=function(){e.removeEventListener(r,d),n()},d=function(t){t.target===e&&++l>=s&&c()};setTimeout((function(){l<s&&c()}),a+1),e.addEventListener(r,d)}var So=/\b(transform|all)(,|$)/;function jo(e,t){var n,i=window.getComputedStyle(e),o=(i[mo+"Delay"]||"").split(", "),a=(i[mo+"Duration"]||"").split(", "),s=To(o,a),r=(i[yo+"Delay"]||"").split(", "),l=(i[yo+"Duration"]||"").split(", "),c=To(r,l),d=0,u=0;return"transition"===t?s>0&&(n="transition",d=s,u=a.length):"animation"===t?c>0&&(n="animation",d=c,u=l.length):u=(n=(d=Math.max(s,c))>0?s>c?"transition":"animation":null)?"transition"===n?a.length:l.length:0,{type:n,timeout:d,propCount:u,hasTransform:"transition"===n&&So.test(i[mo+"Property"])}}function To(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return _o(t)+_o(e[n])})))}function _o(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Io(e,t){var n=e.elm;s(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var i=ho(e.data.transition);if(!a(i)&&!s(n._enterCb)&&1===n.nodeType){for(var o=i.css,r=i.type,l=i.enterClass,u=i.enterToClass,h=i.enterActiveClass,p=i.appearClass,f=i.appearToClass,m=i.appearActiveClass,g=i.beforeEnter,w=i.enter,v=i.afterEnter,b=i.enterCancelled,k=i.beforeAppear,x=i.appear,A=i.afterAppear,S=i.appearCancelled,j=i.duration,T=Kt,_=Kt.$vnode;_&&_.parent;)T=_.context,_=_.parent;var I=!T._isMounted||!e.isRootInsert;if(!I||x||""===x){var P=I&&p?p:l,z=I&&m?m:h,C=I&&f?f:u,E=I&&k||g,O=I&&c(x)?x:w,D=I&&A||v,L=I&&S||b,W=y(d(j)?j.enter:j);0;var R=!1!==o&&!Z,N=Co(O),M=n._enterCb=H((function(){R&&(xo(n,C),xo(n,z)),M.cancelled?(R&&xo(n,P),L&&L(n)):D&&D(n),n._enterCb=null}));e.data.show||Fe(e,"insert",(function(){var t=n.parentNode,i=t&&t._pending&&t._pending[e.key];i&&i.tag===e.tag&&i.elm._leaveCb&&i.elm._leaveCb(),O&&O(n,M)})),E&&E(n),R&&(ko(n,P),ko(n,z),bo((function(){xo(n,P),M.cancelled||(ko(n,C),N||(zo(W)?setTimeout(M,W):Ao(n,r,M)))}))),e.data.show&&(t&&t(),O&&O(n,M)),R||N||M()}}}function Po(e,t){var n=e.elm;s(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var i=ho(e.data.transition);if(a(i)||1!==n.nodeType)return t();if(!s(n._leaveCb)){var o=i.css,r=i.type,l=i.leaveClass,c=i.leaveToClass,u=i.leaveActiveClass,h=i.beforeLeave,p=i.leave,f=i.afterLeave,m=i.leaveCancelled,g=i.delayLeave,w=i.duration,v=!1!==o&&!Z,b=Co(p),k=y(d(w)?w.leave:w);0;var x=n._leaveCb=H((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(xo(n,c),xo(n,u)),x.cancelled?(v&&xo(n,l),m&&m(n)):(t(),f&&f(n)),n._leaveCb=null}));g?g(A):A()}function A(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),h&&h(n),v&&(ko(n,l),ko(n,u),bo((function(){xo(n,l),x.cancelled||(ko(n,c),b||(zo(k)?setTimeout(x,k):Ao(n,r,x)))}))),p&&p(n,x),v||b||x())}}function zo(e){return"number"==typeof e&&!isNaN(e)}function Co(e){if(a(e))return!1;var t=e.fns;return s(t)?Co(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Eo(e,t){!0!==t.data.show&&Io(t)}var Oo=function(e){var t,n,i={},c=e.modules,d=e.nodeOps;for(t=0;t<Si.length;++t)for(i[Si[t]]=[],n=0;n<c.length;++n)s(c[n][Si[t]])&&i[Si[t]].push(c[n][Si[t]]);function u(e){var t=d.parentNode(e);s(t)&&d.removeChild(t,e)}function h(e,t,n,o,a,l,c){if(s(e.elm)&&s(l)&&(e=l[c]=me(e)),e.isRootInsert=!a,!function(e,t,n,o){var a=e.data;if(s(a)){var l=s(e.componentInstance)&&a.keepAlive;if(s(a=a.hook)&&s(a=a.init)&&a(e,!1),s(e.componentInstance))return p(e,t),f(n,e.elm,o),r(l)&&function(e,t,n,o){var a,r=e;for(;r.componentInstance;)if(r=r.componentInstance._vnode,s(a=r.data)&&s(a=a.transition)){for(a=0;a<i.activate.length;++a)i.activate[a](Ai,r);t.push(r);break}f(n,e.elm,o)}(e,t,n,o),!0}}(e,t,n,o)){var u=e.data,h=e.children,g=e.tag;s(g)?(e.elm=e.ns?d.createElementNS(e.ns,g):d.createElement(g,e),v(e),m(e,h,t),s(u)&&y(e,t),f(n,e.elm,o)):r(e.isComment)?(e.elm=d.createComment(e.text),f(n,e.elm,o)):(e.elm=d.createTextNode(e.text),f(n,e.elm,o))}}function p(e,t){s(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(y(e,t),v(e)):(ki(e),t.push(e))}function f(e,t,n){s(e)&&(s(n)?d.parentNode(n)===e&&d.insertBefore(e,t,n):d.appendChild(e,t))}function m(e,t,n){if(o(t)){0;for(var i=0;i<t.length;++i)h(t[i],n,e.elm,null,!0,t,i)}else l(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return s(e.tag)}function y(e,n){for(var o=0;o<i.create.length;++o)i.create[o](Ai,e);s(t=e.data.hook)&&(s(t.create)&&t.create(Ai,e),s(t.insert)&&n.push(e))}function v(e){var t;if(s(t=e.fnScopeId))d.setStyleScope(e.elm,t);else for(var n=e;n;)s(t=n.context)&&s(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t),n=n.parent;s(t=Kt)&&t!==e.context&&t!==e.fnContext&&s(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t)}function b(e,t,n,i,o,a){for(;i<=o;++i)h(n[i],a,e,t,!1,n,i)}function k(e){var t,n,o=e.data;if(s(o))for(s(t=o.hook)&&s(t=t.destroy)&&t(e),t=0;t<i.destroy.length;++t)i.destroy[t](e);if(s(t=e.children))for(n=0;n<e.children.length;++n)k(e.children[n])}function x(e,t,n){for(;t<=n;++t){var i=e[t];s(i)&&(s(i.tag)?(A(i),k(i)):u(i.elm))}}function A(e,t){if(s(t)||s(e.data)){var n,o=i.remove.length+1;for(s(t)?t.listeners+=o:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,o),s(n=e.componentInstance)&&s(n=n._vnode)&&s(n.data)&&A(n,t),n=0;n<i.remove.length;++n)i.remove[n](e,t);s(n=e.data.hook)&&s(n=n.remove)?n(e,t):t()}else u(e.elm)}function S(e,t,n,i){for(var o=n;o<i;o++){var a=t[o];if(s(a)&&ji(e,a))return o}}function j(e,t,n,o,l,c){if(e!==t){s(t.elm)&&s(o)&&(t=o[l]=me(t));var u=t.elm=e.elm;if(r(e.isAsyncPlaceholder))s(t.asyncFactory.resolved)?I(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(r(t.isStatic)&&r(e.isStatic)&&t.key===e.key&&(r(t.isCloned)||r(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,f=t.data;s(f)&&s(p=f.hook)&&s(p=p.prepatch)&&p(e,t);var m=e.children,y=t.children;if(s(f)&&g(t)){for(p=0;p<i.update.length;++p)i.update[p](e,t);s(p=f.hook)&&s(p=p.update)&&p(e,t)}a(t.text)?s(m)&&s(y)?m!==y&&function(e,t,n,i,o){var r,l,c,u=0,p=0,f=t.length-1,m=t[0],g=t[f],y=n.length-1,w=n[0],v=n[y],k=!o;for(0;u<=f&&p<=y;)a(m)?m=t[++u]:a(g)?g=t[--f]:ji(m,w)?(j(m,w,i,n,p),m=t[++u],w=n[++p]):ji(g,v)?(j(g,v,i,n,y),g=t[--f],v=n[--y]):ji(m,v)?(j(m,v,i,n,y),k&&d.insertBefore(e,m.elm,d.nextSibling(g.elm)),m=t[++u],v=n[--y]):ji(g,w)?(j(g,w,i,n,p),k&&d.insertBefore(e,g.elm,m.elm),g=t[--f],w=n[++p]):(a(r)&&(r=Ti(t,u,f)),a(l=s(w.key)?r[w.key]:S(w,t,u,f))?h(w,i,e,m.elm,!1,n,p):ji(c=t[l],w)?(j(c,w,i,n,p),t[l]=void 0,k&&d.insertBefore(e,c.elm,m.elm)):h(w,i,e,m.elm,!1,n,p),w=n[++p]);u>f?b(e,a(n[y+1])?null:n[y+1].elm,n,p,y,i):p>y&&x(t,u,f)}(u,m,y,n,c):s(y)?(s(e.text)&&d.setTextContent(u,""),b(u,null,y,0,y.length-1,n)):s(m)?x(m,0,m.length-1):s(e.text)&&d.setTextContent(u,""):e.text!==t.text&&d.setTextContent(u,t.text),s(f)&&s(p=f.hook)&&s(p=p.postpatch)&&p(e,t)}}}function T(e,t,n){if(r(n)&&s(e.parent))e.parent.data.pendingInsert=t;else for(var i=0;i<t.length;++i)t[i].data.hook.insert(t[i])}var _=w("attrs,class,staticClass,staticStyle,key");function I(e,t,n,i){var o,a=t.tag,l=t.data,c=t.children;if(i=i||l&&l.pre,t.elm=e,r(t.isComment)&&s(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(s(l)&&(s(o=l.hook)&&s(o=o.init)&&o(t,!0),s(o=t.componentInstance)))return p(t,n),!0;if(s(a)){if(s(c))if(e.hasChildNodes())if(s(o=l)&&s(o=o.domProps)&&s(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var d=!0,u=e.firstChild,h=0;h<c.length;h++){if(!u||!I(u,c[h],n,i)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else m(t,c,n);if(s(l)){var f=!1;for(var g in l)if(!_(g)){f=!0,y(t,n);break}!f&&l.class&&qt(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!a(t)){var l,c=!1,u=[];if(a(e))c=!0,h(t,u);else{var p=s(e.nodeType);if(!p&&ji(e,t))j(e,t,u,null,null,o);else{if(p){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),r(n)&&I(e,t,u))return T(t,u,!0),e;l=e,e=new he(d.tagName(l).toLowerCase(),{},[],void 0,l)}var f=e.elm,m=d.parentNode(f);if(h(t,u,f._leaveCb?null:m,d.nextSibling(f)),s(t.parent))for(var y=t.parent,w=g(t);y;){for(var v=0;v<i.destroy.length;++v)i.destroy[v](y);if(y.elm=t.elm,w){for(var b=0;b<i.create.length;++b)i.create[b](Ai,y);var A=y.data.hook.insert;if(A.merged)for(var S=1;S<A.fns.length;S++)A.fns[S]()}else ki(y);y=y.parent}s(m)?x([e],0,0):s(e.tag)&&k(e)}}return T(t,u,c),t.elm}s(e)&&k(e)}}({nodeOps:vi,modules:[Ri,Mi,Yi,Ji,ro,V?{create:Eo,activate:Eo,remove:function(e,t){!0!==e.data.show?Po(e,t):t()}}:{}].concat(Oi)});Z&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&qo(e,"input")}));var Do={inserted:function(e,t,n,i){"select"===n.tag?(i.elm&&!i.elm._vOptions?Fe(n,"postpatch",(function(){Do.componentUpdated(e,t,n)})):Lo(e,t,n.context),e._vOptions=[].map.call(e.options,Ho)):("textarea"===n.tag||wi(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",No),e.addEventListener("compositionend",Mo),e.addEventListener("change",Mo),Z&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Lo(e,t,n.context);var i=e._vOptions,o=e._vOptions=[].map.call(e.options,Ho);if(o.some((function(e,t){return!W(e,i[t])})))(e.multiple?t.value.some((function(e){return Ro(e,o)})):t.value!==t.oldValue&&Ro(t.value,o))&&qo(e,"change")}}};function Lo(e,t,n){Wo(e,t,n),(J||Q)&&setTimeout((function(){Wo(e,t,n)}),0)}function Wo(e,t,n){var i=t.value,o=e.multiple;if(!o||Array.isArray(i)){for(var a,s,r=0,l=e.options.length;r<l;r++)if(s=e.options[r],o)a=R(i,Ho(s))>-1,s.selected!==a&&(s.selected=a);else if(W(Ho(s),i))return void(e.selectedIndex!==r&&(e.selectedIndex=r));o||(e.selectedIndex=-1)}}function Ro(e,t){return t.every((function(t){return!W(t,e)}))}function Ho(e){return"_value"in e?e._value:e.value}function No(e){e.target.composing=!0}function Mo(e){e.target.composing&&(e.target.composing=!1,qo(e.target,"input"))}function qo(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Uo(e){return!e.componentInstance||e.data&&e.data.transition?e:Uo(e.componentInstance._vnode)}var $o={model:Do,show:{bind:function(e,t,n){var i=t.value,o=(n=Uo(n)).data&&n.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;i&&o?(n.data.show=!0,Io(n,(function(){e.style.display=a}))):e.style.display=i?a:"none"},update:function(e,t,n){var i=t.value;!i!=!t.oldValue&&((n=Uo(n)).data&&n.data.transition?(n.data.show=!0,i?Io(n,(function(){e.style.display=e.__vOriginalDisplay})):Po(n,(function(){e.style.display="none"}))):e.style.display=i?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,i,o){o||(e.style.display=e.__vOriginalDisplay)}}},Bo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Go(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Go(At(t.children)):e}function Fo(e){var t={},n=e.$options;for(var i in n.propsData)t[i]=e[i];var o=n._parentListeners;for(var i in o)t[j(i)]=o[i];return t}function Yo(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Vo=function(e){return e.tag||pt(e)},Ko=function(e){return"show"===e.name},Jo={name:"transition",props:Bo,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Vo)).length){0;var i=this.mode;0;var o=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var a=Go(o);if(!a)return o;if(this._leaving)return Yo(e,o);var s="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?s+"comment":s+a.tag:l(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var r=(a.data||(a.data={})).transition=Fo(this),c=this._vnode,d=Go(c);if(a.data.directives&&a.data.directives.some(Ko)&&(a.data.show=!0),d&&d.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(a,d)&&!pt(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=C({},r);if("out-in"===i)return this._leaving=!0,Fe(u,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Yo(e,o);if("in-out"===i){if(pt(a))return c;var h,p=function(){h()};Fe(r,"afterEnter",p),Fe(r,"enterCancelled",p),Fe(u,"delayLeave",(function(e){h=e}))}}return o}}},Zo=C({tag:String,moveClass:String},Bo);function Qo(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Xo(e){e.data.newPos=e.elm.getBoundingClientRect()}function ea(e){var t=e.data.pos,n=e.data.newPos,i=t.left-n.left,o=t.top-n.top;if(i||o){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate(".concat(i,"px,").concat(o,"px)"),a.transitionDuration="0s"}}delete Zo.mode;var ta={Transition:Jo,TransitionGroup:{props:Zo,beforeMount:function(){var e=this,t=this._update;this._update=function(n,i){var o=Jt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),t.call(e,n,i)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),i=this.prevChildren=this.children,o=this.$slots.default||[],a=this.children=[],s=Fo(this),r=0;r<o.length;r++){if((d=o[r]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))a.push(d),n[d.key]=d,(d.data||(d.data={})).transition=s;else;}if(i){var l=[],c=[];for(r=0;r<i.length;r++){var d;(d=i[r]).data.transition=s,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?l.push(d):c.push(d)}this.kept=e(t,null,l),this.removed=c}return e(t,null,a)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Qo),e.forEach(Xo),e.forEach(ea),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,i=n.style;ko(n,t),i.transform=i.WebkitTransform=i.transitionDuration="",n.addEventListener(go,n._moveCb=function e(i){i&&i.target!==n||i&&!/transform$/.test(i.propertyName)||(n.removeEventListener(go,e),n._moveCb=null,xo(n,t))})}})))},methods:{hasMove:function(e,t){if(!fo)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){uo(n,e)})),co(n,t),n.style.display="none",this.$el.appendChild(n);var i=jo(n);return this.$el.removeChild(n),this._hasMove=i.hasTransform}}}};Fn.config.mustUseProp=function(e,t,n){return"value"===n&&ti(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Fn.config.isReservedTag=gi,Fn.config.isReservedAttr=ei,Fn.config.getTagNamespace=function(e){return mi(e)?"svg":"math"===e?"math":void 0},Fn.config.isUnknownElement=function(e){if(!V)return!0;if(gi(e))return!1;if(e=e.toLowerCase(),null!=yi[e])return yi[e];var t=document.createElement(e);return e.indexOf("-")>-1?yi[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:yi[e]=/HTMLUnknownElement/.test(t.toString())},C(Fn.options.directives,$o),C(Fn.options.components,ta),Fn.prototype.__patch__=V?Oo:O,Fn.prototype.$mount=function(e,t){return function(e,t,n){var i;e.$el=t,e.$options.render||(e.$options.render=pe),Xt(e,"beforeMount"),i=function(){e._update(e._render(),n)},new Bt(e,i,O,{before:function(){e._isMounted&&!e._isDestroyed&&Xt(e,"beforeUpdate")}},!0),n=!1;var o=e._preWatchers;if(o)for(var a=0;a<o.length;a++)o[a].run();return null==e.$vnode&&(e._isMounted=!0,Xt(e,"mounted")),e}(this,e=e&&V?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},V&&setTimeout((function(){U.devtools&&se&&se.emit("init",Fn)}),0)},function(e,t,n){"use strict";var i=n(55),o=i.all;e.exports=i.IS_HTMLDDA?function(e){return"function"==typeof e||e===o}:function(e){return"function"==typeof e}},function(e,t,n){"use strict";var i=function(e){return e&&e.Math===Math&&e};e.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof global&&global)||function(){return this}()||this||Function("return this")()},function(e,t,n){"use strict";var i=n(28),o=Function.prototype,a=o.call,s=i&&o.bind.bind(a,a);e.exports=i?s:function(e){return function(){return a.apply(e,arguments)}}},function(e,t,n){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";var i=n(5);e.exports=!i((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var i=n(69),o="object"==typeof self&&self&&self.Object===Object&&self,a=i||o||Function("return this")();e.exports=a},function(e,t,n){"use strict";function i(e,t,n,i,o,a,s,r){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),i&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),s?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=l):o&&(l=r?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(e,t){return l.call(t),d(e,t)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";var i=n(4),o=n(33),a=i({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return a(o(e),t)}},function(e,t,n){"use strict";var i=n(2),o=n(55),a=o.all;e.exports=o.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:i(e)||e===a}:function(e){return"object"==typeof e?null!==e:i(e)}},function(e,t,n){var i=n(161),o=n(164);e.exports=function(e,t){var n=o(e,t);return i(n)?n:void 0}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";var i=n(1);t.a=new i.a},function(e,t,n){var i=n(17),o=n(146),a=n(147),s=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":s&&s in Object(e)?o(e):a(e)}},function(e,t,n){"use strict";var i=n(6),o=n(18),a=n(36);e.exports=i?function(e,t,n){return o.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var i=n(8).Symbol;e.exports=i},function(e,t,n){"use strict";var i=n(6),o=n(64),a=n(98),s=n(26),r=n(54),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;t.f=i?a?function(e,t,n){if(s(e),t=r(t),s(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var i=d(e,t);i&&i.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:i.configurable,enumerable:"enumerable"in n?n.enumerable:i.enumerable,writable:!1})}return c(e,t,n)}:c:function(e,t,n){if(s(e),t=r(t),s(n),o)try{return c(e,t,n)}catch(e){}if("get"in n||"set"in n)throw l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){"use strict";var i=n(4),o=i({}.toString),a=i("".slice);e.exports=function(e){return a(o(e),8,-1)}},function(e,t,n){var i=n(151),o=n(152),a=n(153),s=n(154),r=n(155);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=s,l.prototype.set=r,e.exports=l},function(e,t,n){var i=n(71);e.exports=function(e,t){for(var n=e.length;n--;)if(i(e[n][0],t))return n;return-1}},function(e,t,n){var i=n(12)(Object,"create");e.exports=i},function(e,t,n){var i=n(173);e.exports=function(e,t){var n=e.__data__;return i(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var i=n(46);e.exports=function(e){if("string"==typeof e||i(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var i,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(i=function(){var e,t,n={version:"0.2.0"},i=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,t,n){return e<t?t:e>n?n:e}function a(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(i[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=o(e,i.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(i.barSelector),d=i.speed,u=i.easing;return l.offsetWidth,s((function(t){""===i.positionUsing&&(i.positionUsing=n.getPositioningCSS()),r(c,function(e,t,n){var o;return(o="translate3d"===i.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+t+"ms "+n,o}(e,d,u)),1===e?(r(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){r(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),d)}),d)):setTimeout(t,d)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),i.trickleSpeed)};return i.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*o(Math.random()*t,.1,.95)),t=o(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*i.trickleRate)},e=0,t=0,n.promise=function(i){return i&&"resolved"!==i.state()?(0===t&&n.start(),e++,t++,i.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=i.template;var o,s=t.querySelector(i.barSelector),l=e?"-100":a(n.status||0),d=document.querySelector(i.parent);return r(s,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(o=t.querySelector(i.spinnerSelector))&&h(o),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(t),t},n.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(i.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&h(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),r=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var i,o=e.length,a=t.charAt(0).toUpperCase()+t.slice(1);o--;)if((i=e[o]+a)in n)return i;return t}(n))}function i(e,t,i){t=n(t),e.style[t]=i}return function(e,t){var n,o,a=arguments;if(2==a.length)for(n in t)void 0!==(o=t[n])&&t.hasOwnProperty(n)&&i(e,n,o);else i(e,a[1],a[2])}}();function l(e,t){return("string"==typeof e?e:u(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=u(e),i=n+t;l(n,t)||(e.className=i.substring(1))}function d(e,t){var n,i=u(e);l(e,t)&&(n=i.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function u(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function h(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?i.call(t,n,t,e):i)||(e.exports=o)},function(e,t,n){"use strict";var i=n(11),o=String,a=TypeError;e.exports=function(e){if(i(e))return e;throw a(o(e)+" is not an object")}},function(e,t,n){"use strict";var i=n(3),o=n(51).f,a=n(16),s=n(94),r=n(38),l=n(65),c=n(122);e.exports=function(e,t){var n,d,u,h,p,f=e.target,m=e.global,g=e.stat;if(n=m?i:g?i[f]||r(f,{}):(i[f]||{}).prototype)for(d in t){if(h=t[d],u=e.dontCallGetSet?(p=o(n,d))&&p.value:n[d],!c(m?d:f+(g?".":"#")+d,e.forced)&&void 0!==u){if(typeof h==typeof u)continue;l(h,u)}(e.sham||u&&u.sham)&&a(h,"sham",!0),s(n,d,h,e)}}},function(e,t,n){"use strict";var i=n(5);e.exports=!i((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,t,n){"use strict";var i=n(48),o=n(52);e.exports=function(e){return i(o(e))}},function(e,t,n){"use strict";var i=n(3),o=n(2),a=function(e){return o(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?a(i[e]):i[e]&&i[e][t]}},function(e,t,n){"use strict";var i=n(2),o=n(109),a=TypeError;e.exports=function(e){if(i(e))return e;throw a(o(e)+" is not a function")}},function(e,t,n){"use strict";var i=n(3),o=n(61),a=n(10),s=n(63),r=n(59),l=n(58),c=i.Symbol,d=o("wks"),u=l?c.for||c:c&&c.withoutSetter||s;e.exports=function(e){return a(d,e)||(d[e]=r&&a(c,e)?c[e]:u("Symbol."+e)),d[e]}},function(e,t,n){"use strict";var i=n(52),o=Object;e.exports=function(e){return o(i(e))}},function(e,t,n){"use strict";var i=n(120);e.exports=function(e){return i(e.length)}},function(e,t,n){"use strict";var i=n(28),o=Function.prototype.call;e.exports=i?o.bind(o):function(){return o.apply(o,arguments)}},function(e,t,n){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){"use strict";var i=n(3),o=n(38),a=i["__core-js_shared__"]||o("__core-js_shared__",{});e.exports=a},function(e,t,n){"use strict";var i=n(3),o=Object.defineProperty;e.exports=function(e,t){try{o(i,e,{value:t,configurable:!0,writable:!0})}catch(n){i[e]=t}return t}},function(e,t,n){var i=n(145),o=n(13),a=Object.prototype,s=a.hasOwnProperty,r=a.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(e){return o(e)&&s.call(e,"callee")&&!r.call(e,"callee")};e.exports=l},function(e,t,n){var i=n(12)(n(8),"Map");e.exports=i},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var i=n(165),o=n(172),a=n(174),s=n(175),r=n(176);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=s,l.prototype.set=r,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var i=n(7),o=n(46),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/;e.exports=function(e,t){if(i(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||(s.test(e)||!a.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var i=n(15),o=n(13);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==i(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";var i=n(4),o=n(5),a=n(19),s=Object,r=i("".split);e.exports=o((function(){return!s("z").propertyIsEnumerable(0)}))?function(e){return"String"===a(e)?r(e,""):s(e)}:s},function(e,t,n){"use strict";e.exports={}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var i=n(6),o=n(35),a=n(105),s=n(36),r=n(29),l=n(54),c=n(10),d=n(64),u=Object.getOwnPropertyDescriptor;t.f=i?u:function(e,t){if(e=r(e),t=l(t),d)try{return u(e,t)}catch(e){}if(c(e,t))return s(!o(a.f,e,t),e[t])}},function(e,t,n){"use strict";var i=n(53),o=TypeError;e.exports=function(e){if(i(e))throw o("Can't call method on "+e);return e}},function(e,t,n){"use strict";e.exports=function(e){return null==e}},function(e,t,n){"use strict";var i=n(106),o=n(56);e.exports=function(e){var t=i(e,"string");return o(t)?t:t+""}},function(e,t,n){"use strict";var i="object"==typeof document&&document.all,o=void 0===i&&void 0!==i;e.exports={all:i,IS_HTMLDDA:o}},function(e,t,n){"use strict";var i=n(30),o=n(2),a=n(57),s=n(58),r=Object;e.exports=s?function(e){return"symbol"==typeof e}:function(e){var t=i("Symbol");return o(t)&&a(t.prototype,r(e))}},function(e,t,n){"use strict";var i=n(4);e.exports=i({}.isPrototypeOf)},function(e,t,n){"use strict";var i=n(59);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){"use strict";var i=n(60),o=n(5),a=n(3).String;e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol("symbol detection");return!a(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},function(e,t,n){"use strict";var i,o,a=n(3),s=n(107),r=a.process,l=a.Deno,c=r&&r.versions||l&&l.version,d=c&&c.v8;d&&(o=(i=d.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!o&&s&&(!(i=s.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=s.match(/Chrome\/(\d+)/))&&(o=+i[1]),e.exports=o},function(e,t,n){"use strict";var i=n(62),o=n(37);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.32.1",mode:i?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.32.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,t,n){"use strict";e.exports=!1},function(e,t,n){"use strict";var i=n(4),o=0,a=Math.random(),s=i(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+s(++o+a,36)}},function(e,t,n){"use strict";var i=n(6),o=n(5),a=n(97);e.exports=!i&&!o((function(){return 7!==Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var i=n(10),o=n(115),a=n(51),s=n(18);e.exports=function(e,t,n){for(var r=o(t),l=s.f,c=a.f,d=0;d<r.length;d++){var u=r[d];i(e,u)||n&&i(n,u)||l(e,u,c(t,u))}}},function(e,t,n){"use strict";var i=n(119);e.exports=function(e){var t=+e;return t!=t||0===t?0:i(t)}},function(e,t,n){"use strict";var i=n(132),o=n(26),a=n(133);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=i(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return o(n),a(i),t?e(n,i):n.__proto__=i,n}}():void 0)},function(e,t){e.exports=function(e,t){for(var n=-1,i=t.length,o=e.length;++n<i;)e[o+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var i=n(20),o=n(156),a=n(157),s=n(158),r=n(159),l=n(160);function c(e){var t=this.__data__=new i(e);this.size=t.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=s,c.prototype.has=r,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var i=n(15),o=n(41);e.exports=function(e){if(!o(e))return!1;var t=i(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var i=n(177),o=n(13);e.exports=function e(t,n,a,s,r){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:i(t,n,a,s,e,r))}},function(e,t,n){var i=n(76),o=n(180),a=n(77);e.exports=function(e,t,n,s,r,l){var c=1&n,d=e.length,u=t.length;if(d!=u&&!(c&&u>d))return!1;var h=l.get(e),p=l.get(t);if(h&&p)return h==t&&p==e;var f=-1,m=!0,g=2&n?new i:void 0;for(l.set(e,t),l.set(t,e);++f<d;){var y=e[f],w=t[f];if(s)var v=c?s(w,y,f,t,e,l):s(y,w,f,e,t,l);if(void 0!==v){if(v)continue;m=!1;break}if(g){if(!o(t,(function(e,t){if(!a(g,t)&&(y===e||r(y,e,n,s,l)))return g.push(t)}))){m=!1;break}}else if(y!==w&&!r(y,w,n,s,l)){m=!1;break}}return l.delete(e),l.delete(t),m}},function(e,t,n){var i=n(42),o=n(178),a=n(179);function s(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new i;++t<n;)this.add(e[t])}s.prototype.add=s.prototype.push=o,s.prototype.has=a,e.exports=s},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var i=n(190),o=n(196),a=n(82);e.exports=function(e){return a(e)?i(e):o(e)}},function(e,t,n){(function(e){var i=n(8),o=n(192),a=t&&!t.nodeType&&t,s=a&&"object"==typeof e&&e&&!e.nodeType&&e,r=s&&s.exports===a?i.Buffer:void 0,l=(r?r.isBuffer:void 0)||o;e.exports=l}).call(this,n(50)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var i=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==i||"symbol"!=i&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var i=n(193),o=n(194),a=n(195),s=a&&a.isTypedArray,r=s?o(s):i;e.exports=r},function(e,t,n){var i=n(72),o=n(44);e.exports=function(e){return null!=e&&o(e.length)&&!i(e)}},function(e,t,n){var i=n(12)(n(8),"Set");e.exports=i},function(e,t,n){var i=n(41);e.exports=function(e){return e==e&&!i(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var i=n(87),o=n(24);e.exports=function(e,t){for(var n=0,a=(t=i(t,e)).length;null!=e&&n<a;)e=e[o(t[n++])];return n&&n==a?e:void 0}},function(e,t,n){var i=n(7),o=n(45),a=n(207),s=n(210);e.exports=function(e,t){return i(e)?e:o(e,t)?[e]:a(s(e))}},function(e,t,n){},function(e,t,n){},function(e,t,n){var i=n(143),o=n(148),a=n(219),s=n(227),r=n(236),l=n(102),c=a((function(e){var t=l(e);return r(t)&&(t=void 0),s(i(e,1,r,!0),o(t,2))}));e.exports=c},function(e,t){var n=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,s=parseInt,r="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=r||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,h=Math.min,p=function(){return c.Date.now()};function f(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==d.call(e)}(e))return NaN;if(f(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=f(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var r=o.test(e);return r||a.test(e)?s(e.slice(2),r?2:8):i.test(e)?NaN:+e}e.exports=function(e,t,n){var i,o,a,s,r,l,c=0,d=!1,g=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function w(t){var n=i,a=o;return i=o=void 0,c=t,s=e.apply(a,n)}function v(e){return c=e,r=setTimeout(k,t),d?w(e):s}function b(e){var n=e-l;return void 0===l||n>=t||n<0||g&&e-c>=a}function k(){var e=p();if(b(e))return x(e);r=setTimeout(k,function(e){var n=t-(e-l);return g?h(n,a-(e-c)):n}(e))}function x(e){return r=void 0,y&&i?w(e):(i=o=void 0,s)}function A(){var e=p(),n=b(e);if(i=arguments,o=this,l=e,n){if(void 0===r)return v(l);if(g)return r=setTimeout(k,t),w(l)}return void 0===r&&(r=setTimeout(k,t)),s}return t=m(t)||0,f(n)&&(d=!!n.leading,a=(g="maxWait"in n)?u(m(n.maxWait)||0,t):a,y="trailing"in n?!!n.trailing:y),A.cancel=function(){void 0!==r&&clearTimeout(r),c=0,i=l=o=r=void 0},A.flush=function(){return void 0===r?s:x(p())},A}},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,i=e.HTMLElement||e.Element,o={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:i.prototype.scroll||r,scrollIntoView:i.prototype.scrollIntoView},a=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,s=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?f.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):o.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?o.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):f.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},i.prototype.scroll=i.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;f.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},i.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},i.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=h(this),i=n.getBoundingClientRect(),a=this.getBoundingClientRect();n!==t.body?(f.call(this,n,n.scrollLeft+a.left-i.left,n.scrollTop+a.top-i.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})):e.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function r(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+s<e.scrollHeight:"X"===t?e.clientWidth+s<e.scrollWidth:void 0}function d(t,n){var i=e.getComputedStyle(t,null)["overflow"+n];return"auto"===i||"scroll"===i}function u(e){var t=c(e,"Y")&&d(e,"Y"),n=c(e,"X")&&d(e,"X");return t||n}function h(e){for(;e!==t.body&&!1===u(e);)e=e.parentNode||e.host;return e}function p(t){var n,i,o,s,r=(a()-t.startTime)/468;s=r=r>1?1:r,n=.5*(1-Math.cos(Math.PI*s)),i=t.startX+(t.x-t.startX)*n,o=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,i,o),i===t.x&&o===t.y||e.requestAnimationFrame(p.bind(e,t))}function f(n,i,s){var l,c,d,u,h=a();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,d=e.scrollY||e.pageYOffset,u=o.scroll):(l=n,c=n.scrollLeft,d=n.scrollTop,u=r),p({scrollable:l,method:u,startTime:h,startX:c,startY:d,x:i,y:s})}}}}()},function(e,t,n){"use strict";var i=n(27),o=n(33),a=n(34),s=n(126),r=n(128);i({target:"Array",proto:!0,arity:1,forced:n(5)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var t=o(this),n=a(t),i=arguments.length;r(n+i);for(var l=0;l<i;l++)t[n]=arguments[l],n++;return s(t,n),n}})},function(e,t,n){"use strict";var i=n(2),o=n(18),a=n(99),s=n(38);e.exports=function(e,t,n,r){r||(r={});var l=r.enumerable,c=void 0!==r.name?r.name:t;if(i(n)&&a(n,c,r),r.global)l?e[t]=n:s(t,n);else{try{r.unsafe?e[t]&&(l=!0):delete e[t]}catch(e){}l?e[t]=n:o.f(e,t,{value:n,enumerable:!1,configurable:!r.nonConfigurable,writable:!r.nonWritable})}return e}},function(e,t,n){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){"use strict";var i=n(137),o=String;e.exports=function(e){if("Symbol"===i(e))throw TypeError("Cannot convert a Symbol value to a string");return o(e)}},function(e,t,n){"use strict";var i=n(3),o=n(11),a=i.document,s=o(a)&&o(a.createElement);e.exports=function(e){return s?a.createElement(e):{}}},function(e,t,n){"use strict";var i=n(6),o=n(5);e.exports=i&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,t,n){"use strict";var i=n(4),o=n(5),a=n(2),s=n(10),r=n(6),l=n(111).CONFIGURABLE,c=n(112),d=n(113),u=d.enforce,h=d.get,p=String,f=Object.defineProperty,m=i("".slice),g=i("".replace),y=i([].join),w=r&&!o((function(){return 8!==f((function(){}),"length",{value:8}).length})),v=String(String).split("String"),b=e.exports=function(e,t,n){"Symbol("===m(p(t),0,7)&&(t="["+g(p(t),/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!s(e,"name")||l&&e.name!==t)&&(r?f(e,"name",{value:t,configurable:!0}):e.name=t),w&&n&&s(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&s(n,"constructor")&&n.constructor?r&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var i=u(e);return s(i,"source")||(i.source=y(v,"string"==typeof t?t:"")),e};Function.prototype.toString=b((function(){return a(this)&&h(this).source||c(this)}),"toString")},function(e,t,n){"use strict";var i=n(61),o=n(63),a=i("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t,n){"use strict";var i=n(4),o=n(10),a=n(29),s=n(117).indexOf,r=n(49),l=i([].push);e.exports=function(e,t){var n,i=a(e),c=0,d=[];for(n in i)!o(r,n)&&o(i,n)&&l(d,n);for(;t.length>c;)o(i,n=t[c++])&&(~s(d,n)||l(d,n));return d}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){e.exports=n(242)},function(e,t,n){"use strict";var i=n(27),o=n(123).left,a=n(124),s=n(60);i({target:"Array",proto:!0,forced:!n(125)&&s>79&&s<83||!a("reduce")},{reduce:function(e){var t=arguments.length;return o(this,e,t,t>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!i.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:i},function(e,t,n){"use strict";var i=n(35),o=n(11),a=n(56),s=n(108),r=n(110),l=n(32),c=TypeError,d=l("toPrimitive");e.exports=function(e,t){if(!o(e)||a(e))return e;var n,l=s(e,d);if(l){if(void 0===t&&(t="default"),n=i(l,e,t),!o(n)||a(n))return n;throw c("Can't convert object to primitive value")}return void 0===t&&(t="number"),r(e,t)}},function(e,t,n){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(e,t,n){"use strict";var i=n(31),o=n(53);e.exports=function(e,t){var n=e[t];return o(n)?void 0:i(n)}},function(e,t,n){"use strict";var i=String;e.exports=function(e){try{return i(e)}catch(e){return"Object"}}},function(e,t,n){"use strict";var i=n(35),o=n(2),a=n(11),s=TypeError;e.exports=function(e,t){var n,r;if("string"===t&&o(n=e.toString)&&!a(r=i(n,e)))return r;if(o(n=e.valueOf)&&!a(r=i(n,e)))return r;if("string"!==t&&o(n=e.toString)&&!a(r=i(n,e)))return r;throw s("Can't convert object to primitive value")}},function(e,t,n){"use strict";var i=n(6),o=n(10),a=Function.prototype,s=i&&Object.getOwnPropertyDescriptor,r=o(a,"name"),l=r&&"something"===function(){}.name,c=r&&(!i||i&&s(a,"name").configurable);e.exports={EXISTS:r,PROPER:l,CONFIGURABLE:c}},function(e,t,n){"use strict";var i=n(4),o=n(2),a=n(37),s=i(Function.toString);o(a.inspectSource)||(a.inspectSource=function(e){return s(e)}),e.exports=a.inspectSource},function(e,t,n){"use strict";var i,o,a,s=n(114),r=n(3),l=n(11),c=n(16),d=n(10),u=n(37),h=n(100),p=n(49),f=r.TypeError,m=r.WeakMap;if(s||u.state){var g=u.state||(u.state=new m);g.get=g.get,g.has=g.has,g.set=g.set,i=function(e,t){if(g.has(e))throw f("Object already initialized");return t.facade=e,g.set(e,t),t},o=function(e){return g.get(e)||{}},a=function(e){return g.has(e)}}else{var y=h("state");p[y]=!0,i=function(e,t){if(d(e,y))throw f("Object already initialized");return t.facade=e,c(e,y,t),t},o=function(e){return d(e,y)?e[y]:{}},a=function(e){return d(e,y)}}e.exports={set:i,get:o,has:a,enforce:function(e){return a(e)?o(e):i(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=o(t)).type!==e)throw f("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){"use strict";var i=n(3),o=n(2),a=i.WeakMap;e.exports=o(a)&&/native code/.test(String(a))},function(e,t,n){"use strict";var i=n(30),o=n(4),a=n(116),s=n(121),r=n(26),l=o([].concat);e.exports=i("Reflect","ownKeys")||function(e){var t=a.f(r(e)),n=s.f;return n?l(t,n(e)):t}},function(e,t,n){"use strict";var i=n(101),o=n(95).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,o)}},function(e,t,n){"use strict";var i=n(29),o=n(118),a=n(34),s=function(e){return function(t,n,s){var r,l=i(t),c=a(l),d=o(s,c);if(e&&n!=n){for(;c>d;)if((r=l[d++])!=r)return!0}else for(;c>d;d++)if((e||d in l)&&l[d]===n)return e||d||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},function(e,t,n){"use strict";var i=n(66),o=Math.max,a=Math.min;e.exports=function(e,t){var n=i(e);return n<0?o(n+t,0):a(n,t)}},function(e,t,n){"use strict";var i=Math.ceil,o=Math.floor;e.exports=Math.trunc||function(e){var t=+e;return(t>0?o:i)(t)}},function(e,t,n){"use strict";var i=n(66),o=Math.min;e.exports=function(e){return e>0?o(i(e),9007199254740991):0}},function(e,t,n){"use strict";t.f=Object.getOwnPropertySymbols},function(e,t,n){"use strict";var i=n(5),o=n(2),a=/#|\.prototype\./,s=function(e,t){var n=l[r(e)];return n===d||n!==c&&(o(t)?i(t):!!t)},r=s.normalize=function(e){return String(e).replace(a,".").toLowerCase()},l=s.data={},c=s.NATIVE="N",d=s.POLYFILL="P";e.exports=s},function(e,t,n){"use strict";var i=n(31),o=n(33),a=n(48),s=n(34),r=TypeError,l=function(e){return function(t,n,l,c){i(n);var d=o(t),u=a(d),h=s(d),p=e?h-1:0,f=e?-1:1;if(l<2)for(;;){if(p in u){c=u[p],p+=f;break}if(p+=f,e?p<0:h<=p)throw r("Reduce of empty array with no initial value")}for(;e?p>=0:h>p;p+=f)p in u&&(c=n(c,u[p],p,d));return c}};e.exports={left:l(!1),right:l(!0)}},function(e,t,n){"use strict";var i=n(5);e.exports=function(e,t){var n=[][e];return!!n&&i((function(){n.call(null,t||function(){return 1},1)}))}},function(e,t,n){"use strict";var i=n(3),o=n(19);e.exports="process"===o(i.process)},function(e,t,n){"use strict";var i=n(6),o=n(127),a=TypeError,s=Object.getOwnPropertyDescriptor,r=i&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=r?function(e,t){if(o(e)&&!s(e,"length").writable)throw a("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},function(e,t,n){"use strict";var i=n(19);e.exports=Array.isArray||function(e){return"Array"===i(e)}},function(e,t,n){"use strict";var i=TypeError;e.exports=function(e){if(e>9007199254740991)throw i("Maximum allowed index exceeded");return e}},function(e,t,n){"use strict";var i=n(27),o=n(3),a=n(130),s=n(131),r=o.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(e,t){var n={};n[e]=s(e,t,l),i({global:!0,constructor:!0,arity:1,forced:l},n)},d=function(e,t){if(r&&r[e]){var n={};n[e]=s("WebAssembly."+e,t,l),i({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},n)}};c("Error",(function(e){return function(t){return a(e,this,arguments)}})),c("EvalError",(function(e){return function(t){return a(e,this,arguments)}})),c("RangeError",(function(e){return function(t){return a(e,this,arguments)}})),c("ReferenceError",(function(e){return function(t){return a(e,this,arguments)}})),c("SyntaxError",(function(e){return function(t){return a(e,this,arguments)}})),c("TypeError",(function(e){return function(t){return a(e,this,arguments)}})),c("URIError",(function(e){return function(t){return a(e,this,arguments)}})),d("CompileError",(function(e){return function(t){return a(e,this,arguments)}})),d("LinkError",(function(e){return function(t){return a(e,this,arguments)}})),d("RuntimeError",(function(e){return function(t){return a(e,this,arguments)}}))},function(e,t,n){"use strict";var i=n(28),o=Function.prototype,a=o.apply,s=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(i?s.bind(a):function(){return s.apply(a,arguments)})},function(e,t,n){"use strict";var i=n(30),o=n(10),a=n(16),s=n(57),r=n(67),l=n(65),c=n(134),d=n(135),u=n(136),h=n(139),p=n(140),f=n(6),m=n(62);e.exports=function(e,t,n,g){var y=g?2:1,w=e.split("."),v=w[w.length-1],b=i.apply(null,w);if(b){var k=b.prototype;if(!m&&o(k,"cause")&&delete k.cause,!n)return b;var x=i("Error"),A=t((function(e,t){var n=u(g?t:e,void 0),i=g?new b(e):new b;return void 0!==n&&a(i,"message",n),p(i,A,i.stack,2),this&&s(k,this)&&d(i,this,A),arguments.length>y&&h(i,arguments[y]),i}));if(A.prototype=k,"Error"!==v?r?r(A,x):l(A,x,{name:!0}):f&&"stackTraceLimit"in b&&(c(A,b,"stackTraceLimit"),c(A,b,"prepareStackTrace")),l(A,b),!m)try{k.name!==v&&a(k,"name",v),k.constructor=A}catch(e){}return A}}},function(e,t,n){"use strict";var i=n(4),o=n(31);e.exports=function(e,t,n){try{return i(o(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},function(e,t,n){"use strict";var i=n(2),o=String,a=TypeError;e.exports=function(e){if("object"==typeof e||i(e))return e;throw a("Can't set "+o(e)+" as a prototype")}},function(e,t,n){"use strict";var i=n(18).f;e.exports=function(e,t,n){n in e||i(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},function(e,t,n){"use strict";var i=n(2),o=n(11),a=n(67);e.exports=function(e,t,n){var s,r;return a&&i(s=t.constructor)&&s!==n&&o(r=s.prototype)&&r!==n.prototype&&a(e,r),e}},function(e,t,n){"use strict";var i=n(96);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:i(e)}},function(e,t,n){"use strict";var i=n(138),o=n(2),a=n(19),s=n(32)("toStringTag"),r=Object,l="Arguments"===a(function(){return arguments}());e.exports=i?a:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=r(e),s))?n:l?a(t):"Object"===(i=a(t))&&o(t.callee)?"Arguments":i}},function(e,t,n){"use strict";var i={};i[n(32)("toStringTag")]="z",e.exports="[object z]"===String(i)},function(e,t,n){"use strict";var i=n(11),o=n(16);e.exports=function(e,t){i(t)&&"cause"in t&&o(e,"cause",t.cause)}},function(e,t,n){"use strict";var i=n(16),o=n(141),a=n(142),s=Error.captureStackTrace;e.exports=function(e,t,n,r){a&&(s?s(e,t):i(e,"stack",o(n,r)))}},function(e,t,n){"use strict";var i=n(4),o=Error,a=i("".replace),s=String(o("zxcasd").stack),r=/\n\s*at [^:]*:[^\n]*/,l=r.test(s);e.exports=function(e,t){if(l&&"string"==typeof e&&!o.prepareStackTrace)for(;t--;)e=a(e,r,"");return e}},function(e,t,n){"use strict";var i=n(5),o=n(36);e.exports=!i((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",o(1,7)),7!==e.stack)}))},function(e,t,n){var i=n(68),o=n(144);e.exports=function e(t,n,a,s,r){var l=-1,c=t.length;for(a||(a=o),r||(r=[]);++l<c;){var d=t[l];n>0&&a(d)?n>1?e(d,n-1,a,s,r):i(r,d):s||(r[r.length]=d)}return r}},function(e,t,n){var i=n(17),o=n(39),a=n(7),s=i?i.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||o(e)||!!(s&&e&&e[s])}},function(e,t,n){var i=n(15),o=n(13);e.exports=function(e){return o(e)&&"[object Arguments]"==i(e)}},function(e,t,n){var i=n(17),o=Object.prototype,a=o.hasOwnProperty,s=o.toString,r=i?i.toStringTag:void 0;e.exports=function(e){var t=a.call(e,r),n=e[r];try{e[r]=void 0;var i=!0}catch(e){}var o=s.call(e);return i&&(t?e[r]=n:delete e[r]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var i=n(149),o=n(205),a=n(47),s=n(7),r=n(216);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?s(e)?o(e[0],e[1]):i(e):r(e)}},function(e,t,n){var i=n(150),o=n(204),a=n(85);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?a(t[0][0],t[0][1]):function(n){return n===e||i(n,e,t)}}},function(e,t,n){var i=n(70),o=n(74);e.exports=function(e,t,n,a){var s=n.length,r=s,l=!a;if(null==e)return!r;for(e=Object(e);s--;){var c=n[s];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++s<r;){var d=(c=n[s])[0],u=e[d],h=c[1];if(l&&c[2]){if(void 0===u&&!(d in e))return!1}else{var p=new i;if(a)var f=a(u,h,d,e,t,p);if(!(void 0===f?o(h,u,3,a,p):f))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var i=n(21),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=i(t,e);return!(n<0)&&(n==t.length-1?t.pop():o.call(t,n,1),--this.size,!0)}},function(e,t,n){var i=n(21);e.exports=function(e){var t=this.__data__,n=i(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var i=n(21);e.exports=function(e){return i(this.__data__,e)>-1}},function(e,t,n){var i=n(21);e.exports=function(e,t){var n=this.__data__,o=i(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var i=n(20);e.exports=function(){this.__data__=new i,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var i=n(20),o=n(40),a=n(42);e.exports=function(e,t){var n=this.__data__;if(n instanceof i){var s=n.__data__;if(!o||s.length<199)return s.push([e,t]),this.size=++n.size,this;n=this.__data__=new a(s)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var i=n(72),o=n(162),a=n(41),s=n(73),r=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,h=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||o(e))&&(i(e)?h:r).test(s(e))}},function(e,t,n){var i,o=n(163),a=(i=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";e.exports=function(e){return!!a&&a in e}},function(e,t,n){var i=n(8)["__core-js_shared__"];e.exports=i},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var i=n(166),o=n(20),a=n(40);e.exports=function(){this.size=0,this.__data__={hash:new i,map:new(a||o),string:new i}}},function(e,t,n){var i=n(167),o=n(168),a=n(169),s=n(170),r=n(171);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=s,l.prototype.set=r,e.exports=l},function(e,t,n){var i=n(22);e.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var i=n(22),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(i){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var i=n(22),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return i?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var i=n(22);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=i&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var i=n(23);e.exports=function(e){var t=i(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var i=n(23);e.exports=function(e){return i(this,e).get(e)}},function(e,t,n){var i=n(23);e.exports=function(e){return i(this,e).has(e)}},function(e,t,n){var i=n(23);e.exports=function(e,t){var n=i(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var i=n(70),o=n(75),a=n(181),s=n(184),r=n(200),l=n(7),c=n(79),d=n(81),u="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,p,f,m){var g=l(e),y=l(t),w=g?"[object Array]":r(e),v=y?"[object Array]":r(t),b=(w="[object Arguments]"==w?u:w)==u,k=(v="[object Arguments]"==v?u:v)==u,x=w==v;if(x&&c(e)){if(!c(t))return!1;g=!0,b=!1}if(x&&!b)return m||(m=new i),g||d(e)?o(e,t,n,p,f,m):a(e,t,w,n,p,f,m);if(!(1&n)){var A=b&&h.call(e,"__wrapped__"),S=k&&h.call(t,"__wrapped__");if(A||S){var j=A?e.value():e,T=S?t.value():t;return m||(m=new i),f(j,T,n,p,m)}}return!!x&&(m||(m=new i),s(e,t,n,p,f,m))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var i=n(17),o=n(182),a=n(71),s=n(75),r=n(183),l=n(43),c=i?i.prototype:void 0,d=c?c.valueOf:void 0;e.exports=function(e,t,n,i,c,u,h){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!u(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var p=r;case"[object Set]":var f=1&i;if(p||(p=l),e.size!=t.size&&!f)return!1;var m=h.get(e);if(m)return m==t;i|=2,h.set(e,t);var g=s(p(e),p(t),i,c,u,h);return h.delete(e),g;case"[object Symbol]":if(d)return d.call(e)==d.call(t)}return!1}},function(e,t,n){var i=n(8).Uint8Array;e.exports=i},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}},function(e,t,n){var i=n(185),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,a,s,r){var l=1&n,c=i(e),d=c.length;if(d!=i(t).length&&!l)return!1;for(var u=d;u--;){var h=c[u];if(!(l?h in t:o.call(t,h)))return!1}var p=r.get(e),f=r.get(t);if(p&&f)return p==t&&f==e;var m=!0;r.set(e,t),r.set(t,e);for(var g=l;++u<d;){var y=e[h=c[u]],w=t[h];if(a)var v=l?a(w,y,h,t,e,r):a(y,w,h,e,t,r);if(!(void 0===v?y===w||s(y,w,n,a,r):v)){m=!1;break}g||(g="constructor"==h)}if(m&&!g){var b=e.constructor,k=t.constructor;b==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof b&&b instanceof b&&"function"==typeof k&&k instanceof k||(m=!1)}return r.delete(e),r.delete(t),m}},function(e,t,n){var i=n(186),o=n(187),a=n(78);e.exports=function(e){return i(e,a,o)}},function(e,t,n){var i=n(68),o=n(7);e.exports=function(e,t,n){var a=t(e);return o(e)?a:i(a,n(e))}},function(e,t,n){var i=n(188),o=n(189),a=Object.prototype.propertyIsEnumerable,s=Object.getOwnPropertySymbols,r=s?function(e){return null==e?[]:(e=Object(e),i(s(e),(function(t){return a.call(e,t)})))}:o;e.exports=r},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,o=0,a=[];++n<i;){var s=e[n];t(s,n,e)&&(a[o++]=s)}return a}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var i=n(191),o=n(39),a=n(7),s=n(79),r=n(80),l=n(81),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=a(e),d=!n&&o(e),u=!n&&!d&&s(e),h=!n&&!d&&!u&&l(e),p=n||d||u||h,f=p?i(e.length,String):[],m=f.length;for(var g in e)!t&&!c.call(e,g)||p&&("length"==g||u&&("offset"==g||"parent"==g)||h&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||r(g,m))||f.push(g);return f}},function(e,t){e.exports=function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var i=n(15),o=n(44),a=n(13),s={};s["[object Float32Array]"]=s["[object Float64Array]"]=s["[object Int8Array]"]=s["[object Int16Array]"]=s["[object Int32Array]"]=s["[object Uint8Array]"]=s["[object Uint8ClampedArray]"]=s["[object Uint16Array]"]=s["[object Uint32Array]"]=!0,s["[object Arguments]"]=s["[object Array]"]=s["[object ArrayBuffer]"]=s["[object Boolean]"]=s["[object DataView]"]=s["[object Date]"]=s["[object Error]"]=s["[object Function]"]=s["[object Map]"]=s["[object Number]"]=s["[object Object]"]=s["[object RegExp]"]=s["[object Set]"]=s["[object String]"]=s["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&o(e.length)&&!!s[i(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var i=n(69),o=t&&!t.nodeType&&t,a=o&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===o&&i.process,r=function(){try{var e=a&&a.require&&a.require("util").types;return e||s&&s.binding&&s.binding("util")}catch(e){}}();e.exports=r}).call(this,n(50)(e))},function(e,t,n){var i=n(197),o=n(198),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return o(e);var t=[];for(var n in Object(e))a.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var i=n(199)(Object.keys,Object);e.exports=i},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var i=n(201),o=n(40),a=n(202),s=n(83),r=n(203),l=n(15),c=n(73),d=c(i),u=c(o),h=c(a),p=c(s),f=c(r),m=l;(i&&"[object DataView]"!=m(new i(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||a&&"[object Promise]"!=m(a.resolve())||s&&"[object Set]"!=m(new s)||r&&"[object WeakMap]"!=m(new r))&&(m=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,i=n?c(n):"";if(i)switch(i){case d:return"[object DataView]";case u:return"[object Map]";case h:return"[object Promise]";case p:return"[object Set]";case f:return"[object WeakMap]"}return t}),e.exports=m},function(e,t,n){var i=n(12)(n(8),"DataView");e.exports=i},function(e,t,n){var i=n(12)(n(8),"Promise");e.exports=i},function(e,t,n){var i=n(12)(n(8),"WeakMap");e.exports=i},function(e,t,n){var i=n(84),o=n(78);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var a=t[n],s=e[a];t[n]=[a,s,i(s)]}return t}},function(e,t,n){var i=n(74),o=n(206),a=n(213),s=n(45),r=n(84),l=n(85),c=n(24);e.exports=function(e,t){return s(e)&&r(t)?l(c(e),t):function(n){var s=o(n,e);return void 0===s&&s===t?a(n,e):i(t,s,3)}}},function(e,t,n){var i=n(86);e.exports=function(e,t,n){var o=null==e?void 0:i(e,t);return void 0===o?n:o}},function(e,t,n){var i=n(208),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,s=i((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,n,i,o){t.push(i?o.replace(a,"$1"):n||e)})),t}));e.exports=s},function(e,t,n){var i=n(209);e.exports=function(e){var t=i(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var i=n(42);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var i=arguments,o=t?t.apply(this,i):i[0],a=n.cache;if(a.has(o))return a.get(o);var s=e.apply(this,i);return n.cache=a.set(o,s)||a,s};return n.cache=new(o.Cache||i),n}o.Cache=i,e.exports=o},function(e,t,n){var i=n(211);e.exports=function(e){return null==e?"":i(e)}},function(e,t,n){var i=n(17),o=n(212),a=n(7),s=n(46),r=i?i.prototype:void 0,l=r?r.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(a(t))return o(t,e)+"";if(s(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,o=Array(i);++n<i;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var i=n(214),o=n(215);e.exports=function(e,t){return null!=e&&o(e,t,i)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var i=n(87),o=n(39),a=n(7),s=n(80),r=n(44),l=n(24);e.exports=function(e,t,n){for(var c=-1,d=(t=i(t,e)).length,u=!1;++c<d;){var h=l(t[c]);if(!(u=null!=e&&n(e,h)))break;e=e[h]}return u||++c!=d?u:!!(d=null==e?0:e.length)&&r(d)&&s(h,d)&&(a(e)||o(e))}},function(e,t,n){var i=n(217),o=n(218),a=n(45),s=n(24);e.exports=function(e){return a(e)?i(s(e)):o(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var i=n(86);e.exports=function(e){return function(t){return i(t,e)}}},function(e,t,n){var i=n(47),o=n(220),a=n(222);e.exports=function(e,t){return a(o(e,t,i),e+"")}},function(e,t,n){var i=n(221),o=Math.max;e.exports=function(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var a=arguments,s=-1,r=o(a.length-t,0),l=Array(r);++s<r;)l[s]=a[t+s];s=-1;for(var c=Array(t+1);++s<t;)c[s]=a[s];return c[t]=n(l),i(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var i=n(223),o=n(226)(i);e.exports=o},function(e,t,n){var i=n(224),o=n(225),a=n(47),s=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:i(t),writable:!0})}:a;e.exports=s},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var i=n(12),o=function(){try{var e=i(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,t){var n=Date.now;e.exports=function(e){var t=0,i=0;return function(){var o=n(),a=16-(o-i);if(i=o,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var i=n(76),o=n(228),a=n(233),s=n(77),r=n(234),l=n(43);e.exports=function(e,t,n){var c=-1,d=o,u=e.length,h=!0,p=[],f=p;if(n)h=!1,d=a;else if(u>=200){var m=t?null:r(e);if(m)return l(m);h=!1,d=s,f=new i}else f=t?[]:p;e:for(;++c<u;){var g=e[c],y=t?t(g):g;if(g=n||0!==g?g:0,h&&y==y){for(var w=f.length;w--;)if(f[w]===y)continue e;t&&f.push(y),p.push(g)}else d(f,y,n)||(f!==p&&f.push(y),p.push(g))}return p}},function(e,t,n){var i=n(229);e.exports=function(e,t){return!!(null==e?0:e.length)&&i(e,t,0)>-1}},function(e,t,n){var i=n(230),o=n(231),a=n(232);e.exports=function(e,t,n){return t==t?a(e,t,n):i(e,o,n)}},function(e,t){e.exports=function(e,t,n,i){for(var o=e.length,a=n+(i?1:-1);i?a--:++a<o;)if(t(e[a],a,e))return a;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var i=n-1,o=e.length;++i<o;)if(e[i]===t)return i;return-1}},function(e,t){e.exports=function(e,t,n){for(var i=-1,o=null==e?0:e.length;++i<o;)if(n(t,e[i]))return!0;return!1}},function(e,t,n){var i=n(83),o=n(235),a=n(43),s=i&&1/a(new i([,-0]))[1]==1/0?function(e){return new i(e)}:o;e.exports=s},function(e,t){e.exports=function(){}},function(e,t,n){var i=n(82),o=n(13);e.exports=function(e){return o(e)&&i(e)}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(88)},function(e,t,n){"use strict";n(89)},function(e,t,n){"use strict";n.r(t);var i=n(1);
/*!
  * vue-router v3.6.5
  * (c) 2022 Evan You
  * @license MIT
  */function o(e,t){for(var n in t)e[n]=t[n];return e}var a=/[!'()*]/g,s=function(e){return"%"+e.charCodeAt(0).toString(16)},r=/%2C/g,l=function(e){return encodeURIComponent(e).replace(a,s).replace(r,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var d=function(e){return null==e||"object"==typeof e?e:String(e)};function u(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),i=c(n.shift()),o=n.length>0?c(n.join("=")):null;void 0===t[i]?t[i]=o:Array.isArray(t[i])?t[i].push(o):t[i]=[t[i],o]})),t):t}function h(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return l(t);if(Array.isArray(n)){var i=[];return n.forEach((function(e){void 0!==e&&(null===e?i.push(l(t)):i.push(l(t)+"="+l(e)))})),i.join("&")}return l(t)+"="+l(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var p=/\/?$/;function f(e,t,n,i){var o=i&&i.options.stringifyQuery,a=t.query||{};try{a=m(a)}catch(e){}var s={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:a,params:t.params||{},fullPath:w(t,o),matched:e?y(e):[]};return n&&(s.redirectedFrom=w(n,o)),Object.freeze(s)}function m(e){if(Array.isArray(e))return e.map(m);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=m(e[n]);return t}return e}var g=f(null,{path:"/"});function y(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function w(e,t){var n=e.path,i=e.query;void 0===i&&(i={});var o=e.hash;return void 0===o&&(o=""),(n||"/")+(t||h)(i)+o}function v(e,t,n){return t===g?e===t:!!t&&(e.path&&t.path?e.path.replace(p,"")===t.path.replace(p,"")&&(n||e.hash===t.hash&&b(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&b(e.query,t.query)&&b(e.params,t.params))))}function b(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),i=Object.keys(t).sort();return n.length===i.length&&n.every((function(n,o){var a=e[n];if(i[o]!==n)return!1;var s=t[n];return null==a||null==s?a===s:"object"==typeof a&&"object"==typeof s?b(a,s):String(a)===String(s)}))}function k(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var i in n.instances){var o=n.instances[i],a=n.enteredCbs[i];if(o&&a){delete n.enteredCbs[i];for(var s=0;s<a.length;s++)o._isBeingDestroyed||a[s](o)}}}}var x={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,i=t.children,a=t.parent,s=t.data;s.routerView=!0;for(var r=a.$createElement,l=n.name,c=a.$route,d=a._routerViewCache||(a._routerViewCache={}),u=0,h=!1;a&&a._routerRoot!==a;){var p=a.$vnode?a.$vnode.data:{};p.routerView&&u++,p.keepAlive&&a._directInactive&&a._inactive&&(h=!0),a=a.$parent}if(s.routerViewDepth=u,h){var f=d[l],m=f&&f.component;return m?(f.configProps&&A(m,s,f.route,f.configProps),r(m,s,i)):r()}var g=c.matched[u],y=g&&g.components[l];if(!g||!y)return d[l]=null,r();d[l]={component:y},s.registerRouteInstance=function(e,t){var n=g.instances[l];(t&&n!==e||!t&&n===e)&&(g.instances[l]=t)},(s.hook||(s.hook={})).prepatch=function(e,t){g.instances[l]=t.componentInstance},s.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==g.instances[l]&&(g.instances[l]=e.componentInstance),k(c)};var w=g.props&&g.props[l];return w&&(o(d[l],{route:c,configProps:w}),A(y,s,c,w)),r(y,s,i)}};function A(e,t,n,i){var a=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,i);if(a){a=t.props=o({},a);var s=t.attrs=t.attrs||{};for(var r in a)e.props&&r in e.props||(s[r]=a[r],delete a[r])}}function S(e,t,n){var i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return t+e;var o=t.split("/");n&&o[o.length-1]||o.pop();for(var a=e.replace(/^\//,"").split("/"),s=0;s<a.length;s++){var r=a[s];".."===r?o.pop():"."!==r&&o.push(r)}return""!==o[0]&&o.unshift(""),o.join("/")}function j(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var T=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},_=q,I=O,P=function(e,t){return L(O(e,t),t)},z=L,C=M,E=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function O(e,t){for(var n,i=[],o=0,a=0,s="",r=t&&t.delimiter||"/";null!=(n=E.exec(e));){var l=n[0],c=n[1],d=n.index;if(s+=e.slice(a,d),a=d+l.length,c)s+=c[1];else{var u=e[a],h=n[2],p=n[3],f=n[4],m=n[5],g=n[6],y=n[7];s&&(i.push(s),s="");var w=null!=h&&null!=u&&u!==h,v="+"===g||"*"===g,b="?"===g||"*"===g,k=n[2]||r,x=f||m;i.push({name:p||o++,prefix:h||"",delimiter:k,optional:b,repeat:v,partial:w,asterisk:!!y,pattern:x?R(x):y?".*":"[^"+W(k)+"]+?"})}}return a<e.length&&(s+=e.substr(a)),s&&i.push(s),i}function D(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function L(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",N(t)));return function(t,i){for(var o="",a=t||{},s=(i||{}).pretty?D:encodeURIComponent,r=0;r<e.length;r++){var l=e[r];if("string"!=typeof l){var c,d=a[l.name];if(null==d){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(T(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=s(d[u]),!n[r].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(d),!n[r].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function W(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function R(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function H(e,t){return e.keys=t,e}function N(e){return e&&e.sensitive?"":"i"}function M(e,t,n){T(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,o=!1!==n.end,a="",s=0;s<e.length;s++){var r=e[s];if("string"==typeof r)a+=W(r);else{var l=W(r.prefix),c="(?:"+r.pattern+")";t.push(r),r.repeat&&(c+="(?:"+l+c+")*"),a+=c=r.optional?r.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=W(n.delimiter||"/"),u=a.slice(-d.length)===d;return i||(a=(u?a.slice(0,-d.length):a)+"(?:"+d+"(?=$))?"),a+=o?"$":i&&u?"":"(?="+d+"|$)",H(new RegExp("^"+a,N(n)),t)}function q(e,t,n){return T(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)t.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return H(e,t)}(e,t):T(e)?function(e,t,n){for(var i=[],o=0;o<e.length;o++)i.push(q(e[o],t,n).source);return H(new RegExp("(?:"+i.join("|")+")",N(n)),t)}(e,t,n):function(e,t,n){return M(O(e,n),t,n)}(e,t,n)}_.parse=I,_.compile=P,_.tokensToFunction=z,_.tokensToRegExp=C;var U=Object.create(null);function $(e,t,n){t=t||{};try{var i=U[e]||(U[e]=_.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),i(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function B(e,t,n,i){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var s=(a=o({},e)).params;return s&&"object"==typeof s&&(a.params=o({},s)),a}if(!a.path&&a.params&&t){(a=o({},a))._normalized=!0;var r=o(o({},t.params),a.params);if(t.name)a.name=t.name,a.params=r;else if(t.matched.length){var l=t.matched[t.matched.length-1].path;a.path=$(l,r,t.path)}else 0;return a}var c=function(e){var t="",n="",i=e.indexOf("#");i>=0&&(t=e.slice(i),e=e.slice(0,i));var o=e.indexOf("?");return o>=0&&(n=e.slice(o+1),e=e.slice(0,o)),{path:e,query:n,hash:t}}(a.path||""),h=t&&t.path||"/",p=c.path?S(c.path,h,n||a.append):h,f=function(e,t,n){void 0===t&&(t={});var i,o=n||u;try{i=o(e||"")}catch(e){i={}}for(var a in t){var s=t[a];i[a]=Array.isArray(s)?s.map(d):d(s)}return i}(c.query,a.query,i&&i.options.parseQuery),m=a.hash||c.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:p,query:f,hash:m}}var G,F=function(){},Y={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,i=this.$route,a=n.resolve(this.to,i,this.append),s=a.location,r=a.route,l=a.href,c={},d=n.options.linkActiveClass,u=n.options.linkExactActiveClass,h=null==d?"router-link-active":d,m=null==u?"router-link-exact-active":u,g=null==this.activeClass?h:this.activeClass,y=null==this.exactActiveClass?m:this.exactActiveClass,w=r.redirectedFrom?f(null,B(r.redirectedFrom),null,n):r;c[y]=v(i,w,this.exactPath),c[g]=this.exact||this.exactPath?c[y]:function(e,t){return 0===e.path.replace(p,"/").indexOf(t.path.replace(p,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(i,w);var b=c[y]?this.ariaCurrentValue:null,k=function(e){V(e)&&(t.replace?n.replace(s,F):n.push(s,F))},x={click:V};Array.isArray(this.event)?this.event.forEach((function(e){x[e]=k})):x[this.event]=k;var A={class:c},S=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:r,navigate:k,isActive:c[g],isExactActive:c[y]});if(S){if(1===S.length)return S[0];if(S.length>1||!S.length)return 0===S.length?e():e("span",{},S)}if("a"===this.tag)A.on=x,A.attrs={href:l,"aria-current":b};else{var j=function e(t){var n;if(t)for(var i=0;i<t.length;i++){if("a"===(n=t[i]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(j){j.isStatic=!1;var T=j.data=o({},j.data);for(var _ in T.on=T.on||{},T.on){var I=T.on[_];_ in x&&(T.on[_]=Array.isArray(I)?I:[I])}for(var P in x)P in T.on?T.on[P].push(x[P]):T.on[P]=k;var z=j.data.attrs=o({},j.data.attrs);z.href=l,z["aria-current"]=b}else A.on=x}return e(this.tag,A,this.$slots.default)}};function V(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var K="undefined"!=typeof window;function J(e,t,n,i,o){var a=t||[],s=n||Object.create(null),r=i||Object.create(null);e.forEach((function(e){!function e(t,n,i,o,a,s){var r=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},d=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return j(t.path+"/"+e)}(r,a,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var u={path:d,regex:Z(d,c),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:s,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var a=s?j(s+"/"+o.path):void 0;e(t,n,i,o,u,a)}));n[u.path]||(t.push(u.path),n[u.path]=u);if(void 0!==o.alias)for(var h=Array.isArray(o.alias)?o.alias:[o.alias],p=0;p<h.length;++p){0;var f={path:h[p],children:o.children};e(t,n,i,f,a,u.path||"/")}l&&(i[l]||(i[l]=u))}(a,s,r,e,o)}));for(var l=0,c=a.length;l<c;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),c--,l--);return{pathList:a,pathMap:s,nameMap:r}}function Z(e,t){return _(e,[],t)}function Q(e,t){var n=J(e),i=n.pathList,o=n.pathMap,a=n.nameMap;function s(e,n,s){var r=B(e,n,!1,t),c=r.name;if(c){var d=a[c];if(!d)return l(null,r);var u=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof r.params&&(r.params={}),n&&"object"==typeof n.params)for(var h in n.params)!(h in r.params)&&u.indexOf(h)>-1&&(r.params[h]=n.params[h]);return r.path=$(d.path,r.params),l(d,r,s)}if(r.path){r.params={};for(var p=0;p<i.length;p++){var f=i[p],m=o[f];if(X(m.regex,r.path,r.params))return l(m,r,s)}}return l(null,r)}function r(e,n){var i=e.redirect,o="function"==typeof i?i(f(e,n,null,t)):i;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,n);var r=o,c=r.name,d=r.path,u=n.query,h=n.hash,p=n.params;if(u=r.hasOwnProperty("query")?r.query:u,h=r.hasOwnProperty("hash")?r.hash:h,p=r.hasOwnProperty("params")?r.params:p,c){a[c];return s({_normalized:!0,name:c,query:u,hash:h,params:p},void 0,n)}if(d){var m=function(e,t){return S(e,t.parent?t.parent.path:"/",!0)}(d,e);return s({_normalized:!0,path:$(m,p),query:u,hash:h},void 0,n)}return l(null,n)}function l(e,n,i){return e&&e.redirect?r(e,i||n):e&&e.matchAs?function(e,t,n){var i=s({_normalized:!0,path:$(n,t.params)});if(i){var o=i.matched,a=o[o.length-1];return t.params=i.params,l(a,t)}return l(null,t)}(0,n,e.matchAs):f(e,n,i,t)}return{match:s,addRoute:function(e,t){var n="object"!=typeof e?a[e]:void 0;J([t||e],i,o,a,n),n&&n.alias.length&&J(n.alias.map((function(e){return{path:e,children:[t]}})),i,o,a,n)},getRoutes:function(){return i.map((function(e){return o[e]}))},addRoutes:function(e){J(e,i,o,a)}}}function X(e,t,n){var i=t.match(e);if(!i)return!1;if(!n)return!0;for(var o=1,a=i.length;o<a;++o){var s=e.keys[o-1];s&&(n[s.name||"pathMatch"]="string"==typeof i[o]?c(i[o]):i[o])}return!0}var ee=K&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ie(){return ne}function oe(e){return ne=e}var ae=Object.create(null);function se(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=o({},window.history.state);return n.key=ie(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function re(e,t,n,i){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var a=function(){var e=ie();if(e)return ae[e]}(),s=o.call(e,t,n,i?a:null);s&&("function"==typeof s.then?s.then((function(e){fe(e,a)})).catch((function(e){0})):fe(s,a))}))}}function le(){var e=ie();e&&(ae[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){le(),e.state&&e.state.key&&oe(e.state.key)}function de(e){return he(e.x)||he(e.y)}function ue(e){return{x:he(e.x)?e.x:window.pageXOffset,y:he(e.y)?e.y:window.pageYOffset}}function he(e){return"number"==typeof e}var pe=/^#\d/;function fe(e,t){var n,i="object"==typeof e;if(i&&"string"==typeof e.selector){var o=pe.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var a=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{x:i.left-n.left-t.x,y:i.top-n.top-t.y}}(o,a={x:he((n=a).x)?n.x:0,y:he(n.y)?n.y:0})}else de(e)&&(t=ue(e))}else i&&de(e)&&(t=ue(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var me,ge=K&&((-1===(me=window.navigator.userAgent).indexOf("Android 2.")&&-1===me.indexOf("Android 4.0")||-1===me.indexOf("Mobile Safari")||-1!==me.indexOf("Chrome")||-1!==me.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function ye(e,t){le();var n=window.history;try{if(t){var i=o({},n.state);i.key=ie(),n.replaceState(i,"",e)}else n.pushState({key:oe(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function we(e){ye(e,!0)}var ve={redirected:2,aborted:4,cancelled:8,duplicated:16};function be(e,t){return xe(e,t,ve.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Ae.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function ke(e,t){return xe(e,t,ve.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function xe(e,t,n,i){var o=new Error(i);return o._isRouter=!0,o.from=e,o.to=t,o.type=n,o}var Ae=["params","query","hash"];function Se(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function je(e,t){return Se(e)&&e._isRouter&&(null==t||e.type===t)}function Te(e,t,n){var i=function(o){o>=e.length?n():e[o]?t(e[o],(function(){i(o+1)})):i(o+1)};i(0)}function _e(e){return function(t,n,i){var o=!1,a=0,s=null;Ie(e,(function(e,t,n,r){if("function"==typeof e&&void 0===e.cid){o=!0,a++;var l,c=Ce((function(t){var o;((o=t).__esModule||ze&&"Module"===o[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:G.extend(t),n.components[r]=t,--a<=0&&i()})),d=Ce((function(e){var t="Failed to resolve async component "+r+": "+e;s||(s=Se(e)?e:new Error(t),i(s))}));try{l=e(c,d)}catch(e){d(e)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),o||i()}}function Ie(e,t){return Pe(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Pe(e){return Array.prototype.concat.apply([],e)}var ze="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ce(e){var t=!1;return function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];if(!t)return t=!0,e.apply(this,n)}}var Ee=function(e,t){this.router=e,this.base=function(e){if(!e)if(K){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Oe(e,t,n,i){var o=Ie(e,(function(e,i,o,a){var s=function(e,t){"function"!=typeof e&&(e=G.extend(e));return e.options[t]}(e,t);if(s)return Array.isArray(s)?s.map((function(e){return n(e,i,o,a)})):n(s,i,o,a)}));return Pe(i?o.reverse():o)}function De(e,t){if(t)return function(){return e.apply(t,arguments)}}Ee.prototype.listen=function(e){this.cb=e},Ee.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ee.prototype.onError=function(e){this.errorCbs.push(e)},Ee.prototype.transitionTo=function(e,t,n){var i,o=this;try{i=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var a=this.current;this.confirmTransition(i,(function(){o.updateRoute(i),t&&t(i),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(i,a)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(i)})))}),(function(e){n&&n(e),e&&!o.ready&&(je(e,ve.redirected)&&a===g||(o.ready=!0,o.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ee.prototype.confirmTransition=function(e,t,n){var i=this,o=this.current;this.pending=e;var a,s,r=function(e){!je(e)&&Se(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},l=e.matched.length-1,c=o.matched.length-1;if(v(e,o)&&l===c&&e.matched[l]===o.matched[c])return this.ensureURL(),e.hash&&re(this.router,o,e,!1),r(((s=xe(a=o,e,ve.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",s));var d=function(e,t){var n,i=Math.max(e.length,t.length);for(n=0;n<i&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),u=d.updated,h=d.deactivated,p=d.activated,f=[].concat(function(e){return Oe(e,"beforeRouteLeave",De,!0)}(h),this.router.beforeHooks,function(e){return Oe(e,"beforeRouteUpdate",De)}(u),p.map((function(e){return e.beforeEnter})),_e(p)),m=function(t,n){if(i.pending!==e)return r(ke(o,e));try{t(e,o,(function(t){!1===t?(i.ensureURL(!0),r(function(e,t){return xe(e,t,ve.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(o,e))):Se(t)?(i.ensureURL(!0),r(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(r(be(o,e)),"object"==typeof t&&t.replace?i.replace(t):i.push(t)):n(t)}))}catch(e){r(e)}};Te(f,m,(function(){Te(function(e){return Oe(e,"beforeRouteEnter",(function(e,t,n,i){return function(e,t,n){return function(i,o,a){return e(i,o,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),a(e)}))}}(e,n,i)}))}(p).concat(i.router.resolveHooks),m,(function(){if(i.pending!==e)return r(ke(o,e));i.pending=null,t(e),i.router.app&&i.router.app.$nextTick((function(){k(e)}))}))}))},Ee.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ee.prototype.setupListeners=function(){},Ee.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=g,this.pending=null};var Le=function(e){function t(t,n){e.call(this,t,n),this._startLocation=We(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,i=ge&&n;i&&this.listeners.push(se());var o=function(){var n=e.current,o=We(e.base);e.current===g&&o===e._startLocation||e.transitionTo(o,(function(e){i&&re(t,e,n,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){ye(j(i.base+e.fullPath)),re(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){we(j(i.base+e.fullPath)),re(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(We(this.base)!==this.current.fullPath){var t=j(this.base+this.current.fullPath);e?ye(t):we(t)}},t.prototype.getCurrentLocation=function(){return We(this.base)},t}(Ee);function We(e){var t=window.location.pathname,n=t.toLowerCase(),i=e.toLowerCase();return!e||n!==i&&0!==n.indexOf(j(i+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Re=function(e){function t(t,n,i){e.call(this,t,n),i&&function(e){var t=We(e);if(!/^\/#/.test(t))return window.location.replace(j(e+"/#"+t)),!0}(this.base)||He()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=ge&&t;n&&this.listeners.push(se());var i=function(){var t=e.current;He()&&e.transitionTo(Ne(),(function(i){n&&re(e.router,i,t,!0),ge||Ue(i.fullPath)}))},o=ge?"popstate":"hashchange";window.addEventListener(o,i),this.listeners.push((function(){window.removeEventListener(o,i)}))}},t.prototype.push=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){qe(e.fullPath),re(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,o=this.current;this.transitionTo(e,(function(e){Ue(e.fullPath),re(i.router,e,o,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Ne()!==t&&(e?qe(t):Ue(t))},t.prototype.getCurrentLocation=function(){return Ne()},t}(Ee);function He(){var e=Ne();return"/"===e.charAt(0)||(Ue("/"+e),!1)}function Ne(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Me(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function qe(e){ge?ye(Me(e)):window.location.hash=e}function Ue(e){ge?we(Me(e)):window.location.replace(Me(e))}var $e=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index+1).concat(e),i.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var i=this.stack[n];this.confirmTransition(i,(function(){var e=t.current;t.index=n,t.updateRoute(i),t.router.afterHooks.forEach((function(t){t&&t(i,e)}))}),(function(e){je(e,ve.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ee),Be=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Q(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ge&&!1!==e.fallback,this.fallback&&(t="hash"),K||(t="abstract"),this.mode=t,t){case"history":this.history=new Le(this,e.base);break;case"hash":this.history=new Re(this,e.base,this.fallback);break;case"abstract":this.history=new $e(this,e.base);break;default:0}},Ge={currentRoute:{configurable:!0}};Be.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Ge.currentRoute.get=function(){return this.history&&this.history.current},Be.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Le||n instanceof Re){var i=function(e){n.setupListeners(),function(e){var i=n.current,o=t.options.scrollBehavior;ge&&o&&"fullPath"in e&&re(t,e,i,!1)}(e)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Be.prototype.beforeEach=function(e){return Ye(this.beforeHooks,e)},Be.prototype.beforeResolve=function(e){return Ye(this.resolveHooks,e)},Be.prototype.afterEach=function(e){return Ye(this.afterHooks,e)},Be.prototype.onReady=function(e,t){this.history.onReady(e,t)},Be.prototype.onError=function(e){this.history.onError(e)},Be.prototype.push=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.push(e,t,n)}));this.history.push(e,t,n)},Be.prototype.replace=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.replace(e,t,n)}));this.history.replace(e,t,n)},Be.prototype.go=function(e){this.history.go(e)},Be.prototype.back=function(){this.go(-1)},Be.prototype.forward=function(){this.go(1)},Be.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Be.prototype.resolve=function(e,t,n){var i=B(e,t=t||this.history.current,n,this),o=this.match(i,t),a=o.redirectedFrom||o.fullPath;return{location:i,route:o,href:function(e,t,n){var i="hash"===n?"#"+t:t;return e?j(e+"/"+i):i}(this.history.base,a,this.mode),normalizedTo:i,resolved:o}},Be.prototype.getRoutes=function(){return this.matcher.getRoutes()},Be.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Be.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Be.prototype,Ge);var Fe=Be;function Ye(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Be.install=function e(t){if(!e.installed||G!==t){e.installed=!0,G=t;var n=function(e){return void 0!==e},i=function(e,t){var i=e.$options._parentVnode;n(i)&&n(i=i.data)&&n(i=i.registerRouteInstance)&&i(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",x),t.component("RouterLink",Y);var o=t.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Be.version="3.6.5",Be.isNavigationFailure=je,Be.NavigationFailureType=ve,Be.START_LOCATION=g,K&&window.Vue&&window.Vue.use(Be);n(104);var Ve=n(0),Ke=n(90),Je=n.n(Ke),Ze={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,t])=>t),this.$ssrContext){const t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map(e=>{let t="<meta";return Object.keys(e).forEach(n=>{t+=` ${n}="${e[n]}"`}),t+">"}).join("\n    "):""}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=Qe(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return Je()([{name:"description",content:this.$description}],e,this.siteMeta,Xe)}},watch:{$page(){this.updateMeta()}},beforeDestroy(){Qe(null,this.currentMetaTags)}};function Qe(e,t){if(t&&[...t].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const t=document.createElement("meta");return Object.keys(e).forEach(n=>{t.setAttribute(n,e[n])}),document.head.appendChild(t),t})}function Xe(e){for(const t of["name","property","itemprop"])if(e.hasOwnProperty(t))return e[t]+t;return JSON.stringify(e)}var et=n(91),tt={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(et)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter(t=>e.some(e=>e.hash===t.hash)),n=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+n;for(let e=0;e<t.length;e++){const a=t[e],s=t[e+1],r=0===e&&0===n||n>=a.parentElement.offsetTop+10&&(!s||n<s.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(r&&l!==decodeURIComponent(a.hash)){const n=a;if(o===i)for(let n=e+1;n<t.length;n++)if(l===decodeURIComponent(t[n].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(n.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},nt=n(25),it=n.n(nt),ot={mounted(){it.a.configure({showSpinner:!1}),this.$router.beforeEach((e,t,n)=>{e.path===t.path||i.a.component(e.name)||it.a.start(),n()}),this.$router.afterEach(()=>{it.a.done(),this.isSidebarOpen=!1})}},at=n(92),st=n.n(at),rt=[Ze,tt,ot,{mounted(){st.a.polyfill()}}],lt={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return Object(Ve.h)("layout",e),i.a.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},ct=n(9),dt=Object(ct.a)(lt,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;Object(Ve.f)(dt,"mixins",rt);const ut=[{name:"v-0681b175",path:"/GLOSSARY.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-0681b175").then(n)}},{name:"v-4c727654",path:"/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-4c727654").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-e0c0a552",path:"/about-alice/GLOSSARY.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-e0c0a552").then(n)}},{name:"v-5a17b974",path:"/about-alice/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5a17b974").then(n)}},{path:"/about-alice/index.html",redirect:"/about-alice/"},{name:"v-58ced0b4",path:"/community-made/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-58ced0b4").then(n)}},{path:"/community-made/index.html",redirect:"/community-made/"},{name:"v-1f9c4177",path:"/community-made/frequent-questions-and-answer.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-1f9c4177").then(n)}},{name:"v-76fb2d2b",path:"/community-made/getting-started-pycharm.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-76fb2d2b").then(n)}},{name:"v-4c3563b4",path:"/contribute/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-4c3563b4").then(n)}},{path:"/contribute/index.html",redirect:"/contribute/"},{name:"v-1991b62f",path:"/contribute/code-guidelines.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-1991b62f").then(n)}},{name:"v-bab27eb4",path:"/core-development/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-bab27eb4").then(n)}},{path:"/core-development/index.html",redirect:"/core-development/"},{name:"v-f12c40b4",path:"/de/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-f12c40b4").then(n)}},{path:"/de/index.html",redirect:"/de/"},{name:"v-70285a65",path:"/de/about-alice/GLOSSARY.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-70285a65").then(n)}},{name:"v-f32f0cf4",path:"/de/about-alice/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-f32f0cf4").then(n)}},{path:"/de/about-alice/index.html",redirect:"/de/about-alice/"},{name:"v-1c15c334",path:"/de/community-made/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-1c15c334").then(n)}},{path:"/de/community-made/index.html",redirect:"/de/community-made/"},{name:"v-08421b36",path:"/de/community-made/getting-started-pycharm.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-08421b36").then(n)}},{name:"v-7599ab7e",path:"/de/contribute/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-7599ab7e").then(n)}},{path:"/de/contribute/index.html",redirect:"/de/contribute/"},{name:"v-3ca6ddb6",path:"/de/contribute/code-guidelines.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-3ca6ddb6").then(n)}},{name:"v-bc7e3184",path:"/de/core-development/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-bc7e3184").then(n)}},{path:"/de/core-development/index.html",redirect:"/de/core-development/"},{name:"v-1dd60934",path:"/de/links/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-1dd60934").then(n)}},{path:"/de/links/index.html",redirect:"/de/links/"},{name:"v-03cf46ac",path:"/de/satsetup/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-03cf46ac").then(n)}},{path:"/de/satsetup/index.html",redirect:"/de/satsetup/"},{name:"v-3ef16335",path:"/de/satsetup/manual-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-3ef16335").then(n)}},{name:"v-599b782f",path:"/de/satsetup/preinstalled.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-599b782f").then(n)}},{name:"v-4f62e6f6",path:"/de/satsetup/troubleshooting.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-4f62e6f6").then(n)}},{name:"v-1fbf6992",path:"/de/satsetup/updateToB1.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-1fbf6992").then(n)}},{name:"v-fa956c34",path:"/de/setup/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-fa956c34").then(n)}},{path:"/de/setup/index.html",redirect:"/de/setup/"},{name:"v-2a00bb85",path:"/de/setup/docker.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2a00bb85").then(n)}},{name:"v-798f791f",path:"/de/setup/image-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-798f791f").then(n)}},{name:"v-46952605",path:"/de/setup/manual-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-46952605").then(n)}},{name:"v-03bb25b6",path:"/de/setup/preinstalled.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-03bb25b6").then(n)}},{name:"v-21d949f6",path:"/de/setup/requirements.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-21d949f6").then(n)}},{name:"v-41edb305",path:"/de/setup/room-configuration.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-41edb305").then(n)}},{name:"v-09f1f986",path:"/de/setup/troubleshooting.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-09f1f986").then(n)}},{name:"v-585f6345",path:"/de/setup/wakeword.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-585f6345").then(n)}},{name:"v-7e6cd7b4",path:"/de/skill-development/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-7e6cd7b4").then(n)}},{path:"/de/skill-development/index.html",redirect:"/de/skill-development/"},{name:"v-2e5d5b53",path:"/de/skill-development/builtin-intents.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2e5d5b53").then(n)}},{name:"v-5756d057",path:"/de/skill-development/builtin-slots.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5756d057").then(n)}},{name:"v-910389fe",path:"/de/skill-development/database-access.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-910389fe").then(n)}},{name:"v-464ee06f",path:"/de/skill-development/dialog-template.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-464ee06f").then(n)}},{name:"v-35f71965",path:"/de/skill-development/events.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-35f71965").then(n)}},{name:"v-10d31522",path:"/de/skill-development/logging.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-10d31522").then(n)}},{name:"v-3cfb3881",path:"/de/skill-development/missing-slot-info.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-3cfb3881").then(n)}},{name:"v-75c9dde5",path:"/de/skill-development/new-language-support.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-75c9dde5").then(n)}},{name:"v-2eab9c93",path:"/de/skill-development/publishing-to-skill-store.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2eab9c93").then(n)}},{name:"v-532802c5",path:"/de/skill-development/room-configuration.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-532802c5").then(n)}},{name:"v-d63d2936",path:"/de/skill-development/skill-configuration-file.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-d63d2936").then(n)}},{name:"v-59baa413",path:"/de/skill-development/skill-download-suggestion.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-59baa413").then(n)}},{name:"v-08842bf3",path:"/de/skill-development/talk-file.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-08842bf3").then(n)}},{name:"v-783892cf",path:"/de/skill-development/widgets.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-783892cf").then(n)}},{name:"v-5c61de05",path:"/de/skill-development/your-first-skill.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5c61de05").then(n)}},{name:"v-0c231626",path:"/de/sponsors/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-0c231626").then(n)}},{path:"/de/sponsors/index.html",redirect:"/de/sponsors/"},{name:"v-207e9734",path:"/de/usage/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-207e9734").then(n)}},{path:"/de/usage/index.html",redirect:"/de/usage/"},{name:"v-592be0a9",path:"/de/usage/web-interface.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-592be0a9").then(n)}},{name:"v-a7323dfc",path:"/links/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-a7323dfc").then(n)}},{path:"/links/index.html",redirect:"/links/"},{name:"v-e860ba34",path:"/satsetup/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-e860ba34").then(n)}},{path:"/satsetup/index.html",redirect:"/satsetup/"},{name:"v-5c24c47a",path:"/setup/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5c24c47a").then(n)}},{path:"/setup/index.html",redirect:"/setup/"},{name:"v-53571db6",path:"/setup/alice-cli.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-53571db6").then(n)}},{name:"v-6d308145",path:"/setup/developer-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-6d308145").then(n)}},{name:"v-6fa52ccd",path:"/setup/docker.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-6fa52ccd").then(n)}},{name:"v-d9d86b36",path:"/setup/image-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-d9d86b36").then(n)}},{name:"v-61d60636",path:"/setup/manual-install.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-61d60636").then(n)}},{name:"v-7851e59f",path:"/setup/preinstalled.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-7851e59f").then(n)}},{name:"v-2a8104ed",path:"/setup/requirements.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2a8104ed").then(n)}},{name:"v-02cf5705",path:"/setup/room-configuration.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-02cf5705").then(n)}},{name:"v-5d648005",path:"/setup/troubleshooting.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5d648005").then(n)}},{name:"v-190fa89e",path:"/setup/wakeword.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-190fa89e").then(n)}},{name:"v-20fa3876",path:"/skill-development/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-20fa3876").then(n)}},{path:"/skill-development/index.html",redirect:"/skill-development/"},{name:"v-202eb20e",path:"/skill-development/down-the-rabbit-hole.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-202eb20e").then(n)}},{name:"v-43b644ef",path:"/skill-development/files-in-depth.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-43b644ef").then(n)}},{name:"v-2f01e9b6",path:"/skill-development/going-further.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2f01e9b6").then(n)}},{name:"v-a71cd67a",path:"/skill-development/new-language-support.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-a71cd67a").then(n)}},{name:"v-88c0dfb6",path:"/skill-development/publishing-to-skill-store.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-88c0dfb6").then(n)}},{name:"v-5d8c4f65",path:"/skill-development/work-made-for-you.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-5d8c4f65").then(n)}},{name:"v-2aedfd5d",path:"/skill-development/your-first-skill.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2aedfd5d").then(n)}},{name:"v-36a43626",path:"/sponsors/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-36a43626").then(n)}},{path:"/sponsors/index.html",redirect:"/sponsors/"},{name:"v-dc05a280",path:"/troubleshooting/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-dc05a280").then(n)}},{path:"/troubleshooting/index.html",redirect:"/troubleshooting/"},{name:"v-834a41b6",path:"/troubleshooting/main-unit.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-834a41b6").then(n)}},{name:"v-2a25b445",path:"/troubleshooting/satellite.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-2a25b445").then(n)}},{name:"v-3b1acf32",path:"/usage/",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-3b1acf32").then(n)}},{path:"/usage/index.html",redirect:"/usage/"},{name:"v-8f2e0e76",path:"/usage/web-interface.html",component:dt,beforeEnter:(e,t,n)=>{Object(Ve.a)("Layout","v-8f2e0e76").then(n)}},{path:"*",component:dt}],ht={title:"",description:"",base:"/",headTags:[["meta",{"http-equiv":"Content-Security-Policy",content:"default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self'; base-uri 'none'; form-action 'none';"}],["link",{rel:"apple-touch-icon",sizes:"144x144",href:"/icons/favicon-152x152.png"}],["link",{rel:"icon",type:"image/png",sizes:"144x144",href:"/icons/favicon-144x144.png"}],["link",{rel:"mask-icon",href:"/icons/maskable_icon.png",color:"#000"}],["link",{rel:"manifest",href:"/manifest.json"}],["meta",{name:"referrer",content:"no-referrer"}],["meta",{name:"apple-mobile-web-app-title",content:"ProjectAlice"}],["meta",{name:"application-name",content:"ProjectAlice Docs"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileImage",content:"/icons/favicon-144x144.png"}],["meta",{name:"msapplication-TileColor",content:"#000"}],["meta",{name:"theme-color",content:"#000"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1"}]],pages:[{title:"Not in use",frontmatter:{title:"Not in use",terms:{hotword:"the phrase you speak to wake Alice, to make her listen to you.",wakeword:"the phrase you speak to wake Alice, to make her listen to you. Same as :hotword: but in Alice's world, the wakeword is linked to a specific user she knows and can identify.",skill:"an aptitude for Alice to do something with what you asked her, the :utterance: she captured/heard. Alice comes with 5 basic skills but more can be installed.",utterance:"a phrase spoken by the user, after saying the :hotword: or a :wakeword:.",intent:"after catching an :utterance: Alice's :NLU: turns it into an intent which represents the action the user asked her to do.",slot:"a variable in an :intent:. An :intent: can have as many slots as needed.",ASR:"Automatic Speech Recognition is a component used to capture human speech and turn it into text.",NLU:"Natural Language Understanding is a component used to extract :intent:intents: and :slot:slots: for the text detected by the :ASR:.",TTS:"Text To Speech is a component used to turn text into an audio file, a voice.",event:'An event is something that happened and Alice broadcasts to all of her managers and :skill:skills:. An event name always starts with "on". examples of events would be "onUserDetected", "onWakeup" or "onRaining".',"main-unit":"the main unit runs the heavy stuff, it's the machine on which Alice is installed.",satellite:"satellites need less resources than the :main-unit:, making them less expensive, they provide at least a microphone and speaker in your other :location:locations: to interact with Alice.",location:"is a place in space, can be a room in your house, but your house can also be a location, or your garden.",manager:"they are the core engines for Alice and all have specific tasks, from loading and managing :skill:skills: to store telemetry data.",session:"could be a synonym of 'dialog'. A session starts by a :hotword: or a :wakeword: and Alice starting to listen. The session ends by itself at the end of the dialog exchange, after as many :utterance:utterances: capture and :intent:intents: treatment as needed, or by timing out.",interface:"Alice's interface is a web server she is running internally, on device, that allows you to access many function on a graphical environment. The interface can be deactivated. By defaults, the interface runs on 'http://ALICE_IP:5000'."}},regularPath:"/GLOSSARY.html",relativePath:"GLOSSARY.md",key:"v-0681b175",path:"/GLOSSARY.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:".",normalizedContent:".",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/images/umbrella.png",heroText:"Project Alice",tagline:"A smart voice assistant privacy centered",actionText:"Get started →",actionLink:"/about-alice/",features:[{title:"Privacy first",details:"You keep control of your data! Nothing goes out without your consent. You can configure Alice to use internet services, but those are all off by default."},{title:"Extensible",details:"Alice comes with a minimum, but you can make her more powerful thanks to an everyday growing skill library made by the community. Even you can become a skill developer!"},{title:"Lightweight",details:"Alice runs easily on a raspberry pi 3, but if you want more power, Alice runs on other hardware thanks to the work of our community!"}],footer:"Copyright © 2014-present Laurent Chervet"},regularPath:"/",relativePath:"README.md",key:"v-4c727654",path:"/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Glossary",frontmatter:{title:"Glossary",sidebarDepth:3,terms:{hotword:"the phrase you speak to wake Alice, to make her listen to you.",wakeword:"the phrase you speak to wake Alice, to make her listen to you. Same as :hotword: but in Alice's world, the wakeword is linked to a specific user she knows and can identify.",skill:"an aptitude for Alice to do something with what you asked her, the :utterance: she captured/heard. Alice comes with 5 basic skills but more can be installed.",utterance:"a phrase spoken by the user, after saying the :hotword: or a :wakeword:.",intent:"after catching an :utterance: Alice's :NLU: turns it into an intent which represents the action the user asked her to do.",slot:"a variable in an :intent:. An :intent: can have as many slots as needed.",ASR:"Automatic Speech Recognition is a component used to capture human speech and turn it into text.",NLU:"Natural Language Understanding is a component used to extract :intent:intents: and :slot:slots: for the text detected by the :ASR:.",TTS:"Text To Speech is a component used to turn text into an audio file, a voice.",event:'An event is something that happened and Alice broadcasts to all of her managers and :skill:skills:. An event name always starts with "on". examples of events would be "onUserDetected", "onWakeup" or "onRaining".',"main-unit":"the main unit runs the heavy stuff, it's the machine on which Alice is installed.",satellite:"satellites need less resources than the :main-unit:, making them less expensive, they provide at least a microphone and speaker in your other :location:locations: to interact with Alice.",location:"is a place in space, can be a room in your house, but your house can also be a location, or your garden.",manager:"they are the core engines for Alice and all have specific tasks, from loading and managing :skill:skills: to store telemetry data.",session:"could be a synonym of 'dialog'. A session starts by a :hotword: or a :wakeword: and Alice starting to listen. The session ends by itself at the end of the dialog exchange, after as many :utterance:utterances: capture and :intent:intents: treatment as needed, or by timing out.",interface:"Alice's interface is a web server she is running internally, on device, that allows you to access many function on a graphical environment. The interface can be deactivated. By defaults, the interface runs on 'http://ALICE_IP:5000'."}},regularPath:"/about-alice/GLOSSARY.html",relativePath:"about-alice/GLOSSARY.md",key:"v-e0c0a552",path:"/about-alice/GLOSSARY.html",headers:[{level:2,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:13},{level:3,title:"Skills",slug:"skills",normalizedTitle:"skills",charIndex:24},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:114},{level:3,title:"Hotword example",slug:"hotword-example",normalizedTitle:"hotword example",charIndex:169},{level:3,title:"Wakeword example",slug:"wakeword-example",normalizedTitle:"wakeword example",charIndex:199},{level:3,title:"Intent example",slug:"intent-example",normalizedTitle:"intent example",charIndex:230},{level:3,title:"Slot example (slots are highlighted)",slug:"slot-example-slots-are-highlighted",normalizedTitle:"slot example (slots are highlighted)",charIndex:274},{level:3,title:"Session example",slug:"session-example",normalizedTitle:"session example",charIndex:348}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Examples Skills Events Hotword example Wakeword example Intent example Slot example (slots are highlighted) Session example",content:"# Glossary\n# Examples\n# Skills\nA complete list of skills can be found directly on your Alice's or online here.\n\n# Events\nA complete list of events can be found here.\n\n# Hotword example\nHey Snips!\n\n# Wakeword example\nHey Alice?\n\n# Intent example\nTurn the lights on please\n\n# Slot example (slots are highlighted)\nTurn on the lights in the kitchen\n\n# Session example\nHey Alice?Yes?What's the temperature outside?It's currently 19°C outside",normalizedContent:"# glossary\n# examples\n# skills\na complete list of skills can be found directly on your alice's or online here.\n\n# events\na complete list of events can be found here.\n\n# hotword example\nhey snips!\n\n# wakeword example\nhey alice?\n\n# intent example\nturn the lights on please\n\n# slot example (slots are highlighted)\nturn on the lights in the kitchen\n\n# session example\nhey alice?yes?what's the temperature outside?it's currently 19°c outside",charsets:{}},{title:"What is Project Alice",frontmatter:{title:"What is Project Alice",sidebarDepth:3},regularPath:"/about-alice/",relativePath:"about-alice/README.md",key:"v-5a17b974",path:"/about-alice/",headers:[{level:2,title:"Intro",slug:"intro",normalizedTitle:"intro",charIndex:2},{level:2,title:"Why this assistant",slug:"why-this-assistant",normalizedTitle:"why this assistant",charIndex:641},{level:2,title:"What is needed",slug:"what-is-needed",normalizedTitle:"what is needed",charIndex:1889},{level:2,title:"What can Alice do?",slug:"what-can-alice-do",normalizedTitle:"what can alice do?",charIndex:2163}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Intro Why this assistant What is needed What can Alice do?",content:"# Intro\nHey Alice?Yeah?What are you?Mmmmh, well, let's see what Psycho has to say about this!Project Alice is an open source virtual assistant that can run entirely offline, respecting your privacy. You can talk to her or ask her stuff, and she'll answer you if she understood. In case she didn't understand, you can evolve her by adding new skills developed by our community. She can automate your home or give you news, wake you at morning or help you cook, you shape her the way you want!\n\nHelp Alice grow\n\nAlice is young, although in development since quite a while now. You can also be part of the adventure and help by contributing\n\n# Why this assistant\n 1. I started around 2014 to create my own assistant. It really became something when I found out about (now dead) Snip. I built Alice on top of it and decided to share it with the rest of the community. Snips died, Alice survived and Snips closed source components have been removed and coded anew for a total transparency.\n 2. I love coding. I might not be a developer, but I have this running in my blood. I started very early, at the age of 6, on Dos back then. I love challenges, that's what make me go deeper and wanting more.\n 3. The name comes from Resident Evil, so does the logo. I love the Red Queen and always wanted to have my own Red Queen at home.\n 4. This assistant is free to use for anyone and is modular enough to allow anyone to use it, with something as simple as a Raspberry Pi 3.\n 5. The concept of community made (and Alice team curated) skills allows anyone with some basic python knowledge to teach Alice about their incredible ideas and make them a reality for the community\n 6. After spending over 2 years with Snips, one thing is clear: Privacy matters. Alice can work entirely offline but can also use online services, if allowed by your settings, such as Google ASR, Amazon TTS and many others.\n\n# What is needed\n * A Raspberry Pi 3* or newer(Raspberry 4, 4GB*) and an SD card*\n * A microphone and some speaker. I recommend a Respeaker 2* (original, but a bit more expensive by Seeed Studio*) to start with.\n * A way to flash your SD card with our prefabricated image!\n\n# What can Alice do?\nMany things! But she cannot cook yet... Have a look at our ever-growing community made skill collection: https://store.projectalice.io\n\n*Project Alice is a participant in the Amazon Associates Program, we earn commissions for qualified purchases over the supplied links to Amazon. By buying over these links you support Project Alice - all recommendations are real and not influenced by this! Any earnings will be used to keep running costs for Alice covered and push her to new heights!",normalizedContent:"# intro\nhey alice?yeah?what are you?mmmmh, well, let's see what psycho has to say about this!project alice is an open source virtual assistant that can run entirely offline, respecting your privacy. you can talk to her or ask her stuff, and she'll answer you if she understood. in case she didn't understand, you can evolve her by adding new skills developed by our community. she can automate your home or give you news, wake you at morning or help you cook, you shape her the way you want!\n\nhelp alice grow\n\nalice is young, although in development since quite a while now. you can also be part of the adventure and help by contributing\n\n# why this assistant\n 1. i started around 2014 to create my own assistant. it really became something when i found out about (now dead) snip. i built alice on top of it and decided to share it with the rest of the community. snips died, alice survived and snips closed source components have been removed and coded anew for a total transparency.\n 2. i love coding. i might not be a developer, but i have this running in my blood. i started very early, at the age of 6, on dos back then. i love challenges, that's what make me go deeper and wanting more.\n 3. the name comes from resident evil, so does the logo. i love the red queen and always wanted to have my own red queen at home.\n 4. this assistant is free to use for anyone and is modular enough to allow anyone to use it, with something as simple as a raspberry pi 3.\n 5. the concept of community made (and alice team curated) skills allows anyone with some basic python knowledge to teach alice about their incredible ideas and make them a reality for the community\n 6. after spending over 2 years with snips, one thing is clear: privacy matters. alice can work entirely offline but can also use online services, if allowed by your settings, such as google asr, amazon tts and many others.\n\n# what is needed\n * a raspberry pi 3* or newer(raspberry 4, 4gb*) and an sd card*\n * a microphone and some speaker. i recommend a respeaker 2* (original, but a bit more expensive by seeed studio*) to start with.\n * a way to flash your sd card with our prefabricated image!\n\n# what can alice do?\nmany things! but she cannot cook yet... have a look at our ever-growing community made skill collection: https://store.projectalice.io\n\n*project alice is a participant in the amazon associates program, we earn commissions for qualified purchases over the supplied links to amazon. by buying over these links you support project alice - all recommendations are real and not influenced by this! any earnings will be used to keep running costs for alice covered and push her to new heights!",charsets:{}},{title:"Community made documentation",frontmatter:{title:"Community made documentation",sidebarDepth:3,tags:["community"]},regularPath:"/community-made/",relativePath:"community-made/README.md",key:"v-58ced0b4",path:"/community-made/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Yes, you can make documentation and ask us to merge it with the official documentation! Please refer to our documentation repository",normalizedContent:"yes, you can make documentation and ask us to merge it with the official documentation! please refer to our documentation repository",charsets:{}},{title:"Frequent questions and answers",frontmatter:{sidebarDepth:3,title:"Frequent questions and answers",tags:["getting started","bug","question","answer"]},regularPath:"/community-made/frequent-questions-and-answer.html",relativePath:"community-made/frequent-questions-and-answer.md",key:"v-1f9c4177",path:"/community-made/frequent-questions-and-answer.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# Frequent questions and answers",normalizedContent:"# frequent questions and answers",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["getting started","pycharm","jetbrains","ide","ide settings","install pycharm","skill dev"]},regularPath:"/community-made/getting-started-pycharm.html",relativePath:"community-made/getting-started-pycharm.md",key:"v-76fb2d2b",path:"/community-made/getting-started-pycharm.html",headers:[{level:2,title:"Download and install Pycharm",slug:"download-and-install-pycharm",normalizedTitle:"download and install pycharm",charIndex:1059},{level:2,title:"A bit about GitHub.",slug:"a-bit-about-github",normalizedTitle:"a bit about github.",charIndex:1233},{level:2,title:"Setup Pycharm directories",slug:"setup-pycharm-directories",normalizedTitle:"setup pycharm directories",charIndex:3370},{level:3,title:"Option 1",slug:"option-1",normalizedTitle:"option 1",charIndex:3398},{level:3,title:"Option 2",slug:"option-2",normalizedTitle:"option 2",charIndex:5064},{level:2,title:"Pycharm dependencies",slug:"pycharm-dependencies",normalizedTitle:"pycharm dependencies",charIndex:6391},{level:2,title:"Changing branches",slug:"changing-branches",normalizedTitle:"changing branches",charIndex:659},{level:2,title:"Quality control settings",slug:"quality-control-settings",normalizedTitle:"quality control settings",charIndex:680},{level:2,title:"Updating your repository",slug:"updating-your-repository",normalizedTitle:"updating your repository",charIndex:11190},{level:2,title:"Handy Alice commands when testing a :skill:",slug:"handy-alice-commands-when-testing-a",normalizedTitle:'handy alice commands when testing a <term term="skill"/>',charIndex:null}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Download and install Pycharm A bit about GitHub. Setup Pycharm directories Option 1 Option 2 Pycharm dependencies Changing branches Quality control settings Updating your repository Handy Alice commands when testing a :skill:",content:'# Pycharm from Jetbrains\nHave you just started with Alice and all excited with the possibilities you could unlock by creating your own ? But uncertain where to start? Well you\'ve come to the right place. Alice is written in the Python language. The team behind Alice do most of their Python magic and more using an IDE called Pycharm. For that reason and because it\'s a great program we will focus on getting Pycharm setup for you. That way getting help in the discord will also be easier. So let\'s get started.\n\nWhat we will cover in the below!!\n\n * Where to get Pycharm\n * Basics of GitHub\n * Setting up Pycharm directories\n * Check dependencies are set\n * Changing branches\n * Quality control settings\n * Updating your repositories\n * Some handy Alice commands when skill making\n\nYes I understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. Then you\'ll have the re assurance that you\'ve done all you can to meet the Alice code guidelines. Which by the way is something you should read as well...\n\n# Download and install Pycharm\nFirst lets download Pycharm, The community version is free and a great starting point. Get that from here: https://www.jetbrains.com/pycharm/\n\n# A bit about GitHub.\nGreat, so now Pycharm is downloaded and installed lets set up a few things to make it easier in the long run. If you haven\'t already get yourself a GitHub account. You can read about it here https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration or jump straight to the signup page here: https://GitHub.com/.\n\nThe below steps aren\'t vital to code in Pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\nGitHub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. GitHub once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. That way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nSo when you create a new via the Alice dev-mode and upload it to GitHub, it will initially create the required framework for the . It will then place the new in your ProjectAlice/skills/ directory on your PI and store it on GitHub as a repository. Now when you edit/modify the and ctrl + s to save it, it will save the changes ONLY to your PI and the GitHub copy will stay the same. When you feel you have the code at a point that you want to save it on GitHub as well, then in Pycharm you can click the green check mark (top right of the Pycharm screen) and "commit" the changes.\n\nCommitting the changes in simple terms, is geek talk for saving. 😃 It tells GitHub you\'ve modified code, and you want to store it on GitHub. Once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). Pycharm will then "push" your commit (modified files) to your GitHub repo. By pushing to origin, you will now have a backup of your files on GitHub which at a later stage you can share with who ever or create a "pull request" (PR) to the ProjectAlice team, so the can be reviewed for merging/adding in the Alice store so everyone can enjoy using it.\n\n# Setup Pycharm directories\n# Option 1\nThis option is a safe way to start out with Pycharm it also gets you familiar with GitHub version control.\n\n Warning Unless you use Pycharm professional, going with this option will mean you either have to copy your folder to Alice each time you want to test something. Alternatively push the updates to your repository, and then on your Pi.\n\ncd ProjectAlice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart ProjectAlice\n\n * Sign in to GitHub. Go to ProjectAlice.\n * In the top right of that page, click on "fork" to basically clone a copy of ProjectAlice to your own GitHub account.\n * Now create a folder on your Desktop somewhere. Let\'s say for now it\'s going to be Documents/GitHubProjectAlice for example.\n * Now open Pycharm\n * In the menu along the top of Pycharm click on "VCS" then "get from version control"\n\n * In the window that opens click on "GitHub" from the menu on the left. You should see in the list that appears your ProjectAlice fork you just forked.\n * Click that and direct it to the "Documents/GitHubProjectAlice" folder you just created.\n * Make the path -> Documents/GitHubProjectAlice/ProjectAlice so that it clones into a folder called ProjectAlice.\n * When Pycharm pops up a window choose "this window".\n\nThen once done click VCS again and then "get from version control" then "GitHub " again and select your . Make the path now go to Documents/GitHubProjectAlice/skills/ .... when asked by Pycharm choose "attach".\n\nNow you should have Pycharm displaying ProjectAlice and all her files and your showing up in the ProjectAlice/skills directory. (note this is all local files and nothing to do with your Pi for now)\n\n# Option 2\nAuto login to your pi and set up a sshfs connection to trick Pycharm\n\nThis below optional method will allow you to load your PI\'s ProjectAlice files directly into Pycharm. Therefore, allowing you to modify the files on your PI directly. However, this raises the chances of you breaking Alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. Follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. Create a folder on your desktop computer in the home directory called something like "Development"\n    \n    \n 3. Then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/ProjectAlice /home/bob/Development/Alice\n    \n    \n\n(obviously change the IP to your pi\'s IP and the second path to your new development folders path)\n\nWhat this will do is gain access to your PI via your windows/linux desktop by creating a folder in the Development folder and show the contents of your PI\'s\'s ProjectAlice folder. In doing so Pycharm will think the Development/Alice folder is an actual folder on your desktop and therefore in Pycharm you can now view and modify ProjectAlice files via Pycharm directly 😃\n\n# Pycharm dependencies\nNow you have the directories loaded in Pycharm. Go to Pycharm settings ( ctrl + shift + s )\n\n * Then in the menu on the left. Click "project-alice-assistant/ProjectAlice".\n * Then click "project dependencies"\n * Now click your to highlight it\n * Then put a tick in "ProjectAlice" tick box to tell Pycharm your depends on the files from the ProjectAlice files\n\n# Changing branches\nThe latest branch in Alice as of writing this is b3. You may want to set your Pycharm to B3 branch, so you stay up to date with the latest changes.\n\nIn Pycharm click your way through this\n\nVCS -> Git -> branches-> repositories ->ProjectAlice -> local branches -> 1.0.0-b3 -> checkout.\n\nThat should cause Pycharm to move to the b3 branch. You\'ll only need to do this once also unless you start playing with branches, but I don\'t advise that for now until your use to that side of things.\n\nThat should be enough for the moment to get Pycharm setup as far as main directories go. Next we need to set up SonarCloud, sk-package, and Pycharm settings so that your code is as compatible as possible with Alice.\n\n# Quality control settings\nFirst let\'s now set up the ProjectAlice-Sk package\n\n * Fork the sk repo from SkillKit\n * In Pycharm click into "VCS" menu then "GitHub" (just like earlier)\n * Select your sk fork and download it to GitHubProjectAlice/ProjectAlice/SkPackage ( or similar)\n * Choose "attach" when prompted.\n * Now go to "run " menu in Pycharm (along top of screen)\n * Then choose "debug configuration"\n * click the + sign to make a new script.\n * Call it something like "Alice Validation "\n * Then to the right of that screen ... for the field "script path " enter the local path to the ProjectAliceSkillKit.py file\n * In the field "parameters" add\n\nvalidate --paths /home/bob/Documents/GitHubProjectAlice/ProjectAlice/skills\n\n(Change the path to suit your path to the directory.)\n\n * Put a tick in the box , "run with python console"\n * Click apply.\n\nNow when in Pycharm and you click the run icon (top right of screen) with the Alice Validation script selected, Pycharm will loop through every you have listed in the folder and do a validation on it. It will print the results out in the console of Pycharm.\n\nAs an added bonus let\'s also add the sk schema files to Pycharm so that you get instant feedback on quality of your .install file and json files etc. Note that this does NOT check everything that the Sk package does, so you still need to do the above. This will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * Go to this page Schema Files\n   \n   \n * Take a look at that list. You will see different schema files for different file types. We will now go through installing just one of those types into Pycharm, and you can do all the rest on your own.\n   \n   \n * Let\'s pick on the install-schema.json file. click it to open that code then click the "Raw" button to the right.\n   \n   \n * Copy the URL\n   \n   \n * Come back to Pycharm and go to your .\n   \n   \n * Double-click the .install file for your to open it in the editor\n   \n   \n * Now at the very bottom right of your Pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nNote this image shows JSON ProjectAlice talks.... you\'ll likely have JSON No schema\n\n * Then click "new schema mapping"\n * For name field type in something like "Alice install"\n * For URL field paste the URL of the Raw file you just copied\n * On the right-hand side of that screen click the + to add new mapping\n * Type *.install that should now apply that schema to any of the blah.install files in the future.\n * Click Apply\n * Do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nSecondly set up SonarCloud\n\nSonarLint (SonarCloud, sonarQube) is a great tool for making sure your code complies with Alice. It will warn you in Pycharm when you call a variable Thisis_myVariable instead of the Alice way which is thisIsMyVariable and of course many other checks. It\'s a must-have plugin so let\'s go add that now.\n\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a dev, in order for you to generate your access token\n * Once you\'ve been added in our dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token, and you\'re good to go!\n\n# Updating your repository\nLet\'s touch a little more on GitHub repos and keeping them up to date\n\nAlice is always evolving. As such the files in Alice are always changing. So that you have the latest files we want to get into the habit of pushing and pulling the Upstream repo.\n\n"Wooah back up buddy" I hear you saying.... that\'s a new word. what\'s upstream ?\n\nWell your repository as far as GitHub is concerned is called "origin". Whereas the repository you forked from is called "upstream" so in this case the upstream for your ProjectAlice files will be. https://GitHub.com/project-alice-assistant/ProjectAlice\n\nKnowing that, let\'s add that url to your Pycharm, so we can receive updates.\n\n * Click "VCS" then "Git" then "remotes"\n * You should see in the list ProjectAlice "origin"\n * Click your remote repo in this screen to highlight it\n * Now click the + sign\n * In the window that opens. For the "name" field, add "upstream" <<- has to be that nothing else will work.\n * In the url field add " https://GitHub.com/project-alice-assistant/ProjectAlice "\n * Click save\n * Now click "VCS" again and then "git" then "fetch" this will update head and branches etc\n * Next click "VCS" again then "pull"\n * In the window that opens starting from the left drop down box ....\n\n * Choose ProjectAlice\n * Choose "pull"\n * Choose "upstream"\n * Choose "b3 branch"\n * Click pull\n\nit will now "pull" all the latest changes that the Alice team have pushed recently into your local files on your computer. Pycharm is now up-to-date. However, your "origin" (your repo) isn\'t up-to-date with your Pycharm local files now. So now do a ctl+shift+k to "push" updated files to your origin repo. This process of pull and push will become second nature to you eventually. 😃\n\n# Handy Alice commands when testing a \nWhen making a you\'ll often not get it right the first time and frequently use print statements. These don\'t show in syslog. So to be able to view these statements along with being able to see clearly what\'s happening when you run Alice you may want to start her manually.\n\nTo do that:\n\nsudo systemctl stop ProjectAlice\n\ncd ProjectAlice\n\n./venv/bin/python main.py\n\nYou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nHope that has helped. Enjoy your coding adventures.\n\nBy LazzaAU',normalizedContent:'# pycharm from jetbrains\nhave you just started with alice and all excited with the possibilities you could unlock by creating your own ? but uncertain where to start? well you\'ve come to the right place. alice is written in the python language. the team behind alice do most of their python magic and more using an ide called pycharm. for that reason and because it\'s a great program we will focus on getting pycharm setup for you. that way getting help in the discord will also be easier. so let\'s get started.\n\nwhat we will cover in the below!!\n\n * where to get pycharm\n * basics of github\n * setting up pycharm directories\n * check dependencies are set\n * changing branches\n * quality control settings\n * updating your repositories\n * some handy alice commands when skill making\n\nyes i understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. then you\'ll have the re assurance that you\'ve done all you can to meet the alice code guidelines. which by the way is something you should read as well...\n\n# download and install pycharm\nfirst lets download pycharm, the community version is free and a great starting point. get that from here: https://www.jetbrains.com/pycharm/\n\n# a bit about github.\ngreat, so now pycharm is downloaded and installed lets set up a few things to make it easier in the long run. if you haven\'t already get yourself a github account. you can read about it here https://git-scm.com/book/en/v2/github-account-setup-and-configuration or jump straight to the signup page here: https://github.com/.\n\nthe below steps aren\'t vital to code in pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\ngithub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. github once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. that way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nso when you create a new via the alice dev-mode and upload it to github, it will initially create the required framework for the . it will then place the new in your projectalice/skills/ directory on your pi and store it on github as a repository. now when you edit/modify the and ctrl + s to save it, it will save the changes only to your pi and the github copy will stay the same. when you feel you have the code at a point that you want to save it on github as well, then in pycharm you can click the green check mark (top right of the pycharm screen) and "commit" the changes.\n\ncommitting the changes in simple terms, is geek talk for saving. 😃 it tells github you\'ve modified code, and you want to store it on github. once commited, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). pycharm will then "push" your commit (modified files) to your github repo. by pushing to origin, you will now have a backup of your files on github which at a later stage you can share with who ever or create a "pull request" (pr) to the projectalice team, so the can be reviewed for merging/adding in the alice store so everyone can enjoy using it.\n\n# setup pycharm directories\n# option 1\nthis option is a safe way to start out with pycharm it also gets you familiar with github version control.\n\n warning unless you use pycharm professional, going with this option will mean you either have to copy your folder to alice each time you want to test something. alternatively push the updates to your repository, and then on your pi.\n\ncd projectalice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart projectalice\n\n * sign in to github. go to projectalice.\n * in the top right of that page, click on "fork" to basically clone a copy of projectalice to your own github account.\n * now create a folder on your desktop somewhere. let\'s say for now it\'s going to be documents/githubprojectalice for example.\n * now open pycharm\n * in the menu along the top of pycharm click on "vcs" then "get from version control"\n\n * in the window that opens click on "github" from the menu on the left. you should see in the list that appears your projectalice fork you just forked.\n * click that and direct it to the "documents/githubprojectalice" folder you just created.\n * make the path -> documents/githubprojectalice/projectalice so that it clones into a folder called projectalice.\n * when pycharm pops up a window choose "this window".\n\nthen once done click vcs again and then "get from version control" then "github " again and select your . make the path now go to documents/githubprojectalice/skills/ .... when asked by pycharm choose "attach".\n\nnow you should have pycharm displaying projectalice and all her files and your showing up in the projectalice/skills directory. (note this is all local files and nothing to do with your pi for now)\n\n# option 2\nauto login to your pi and set up a sshfs connection to trick pycharm\n\nthis below optional method will allow you to load your pi\'s projectalice files directly into pycharm. therefore, allowing you to modify the files on your pi directly. however, this raises the chances of you breaking alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. create a folder on your desktop computer in the home directory called something like "development"\n    \n    \n 3. then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/projectalice /home/bob/development/alice\n    \n    \n\n(obviously change the ip to your pi\'s ip and the second path to your new development folders path)\n\nwhat this will do is gain access to your pi via your windows/linux desktop by creating a folder in the development folder and show the contents of your pi\'s\'s projectalice folder. in doing so pycharm will think the development/alice folder is an actual folder on your desktop and therefore in pycharm you can now view and modify projectalice files via pycharm directly 😃\n\n# pycharm dependencies\nnow you have the directories loaded in pycharm. go to pycharm settings ( ctrl + shift + s )\n\n * then in the menu on the left. click "project-alice-assistant/projectalice".\n * then click "project dependencies"\n * now click your to highlight it\n * then put a tick in "projectalice" tick box to tell pycharm your depends on the files from the projectalice files\n\n# changing branches\nthe latest branch in alice as of writing this is b3. you may want to set your pycharm to b3 branch, so you stay up to date with the latest changes.\n\nin pycharm click your way through this\n\nvcs -> git -> branches-> repositories ->projectalice -> local branches -> 1.0.0-b3 -> checkout.\n\nthat should cause pycharm to move to the b3 branch. you\'ll only need to do this once also unless you start playing with branches, but i don\'t advise that for now until your use to that side of things.\n\nthat should be enough for the moment to get pycharm setup as far as main directories go. next we need to set up sonarcloud, sk-package, and pycharm settings so that your code is as compatible as possible with alice.\n\n# quality control settings\nfirst let\'s now set up the projectalice-sk package\n\n * fork the sk repo from skillkit\n * in pycharm click into "vcs" menu then "github" (just like earlier)\n * select your sk fork and download it to githubprojectalice/projectalice/skpackage ( or similar)\n * choose "attach" when prompted.\n * now go to "run " menu in pycharm (along top of screen)\n * then choose "debug configuration"\n * click the + sign to make a new script.\n * call it something like "alice validation "\n * then to the right of that screen ... for the field "script path " enter the local path to the projectaliceskillkit.py file\n * in the field "parameters" add\n\nvalidate --paths /home/bob/documents/githubprojectalice/projectalice/skills\n\n(change the path to suit your path to the directory.)\n\n * put a tick in the box , "run with python console"\n * click apply.\n\nnow when in pycharm and you click the run icon (top right of screen) with the alice validation script selected, pycharm will loop through every you have listed in the folder and do a validation on it. it will print the results out in the console of pycharm.\n\nas an added bonus let\'s also add the sk schema files to pycharm so that you get instant feedback on quality of your .install file and json files etc. note that this does not check everything that the sk package does, so you still need to do the above. this will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * go to this page schema files\n   \n   \n * take a look at that list. you will see different schema files for different file types. we will now go through installing just one of those types into pycharm, and you can do all the rest on your own.\n   \n   \n * let\'s pick on the install-schema.json file. click it to open that code then click the "raw" button to the right.\n   \n   \n * copy the url\n   \n   \n * come back to pycharm and go to your .\n   \n   \n * double-click the .install file for your to open it in the editor\n   \n   \n * now at the very bottom right of your pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nnote this image shows json projectalice talks.... you\'ll likely have json no schema\n\n * then click "new schema mapping"\n * for name field type in something like "alice install"\n * for url field paste the url of the raw file you just copied\n * on the right-hand side of that screen click the + to add new mapping\n * type *.install that should now apply that schema to any of the blah.install files in the future.\n * click apply\n * do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nsecondly set up sonarcloud\n\nsonarlint (sonarcloud, sonarqube) is a great tool for making sure your code complies with alice. it will warn you in pycharm when you call a variable thisis_myvariable instead of the alice way which is thisismyvariable and of course many other checks. it\'s a must-have plugin so let\'s go add that now.\n\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a dev, in order for you to generate your access token\n * once you\'ve been added in our dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token, and you\'re good to go!\n\n# updating your repository\nlet\'s touch a little more on github repos and keeping them up to date\n\nalice is always evolving. as such the files in alice are always changing. so that you have the latest files we want to get into the habit of pushing and pulling the upstream repo.\n\n"wooah back up buddy" i hear you saying.... that\'s a new word. what\'s upstream ?\n\nwell your repository as far as github is concerned is called "origin". whereas the repository you forked from is called "upstream" so in this case the upstream for your projectalice files will be. https://github.com/project-alice-assistant/projectalice\n\nknowing that, let\'s add that url to your pycharm, so we can receive updates.\n\n * click "vcs" then "git" then "remotes"\n * you should see in the list projectalice "origin"\n * click your remote repo in this screen to highlight it\n * now click the + sign\n * in the window that opens. for the "name" field, add "upstream" <<- has to be that nothing else will work.\n * in the url field add " https://github.com/project-alice-assistant/projectalice "\n * click save\n * now click "vcs" again and then "git" then "fetch" this will update head and branches etc\n * next click "vcs" again then "pull"\n * in the window that opens starting from the left drop down box ....\n\n * choose projectalice\n * choose "pull"\n * choose "upstream"\n * choose "b3 branch"\n * click pull\n\nit will now "pull" all the latest changes that the alice team have pushed recently into your local files on your computer. pycharm is now up-to-date. however, your "origin" (your repo) isn\'t up-to-date with your pycharm local files now. so now do a ctl+shift+k to "push" updated files to your origin repo. this process of pull and push will become second nature to you eventually. 😃\n\n# handy alice commands when testing a \nwhen making a you\'ll often not get it right the first time and frequently use print statements. these don\'t show in syslog. so to be able to view these statements along with being able to see clearly what\'s happening when you run alice you may want to start her manually.\n\nto do that:\n\nsudo systemctl stop projectalice\n\ncd projectalice\n\n./venv/bin/python main.py\n\nyou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nhope that has helped. enjoy your coding adventures.\n\nby lazzaau',charsets:{}},{title:"Contributing",frontmatter:{title:"Contributing",sidebarDepth:3},regularPath:"/contribute/",relativePath:"contribute/README.md",key:"v-4c3563b4",path:"/contribute/",headers:[{level:2,title:"Documentation",slug:"documentation",normalizedTitle:"documentation",charIndex:273},{level:2,title:"Core",slug:"core",normalizedTitle:"core",charIndex:492},{level:3,title:"Inform an Issue",slug:"inform-an-issue",normalizedTitle:"inform an issue",charIndex:556},{level:3,title:"Core pull request Guidelines",slug:"core-pull-request-guidelines",normalizedTitle:"core pull request guidelines",charIndex:936},{level:2,title:"Skills",slug:"skills",normalizedTitle:"skills",charIndex:1155},{level:3,title:"New skills",slug:"new-skills",normalizedTitle:"new skills",charIndex:1164},{level:3,title:"Translations",slug:"translations",normalizedTitle:"translations",charIndex:1305},{level:3,title:"Skills pull request Guidelines",slug:"skills-pull-request-guidelines",normalizedTitle:"skills pull request guidelines",charIndex:1462},{level:2,title:"Do you like ProjectAlice?",slug:"do-you-like-projectalice",normalizedTitle:"do you like projectalice?",charIndex:1783},{level:3,title:"Spread the word",slug:"spread-the-word",normalizedTitle:"spread the word",charIndex:1811},{level:3,title:"Become a stargazer",slug:"become-a-stargazer",normalizedTitle:"become a stargazer",charIndex:1909},{level:3,title:"Stay in touch",slug:"stay-in-touch",normalizedTitle:"stay in touch",charIndex:2021}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Documentation Core Inform an Issue Core pull request Guidelines Skills New skills Translations Skills pull request Guidelines Do you like ProjectAlice? Spread the word Become a stargazer Stay in touch",content:"# Thank you\nFirst, thank you for being interested in contributing to ProjectAlice. 🙏\n\nA lot of things could be improved and enriched with your collaboration no matter if you are an experienced developer or not. Below you will find just some guidelines for inspiration.\n\n# Documentation\nYou can write, translate and improve ProjectAlice's documentation. Each page has a link to its source code, so you can easily edit and send a PR if you find a typo or something that's not clear enough.\n\n# Core\nFind an open issue to tackle. New features are welcome!\n\n# Inform an Issue\n * What issues can I report?\n\nBesides reporting a bug, you can propose features, ideas, etc.\n\nYou can also open an issue if something in the documentation is not clear enough.\n\n * How to report?\n\nJust try to explain what happens and what is expected to happen . Also, it would be very useful to provide a way to reproduce the issue and logs that show the issue\n\n# Core pull request Guidelines\nReference your PR to a related issue (if one exists) and provide a description of the changes proposed. Make sure you follow the code guidelines described in the section code guidelines.\n\n# Skills\n# New skills\nNew skills are always welcome. A guide on how to create skills for Project Alice can be found in the section skill-development\n\n# Translations\nSkills need new language support, and the system can be translated to support new languages! Check our dedicated page to learn how to do it!\n\n# Skills pull request Guidelines\nReference your PR to a related issue (if one exists) and provide a description of the changes proposed. Make sure you follow the code guidelines described in the section code guidelines. To validate your skill you can use the Alice Skill Kit as described in the section alice skill kit.\n\n# Do you like ProjectAlice?\n# Spread the word\nHelp to promote the project with you friends, colleagues and the social media.\n\n# Become a stargazer\nMaybe you don't have the habit to star projects on GitHub, we kindly ask you to do so. 😃\n\n# Stay in touch\n * Join ProjectAlice on Discord",normalizedContent:"# thank you\nfirst, thank you for being interested in contributing to projectalice. 🙏\n\na lot of things could be improved and enriched with your collaboration no matter if you are an experienced developer or not. below you will find just some guidelines for inspiration.\n\n# documentation\nyou can write, translate and improve projectalice's documentation. each page has a link to its source code, so you can easily edit and send a pr if you find a typo or something that's not clear enough.\n\n# core\nfind an open issue to tackle. new features are welcome!\n\n# inform an issue\n * what issues can i report?\n\nbesides reporting a bug, you can propose features, ideas, etc.\n\nyou can also open an issue if something in the documentation is not clear enough.\n\n * how to report?\n\njust try to explain what happens and what is expected to happen . also, it would be very useful to provide a way to reproduce the issue and logs that show the issue\n\n# core pull request guidelines\nreference your pr to a related issue (if one exists) and provide a description of the changes proposed. make sure you follow the code guidelines described in the section code guidelines.\n\n# skills\n# new skills\nnew skills are always welcome. a guide on how to create skills for project alice can be found in the section skill-development\n\n# translations\nskills need new language support, and the system can be translated to support new languages! check our dedicated page to learn how to do it!\n\n# skills pull request guidelines\nreference your pr to a related issue (if one exists) and provide a description of the changes proposed. make sure you follow the code guidelines described in the section code guidelines. to validate your skill you can use the alice skill kit as described in the section alice skill kit.\n\n# do you like projectalice?\n# spread the word\nhelp to promote the project with you friends, colleagues and the social media.\n\n# become a stargazer\nmaybe you don't have the habit to star projects on github, we kindly ask you to do so. 😃\n\n# stay in touch\n * join projectalice on discord",charsets:{}},{title:"Code guidelines",frontmatter:{title:"Code guidelines",sidebarDepth:4},regularPath:"/contribute/code-guidelines.html",relativePath:"contribute/code-guidelines.md",key:"v-1991b62f",path:"/contribute/code-guidelines.html",headers:[{level:2,title:"Pycharm settings",slug:"pycharm-settings",normalizedTitle:"pycharm settings",charIndex:1145},{level:2,title:"Reformat your code",slug:"reformat-your-code",normalizedTitle:"reformat your code",charIndex:1693},{level:2,title:"Check your code",slug:"check-your-code",normalizedTitle:"check your code",charIndex:2122},{level:2,title:"Automatic code check",slug:"automatic-code-check",normalizedTitle:"automatic code check",charIndex:2351}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Pycharm settings Reformat your code Check your code Automatic code check",content:"# Intro\n * We use tabs and not spaces for indentation\n * We prefix private class variables with an underscore\n * We prefix private methods with an underscore\n * We use camelCase for variables, not snake_case: * self._myVariableName\n   \n   \n * We use UPPER_CASE for class static vars or final vars: * LIGHT_SPEED = 299792458\n   \n   \n * We use PascalCase for class names\n * We use 2 empty lines around met is ods\n * We do strong type method variables\n * We do strong type method returns: * Return '-> None' is not mandatory\n   \n   \n * We speak English\n * We use properties getters and setters, not getters and setters\n * We really care for anti-patterns: https://docs.quantifiedcode.com/python-anti-patterns/\n * We use fstrings and dropped the usage of .format() when possible: * print(f'Hi! my name is {name}')instead of print('My name is {}'.format(name)\n   \n   \n * Python 2 is dead\n * Init dictionaries and lists with dict() and list() and not with {} or []\n * Do never shadow a builtin var or method\n * We don't copyright the files themselves. We believe in sharing, and the main file contains authors. The project is licensed under GPLv3.\n\n# Pycharm settings\nTo make things easier, I have shared my pycharm settings under a GitHub repository. Simply open pycharm, click File in the top left corner and choose Settings repository and choose Overwrite local\n\nNOTE: You may have to also CTRL+ALT+s to open the settings' editor manually. Then go to the menu Version control >> GitHub and if you had a previous GitHub account stored in here then it may get overwritten with ours. If so click that name then remove it by clicking the \" - \" then click the \" + \" and re add your GitHub account.\n\n# Reformat your code\nPycharm comes with a powerful inbuilt code formatter which you can use to adapt your code to our guidelines once you have linked your pycharm to our settings repository. Right-click on your project and choose Reformat code. You'll be presented with a popup to choose some options:\n\nIf you don't see that reformat option on a right click then it can also be found under the menu heading code on the toolbar.\n\n# Check your code\nPycharm comes with an inbuilt code checker. Beside the \"per file\" instant check (top right corner, green tick if ok) you can run an analysis on your code by right-clicking your project and choose Inspect code:\n\n# Automatic code check\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a skill dev, in order for you to generate your access token\n * Once you've been added in our skill dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token, and you are good to go!",normalizedContent:"# intro\n * we use tabs and not spaces for indentation\n * we prefix private class variables with an underscore\n * we prefix private methods with an underscore\n * we use camelcase for variables, not snake_case: * self._myvariablename\n   \n   \n * we use upper_case for class static vars or final vars: * light_speed = 299792458\n   \n   \n * we use pascalcase for class names\n * we use 2 empty lines around met is ods\n * we do strong type method variables\n * we do strong type method returns: * return '-> none' is not mandatory\n   \n   \n * we speak english\n * we use properties getters and setters, not getters and setters\n * we really care for anti-patterns: https://docs.quantifiedcode.com/python-anti-patterns/\n * we use fstrings and dropped the usage of .format() when possible: * print(f'hi! my name is {name}')instead of print('my name is {}'.format(name)\n   \n   \n * python 2 is dead\n * init dictionaries and lists with dict() and list() and not with {} or []\n * do never shadow a builtin var or method\n * we don't copyright the files themselves. we believe in sharing, and the main file contains authors. the project is licensed under gplv3.\n\n# pycharm settings\nto make things easier, i have shared my pycharm settings under a github repository. simply open pycharm, click file in the top left corner and choose settings repository and choose overwrite local\n\nnote: you may have to also ctrl+alt+s to open the settings' editor manually. then go to the menu version control >> github and if you had a previous github account stored in here then it may get overwritten with ours. if so click that name then remove it by clicking the \" - \" then click the \" + \" and re add your github account.\n\n# reformat your code\npycharm comes with a powerful inbuilt code formatter which you can use to adapt your code to our guidelines once you have linked your pycharm to our settings repository. right-click on your project and choose reformat code. you'll be presented with a popup to choose some options:\n\nif you don't see that reformat option on a right click then it can also be found under the menu heading code on the toolbar.\n\n# check your code\npycharm comes with an inbuilt code checker. beside the \"per file\" instant check (top right corner, green tick if ok) you can run an analysis on your code by right-clicking your project and choose inspect code:\n\n# automatic code check\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a skill dev, in order for you to generate your access token\n * once you've been added in our skill dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token, and you are good to go!",charsets:{}},{title:"Core development",frontmatter:{title:"Core development",sidebarDepth:3},regularPath:"/core-development/",relativePath:"core-development/README.md",key:"v-bab27eb4",path:"/core-development/",headers:[{level:2,title:"UI Development",slug:"ui-development",normalizedTitle:"ui development",charIndex:49},{level:3,title:"Global functions",slug:"global-functions",normalizedTitle:"global functions",charIndex:174}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"UI Development Global functions",content:"Getting started with Pycharm\n\nCode guidelines\n\n# UI Development\nThe UI is developed in vue.js as the separate repository: https://github.com/project-alice-assistant/webui\n\n# Global functions\nThere are currently the following global functions that can be called\n\n# Notifications\n# this.showError(message: str)\nShow a floating error message, that will disappear after a few seconds. The message is not stored, only to be used as direct feedback to a user action\n\n# this.showSuccess(message: str)\nShow a floating success message, that will disappear after a few seconds. The message is not stored, only to be used as direct feedback to a user action\n\n# this.showInfo(message: str)\nShow a floating information message, that will disappear after a few seconds. The message is not stored, only to be used as direct feedback to a user action\n\n# this.checkResponse(response: dict)\nChecks the given response object of an axios call. Calls showError or showSuccess depending on the value of response.data['success'] for the message contained in response.data['success']. Returns the value of respones.data['success']",normalizedContent:"getting started with pycharm\n\ncode guidelines\n\n# ui development\nthe ui is developed in vue.js as the separate repository: https://github.com/project-alice-assistant/webui\n\n# global functions\nthere are currently the following global functions that can be called\n\n# notifications\n# this.showerror(message: str)\nshow a floating error message, that will disappear after a few seconds. the message is not stored, only to be used as direct feedback to a user action\n\n# this.showsuccess(message: str)\nshow a floating success message, that will disappear after a few seconds. the message is not stored, only to be used as direct feedback to a user action\n\n# this.showinfo(message: str)\nshow a floating information message, that will disappear after a few seconds. the message is not stored, only to be used as direct feedback to a user action\n\n# this.checkresponse(response: dict)\nchecks the given response object of an axios call. calls showerror or showsuccess depending on the value of response.data['success'] for the message contained in response.data['success']. returns the value of respones.data['success']",charsets:{}},{title:"Home",frontmatter:{home:"true,",heroImage:"/images/umbrella.png",heroText:"Project Alice",tagline:"Dein smarter, auf Privatsphäre fokussierter Sprachassistent",actionText:"Los geht's →",actionLink:"/de/about-alice/",features:[{title:"Privacy first",details:"Behalte die Kontrolle über deine Daten! Nichts geht raus ohne deine Zustimmung. Du kannst Alice erlauben auch online Services zu verwenden, aber erstmal sind nur die Offline Services aktiv!"},{title:"Extensible",details:"Alice kommt nur mit dem Notwendigsten, aber du kannst sie dank der stetig wachsenden, Community basierten Skill Library zu etwas großartigen machen. Und auch du kannst selbst Skill Entwickler werden!"},{title:"Lightweight",details:"Alice läuft ohne Probleme auf einem Raspberry Pi 3, willst du ihr aber mehr Power geben, läuft sie, dank unserer Community, auch auf stärkeren Maschinen!"}],footer:"Copyright © 2014-present Laurent Chervet"},regularPath:"/de/",relativePath:"de/README.md",key:"v-f12c40b4",path:"/de/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Glossar",frontmatter:{title:"Glossar",sidebarDepth:3,terms:{Hotword:'Das Kommando, das du verwendest um Alice aufzuwecken, damit sie dir zuhört. Zum Beispiel "Hey Snips"',Wakeword:'Das Kommando, das du verwendest um Alice aufzuwecken, damit sie dir zuhört. Eigentlich das gleiche wie :Hotword: aber in der Welt von Alice ist das Wakeword mit einem speziellen Nutzer verbunden, den sie daran identifiziert. Zum Beispiel "Hey Alice"',Skill:"Ein Programm für Alice, damit sie weiß was sie tun soll, wenn sie eine :Utterance: hört. Alice hat 5 vorinstallierte Skills, aber du kannst viele weitere herunterladen oder erstellen.",Utterance:"Ein Kommando des Nutzers das nach dem :Hotword: oder :Wakeword: folgt. Es sagt Alice welcher :Skill: mit welchen Informationen ausgeführt werden soll.",Intent:"Nachdem Alice eine :Utterance: erfasst hat, wandelt das :NLU: Modul diese in einen Intent um. Dieser repräsentiert die genaue Anfrage mit allen notwendigen Informationen",Slot:"Eine Variable in einem :Intent:. Ein :Intent: kann so viele Slots haben wir notwendig.",ASR:'"Automatic Speech Recognition", die automatische Spracherkennung ist eine Komponente zum interpretieren der Mikrofonaufnahme um diese in Text umzuwandeln.',NLU:'"Natural Language Understanding", das Verstehen natürlicher Sprache, ist die Komponente, die aus einem vom :ASR: erzeugten Fließtext :Intent:Intents: und :Slot:Slots: extrahiert.',TTS:'"Text To Speech", Text zu Sprache, ist die Komponente, welche aus dem Rückgabetext eine Audiodatei zur Sprachausgabe erstellt.',Event:'Ein Event wird ausgelöst und von Alice an alle :Manager: und :Skill:Skills: weitergeleitet. Der Name eines Events fängt immer mit "on" an. Zum Beispiel "onUserDetected", "onWakeup" oder "onRaining".',Haupteinheit:"Die Haupteinheit(main unit) verarbeitet die schweren Aufgaben, sie ist die Maschine, auf der Alice installiert wird.",Satellite:"Satelliten benötigen weniger Leistung als die :Haupteinheit:, da sie alle rechenintensiven Aufgaben zur :Haupteinheit: weiterleiten. Dadurch können sie kostengünstiger sein. Sie benötigen mindestens ein Mikrofon und einen Lautsprecher und machen damit Alice in anderen :Location:Locations: verfügbar.",Location:"Eine Location/Lokation ist ein Ort. Dabei kann es sich um einen Raum in deinem Haus handeln, das komplette Haus, den Garten, oder sogar einen virtuellen Ort ohne physisches Gegenstück.",Manager:"Sie sind das Kernstück von Alice. Jeder Manager hat eine spezifische Aufgabe, vom Laden der Konfiguration, über die Verwaltung der :Skill:Skills: bis hin zum Speichern von Telemetriedaten",Session:'Die Session kann als Synonym for einen "Dialog" verwendet werden. Eine Session startet mit dem :Hotword: oder :Wakeword: ab dem Alice dir zuhört. Die Session beendet sich entweder am Ende des Dialogs, nachdem Alice einen :Intent: erreicht hat, nach dem keine weitere Kommunikation notwendig ist, oder nachdem zu lange keine Eingabe erfolgt ist mittels "Timeout".',Interface:'Das Interface von Alice ist ein Web-Server der lokal, bei Alice auf dem Gerät läuft. Er ist sofern du dein Netzwerk nicht extra dafür auslegst NICHT aus dem Internet erreichbar. Über das Interface hast du Zugriff auf viele Funktionen in einer grafischen Oberfläche. Das Interface kann auch ausgeschaltet werden oder auf einem anderen Port laufen. Im Normalfall erreichst du das Interface über "http://ALICE_IP:5000".'}},regularPath:"/de/about-alice/GLOSSARY.html",relativePath:"de/about-alice/GLOSSARY.md",key:"v-70285a65",path:"/de/about-alice/GLOSSARY.html",headers:[{level:2,title:"Beispiele",slug:"beispiele",normalizedTitle:"beispiele",charIndex:12},{level:3,title:"Skills",slug:"skills",normalizedTitle:"skills",charIndex:24},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:196},{level:3,title:"Hotword Beispiel",slug:"hotword-beispiel",normalizedTitle:"hotword beispiel",charIndex:257},{level:3,title:"Wakeword Beispiel",slug:"wakeword-beispiel",normalizedTitle:"wakeword beispiel",charIndex:288},{level:3,title:"Intent Bespiel",slug:"intent-bespiel",normalizedTitle:"intent bespiel",charIndex:320},{level:3,title:"Slot Beispiel (hervorgehoben)",slug:"slot-beispiel-hervorgehoben",normalizedTitle:"slot beispiel (hervorgehoben)",charIndex:366},{level:3,title:"Session Beispiel",slug:"session-beispiel",normalizedTitle:"session beispiel",charIndex:439}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Beispiele Skills Events Hotword Beispiel Wakeword Beispiel Intent Bespiel Slot Beispiel (hervorgehoben) Session Beispiel",content:"# Glossar\n# Beispiele\n# Skills\nEine komplette Liste aller Skills ist online verfügbar: Hier. Auch über das Interface kannst du auf alle Skills zugreiffen, die in deiner Sprache verfügbar sind.\n\n# Events\nEine komplette Liste aller Events findest du hier.\n\n# Hotword Beispiel\nHey Snips!\n\n# Wakeword Beispiel\nHey Alice?\n\n# Intent Bespiel\nSchalte bitte das Licht ein\n\n# Slot Beispiel (hervorgehoben)\nSchalte das Licht in der Küche bitte an\n\n# Session Beispiel\nHey Alice?Ja?Wie ist die Temperatur draußen?Aktuell sind es 19°C",normalizedContent:"# glossar\n# beispiele\n# skills\neine komplette liste aller skills ist online verfugbar: hier. auch uber das interface kannst du auf alle skills zugreiffen, die in deiner sprache verfugbar sind.\n\n# events\neine komplette liste aller events findest du hier.\n\n# hotword beispiel\nhey snips!\n\n# wakeword beispiel\nhey alice?\n\n# intent bespiel\nschalte bitte das licht ein\n\n# slot beispiel (hervorgehoben)\nschalte das licht in der kuche bitte an\n\n# session beispiel\nhey alice?ja?wie ist die temperatur draußen?aktuell sind es 19°c",charsets:{}},{title:"Was ist Project Alice",frontmatter:{title:"Was ist Project Alice",sidebarDepth:3},regularPath:"/de/about-alice/",relativePath:"de/about-alice/README.md",key:"v-f32f0cf4",path:"/de/about-alice/",headers:[{level:2,title:"Intro",slug:"intro",normalizedTitle:"intro",charIndex:2},{level:2,title:"Warum Alice?",slug:"warum-alice",normalizedTitle:"warum alice?",charIndex:723},{level:2,title:"Was wird benötigt?",slug:"was-wird-benotigt",normalizedTitle:"was wird benotigt?",charIndex:2203},{level:2,title:"Was kann Alice?",slug:"was-kann-alice",normalizedTitle:"was kann alice?",charIndex:2462}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Intro Warum Alice? Was wird benötigt? Was kann Alice?",content:"# Intro\nHey Alice?Ja?Was bist du?Mmmmh, lass uns mal schauen was Psycho dazu sagt!Project Alice ist ein open source, virtueller assistant, der komplett offline läuft und deine privatsphäre respektiert. Du kannst mit ihr reden und sie alles mögliche Fragen. Sofern sie mit deiner Anfrage etwas anfangen kann, wird sie dir Helfen. Sollte sie dich mal nicht verstehen, kannst du ihr helfen indem du ihr neue Skills beibringst. Alice automatisiert dein Zuhause, bringt dir die Nachrichten, weckt dich am morgen oder hilft dir beim Kochen - Forme sie dir, genau so wie du sie brauchst!\n\nHilf Alice beim Wachsen\n\nAlice ist noch jung, auch wenn sie eine Weile in Entwicklung ist. Werde Teil von unserem Abenteuer und hilf uns.\n\n# Warum Alice?\n 1. Ich habe in 2014 angefangen meinen eigenen Assistenten zu bauen. Richtig groß ist es geworden, als ich auf Snips(abgeschaltet) gestoßen bin. Ich habe Alice auf dieser Platform aufgebaut und beschlossen sie mit dem Rest der Community zu teilen. Snips ist gestorben, Alice hat überlebt und alle closed source Komponenten von Snips wurden mittlerweile für die totale Transparenz als open source neu entwickelt.\n 2. Ich liebe Programmieren. Ich bin vielleicht kein professioneller Entwickler, aber es liegt mir im Blut. Ich habe sehr früh angefangen, im Alter von 6, als noch alles über DOS lief. Ich liebe Herausforderungen. Das ist es was mich antreibt tiefer zu gehen und immer mehr zu wollen.\n 3. Der Name kommt aus Resident Evil, das Gleiche gilt für das Logo. Ich liebe die Red Queen und wollte schon immer eine eigene zuhause haben.\n 4. Dieser Assistent ist kostenlos für jedermann und ist so modular aufgebaut, dass jeder ihn verwenden kann, angefangen mit einem einfachen Raspberry Pi 3.\n 5. Das Konzept von Community erstellten (und Alice Team verwalteten) Skills erlaubt jedem mit grundlegenden Python skills, Alice die eigenen unglaublichen Ideen beizubringen und mit der Community zu teilen.\n 6. Nach über 2 Jahren mit Snips, eines ist klar: Privacy matters. Alice kann komplett offline Arbeiten - oder aber online services Nutzen, sofern du es in den Einstellungen erlaubst. Damit sind auch Google ASR, Amazon TTS und viele andere Dienste verfügbar.\n\n# Was wird benötigt?\n * Ein Raspberry Pi 3 oder höher (Raspi 4*) so wie eine SD Karte*\n * Ein Mikrofon und ein paar Lautsprecher. Ich empfehle zum Einstieg den Respeaker 2*.\n * Ein Weg unser vorgefertigtes image oder Raspberry Os auf die SD Karte zu flashen\n\n# Was kann Alice?\nViele Dinge! Aber sie kann noch nicht kochen... Wirf einen Blick auf unsere stetig wachsenden, Community kreierte Skill Sammlung: https://store.projectalice.io\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.",normalizedContent:"# intro\nhey alice?ja?was bist du?mmmmh, lass uns mal schauen was psycho dazu sagt!project alice ist ein open source, virtueller assistant, der komplett offline lauft und deine privatsphare respektiert. du kannst mit ihr reden und sie alles mogliche fragen. sofern sie mit deiner anfrage etwas anfangen kann, wird sie dir helfen. sollte sie dich mal nicht verstehen, kannst du ihr helfen indem du ihr neue skills beibringst. alice automatisiert dein zuhause, bringt dir die nachrichten, weckt dich am morgen oder hilft dir beim kochen - forme sie dir, genau so wie du sie brauchst!\n\nhilf alice beim wachsen\n\nalice ist noch jung, auch wenn sie eine weile in entwicklung ist. werde teil von unserem abenteuer und hilf uns.\n\n# warum alice?\n 1. ich habe in 2014 angefangen meinen eigenen assistenten zu bauen. richtig groß ist es geworden, als ich auf snips(abgeschaltet) gestoßen bin. ich habe alice auf dieser platform aufgebaut und beschlossen sie mit dem rest der community zu teilen. snips ist gestorben, alice hat uberlebt und alle closed source komponenten von snips wurden mittlerweile fur die totale transparenz als open source neu entwickelt.\n 2. ich liebe programmieren. ich bin vielleicht kein professioneller entwickler, aber es liegt mir im blut. ich habe sehr fruh angefangen, im alter von 6, als noch alles uber dos lief. ich liebe herausforderungen. das ist es was mich antreibt tiefer zu gehen und immer mehr zu wollen.\n 3. der name kommt aus resident evil, das gleiche gilt fur das logo. ich liebe die red queen und wollte schon immer eine eigene zuhause haben.\n 4. dieser assistent ist kostenlos fur jedermann und ist so modular aufgebaut, dass jeder ihn verwenden kann, angefangen mit einem einfachen raspberry pi 3.\n 5. das konzept von community erstellten (und alice team verwalteten) skills erlaubt jedem mit grundlegenden python skills, alice die eigenen unglaublichen ideen beizubringen und mit der community zu teilen.\n 6. nach uber 2 jahren mit snips, eines ist klar: privacy matters. alice kann komplett offline arbeiten - oder aber online services nutzen, sofern du es in den einstellungen erlaubst. damit sind auch google asr, amazon tts und viele andere dienste verfugbar.\n\n# was wird benotigt?\n * ein raspberry pi 3 oder hoher (raspi 4*) so wie eine sd karte*\n * ein mikrofon und ein paar lautsprecher. ich empfehle zum einstieg den respeaker 2*.\n * ein weg unser vorgefertigtes image oder raspberry os auf die sd karte zu flashen\n\n# was kann alice?\nviele dinge! aber sie kann noch nicht kochen... wirf einen blick auf unsere stetig wachsenden, community kreierte skill sammlung: https://store.projectalice.io\n\n* mit einem kauf uber die angegebenen amazon links unterstutzt du project alice. die empfehlung zu diesen geraten ist jedoch komplett unabhangig davon. alle einnahmen werden transparent gehalten und dienen zunachst dazu aufgelaufene serverkosten zu decken.",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["community"]},regularPath:"/de/community-made/",relativePath:"de/community-made/README.md",key:"v-1c15c334",path:"/de/community-made/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Getting started with Pycharm",frontmatter:{sidebarDepth:3,title:"Getting started with Pycharm",tags:["getting started","pycharm","jetbrains","ide","ide settings","install pycharm","skill dev"]},regularPath:"/de/community-made/getting-started-pycharm.html",relativePath:"de/community-made/getting-started-pycharm.md",key:"v-08421b36",path:"/de/community-made/getting-started-pycharm.html",headers:[{level:2,title:"Download and install Pycharm",slug:"download-and-install-pycharm",normalizedTitle:"download and install pycharm",charIndex:1059},{level:2,title:"A bit about GitHub.",slug:"a-bit-about-github",normalizedTitle:"a bit about github.",charIndex:1241},{level:2,title:"Setup Pycharm directories",slug:"setup-pycharm-directories",normalizedTitle:"setup pycharm directories",charIndex:3393},{level:3,title:"Option 1",slug:"option-1",normalizedTitle:"option 1",charIndex:3421},{level:3,title:"Option 2",slug:"option-2",normalizedTitle:"option 2",charIndex:5087},{level:2,title:"Pycharm dependencies",slug:"pycharm-dependencies",normalizedTitle:"pycharm dependencies",charIndex:6414},{level:2,title:"Changing branches",slug:"changing-branches",normalizedTitle:"changing branches",charIndex:659},{level:2,title:"Quality control settings",slug:"quality-control-settings",normalizedTitle:"quality control settings",charIndex:680},{level:2,title:"Updating your repository",slug:"updating-your-repository",normalizedTitle:"updating your repository",charIndex:11217},{level:2,title:"Handy Alice commands when testing a :skill:",slug:"handy-alice-commands-when-testing-a",normalizedTitle:'handy alice commands when testing a <term term="skill"/>',charIndex:null}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Download and install Pycharm A bit about GitHub. Setup Pycharm directories Option 1 Option 2 Pycharm dependencies Changing branches Quality control settings Updating your repository Handy Alice commands when testing a :skill:",content:'# Pycharm from Jetbrains\nHave you just started with Alice and all excited with the possibilities you could unlock by creating your own ? But uncertain where to start? Well you\'ve come to the right place. Alice is written in the Python language. The team behind Alice do most of their Python magic and more using an IDE called Pycharm. For that reason and because it\'s a great program we will focus on getting Pycharm setup for you. That way getting help in the discord will also be easier. So let\'s get started.\n\nWhat we will cover in the below!!\n\n * Where to get Pycharm\n * Basics of GitHub\n * Setting up Pycharm directories\n * Check dependencies are set\n * Changing branches\n * Quality control settings\n * Updating your repositories\n * Some handy Alice commands when skill making\n\nYes I understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. Then you\'ll have the re assurance that you\'ve done all you can to meet the Alice code guidelines. Which by the way is something you should read as well...\n\n# Download and install Pycharm\nFirst lets download Pycharm, The community version is free and a great starting point. Get that from here: https://www.jetbrains.com/Pycharm/download\n\n# A bit about GitHub.\nGreat, so now Pycharm is downloaded and installed lets set up a few things to make it easier in the long run. If you haven\'t already get yourself a GitHub account. You can read about it here https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration or jump straight to the signup page here: https://GitHub.com/.\n\nThe below steps aren\'t vital to code in Pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\nGitHub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. GitHub once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. That way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nSo when you create a new via the Alice dev-mode and upload it to GitHub, it will initially create the required framework for the . It will then place the new in your ProjectAlice/skills/ directory on your PI and store it on GitHub as a repository. Now when you edit/modify the and ctrl + s to save it, it will save the changes ONLY to your PI and the GitHub copy will stay the same. When you feel you have the code at a point that you want to save it on GitHub as well, then in Pycharm you can click the green downwards pointing arrow (top right of the Pycharm screen) and "commit" the changes.\n\nCommitting the changes in simple terms, is geek talk for saving. 😃 It tells GitHub you\'ve modified code, and you want to store it on GitHub. Once committed, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). Pycharm will then "push" your commit (modified files) to your GitHub repo. By pushing to origin, you will now have a backup of your files on GitHub which at a later stage you can share with who ever or create a "pull request" (PR) to the ProjectAlice team, so the can be reviewed for merging/adding in the Alice store so everyone can enjoy using it.\n\n# Setup Pycharm directories\n# Option 1\nThis option is a safe way to start out with Pycharm it also gets you familiar with GitHub version control.\n\n Warning Unless you use Pycharm professional, going with this option will mean you either have to copy your folder to Alice each time you want to test something. Alternatively push the updates to your repository, and then on your Pi.\n\ncd ProjectAlice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart ProjectAlice\n\n * Sign in to GitHub. Go to ProjectAlice.\n * In the top right of that page, click on "fork" to basically clone a copy of ProjectAlice to your own GitHub account.\n * Now create a folder on your Desktop somewhere. Let\'s say for now it\'s going to be Documents/GitHubProjectAlice for example.\n * Now open Pycharm\n * In the menu along the top of Pycharm click on "VCS" then "get from version control"\n\n * In the window that opens click on "GitHub" from the menu on the left. You should see in the list that appears your ProjectAlice fork you just forked.\n * Click that and direct it to the "Documents/GitHubProjectAlice" folder you just created.\n * Make the path -> Documents/GitHubProjectAlice/ProjectAlice so that it clones into a folder called ProjectAlice.\n * When Pycharm pops up a window choose "this window".\n\nThen once done click VCS again and then "get from version control" then "GitHub " again and select your . Make the path now go to Documents/GitHubProjectAlice/skills/ .... when asked by Pycharm choose "attach".\n\nNow you should have Pycharm displaying ProjectAlice and all her files and your showing up in the ProjectAlice/skills directory. (note this is all local files and nothing to do with your Pi for now)\n\n# Option 2\nAuto login to your pi and set up a sshfs connection to trick Pycharm\n\nThis below optional method will allow you to load your PI\'s ProjectAlice files directly into Pycharm. Therefore, allowing you to modify the files on your PI directly. However, this raises the chances of you breaking Alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. Follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. Create a folder on your desktop computer in the home directory called something like "Development"\n    \n    \n 3. Then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/ProjectAlice /home/bob/Development/Alice\n    \n    \n\n(obviously change the IP to your pi\'s IP and the second path to your new development folders path)\n\nWhat this will do is gain access to your PI via your windows/linux desktop by creating a folder in the Development folder and show the contents of your PI\'s\'s ProjectAlice folder. In doing so Pycharm will think the Development/Alice folder is an actual folder on your desktop and therefore in Pycharm you can now view and modify ProjectAlice files via Pycharm directly 😃\n\n# Pycharm dependencies\nNow you have the directories loaded in Pycharm. Go to Pycharm settings ( ctrl + shift + s )\n\n * Then in the menu on the left. Click "project-alice-assistant/ProjectAlice".\n * Then click "project dependencies"\n * Now click your to highlight it\n * Then put a tick in "ProjectAlice" tick box to tell Pycharm your depends on the files from the ProjectAlice files\n\n# Changing branches\nThe latest branch in Alice as of writing this is b3. You may want to set your Pycharm to B3 branch, so you stay up to date with the latest changes.\n\nIn Pycharm click your way through this\n\nVCS -> Git -> branches-> repositories ->ProjectAlice -> local branches -> 1.0.0-b3 -> checkout.\n\nThat should cause Pycharm to move to the b3 branch. You\'ll only need to do this once also unless you start playing with branches, but I don\'t advise that for now until your use to that side of things.\n\nThat should be enough for the moment to get Pycharm setup as far as main directories go. Next we need to set up SonarCloud, sk-package, and Pycharm settings so that your code is as compatible as possible with Alice.\n\n# Quality control settings\nFirst let\'s now set up the ProjectAlice-Sk package\n\n * Fork the sk repo from SkillKit\n * In Pycharm click into "VCS" menu then "GitHub" (just like earlier)\n * Select your sk fork and download it to GitHubProjectAlice/ProjectAlice/SkPackage ( or similar)\n * Choose "attach" when prompted.\n * Now go to "run " menu in Pycharm (along top of screen)\n * Then choose "debug configuration"\n * click the + sign to make a new script.\n * Call it something like "Alice Validation "\n * Then to the right of that screen ... for the field "script path " enter the local path to the ProjectAliceSkillKit.py file\n * In the field "parameters" add\n\nvalidate --paths /home/bob/Documents/GitHubProjectAlice/ProjectAlice/skills\n\n(Change the path to suit your path to the directory.)\n\n * Put a tick in the box , "run with python console"\n * Click apply.\n\nNow when in Pycharm and you click the run icon (top right of screen) with the Alice Validation script selected, Pycharm will loop through every you have listed in the folder and do a validation on it. It will print the results out in the console of Pycharm.\n\nAs an added bonus let\'s also add the sk schema files to Pycharm so that you get instant feedback on quality of your .install file and json files etc. Note that this does NOT check everything that the Sk package does, so you still need to do the above. This will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * Go to this page Schema Files\n   \n   \n * Take a look at that list. You will see different schema files for different file types. We will now go through installing just one of those types into Pycharm, and you can do all the rest on your own.\n   \n   \n * Let\'s pick on the install-schema.json file. click it to open that code then click the "Raw" button to the right.\n   \n   \n * Copy the URL\n   \n   \n * Come back to Pycharm and go to your .\n   \n   \n * Double-click the installation file for your to open it in the editor\n   \n   \n * Now at the very bottom right of your Pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nNote this image shows JSON ProjectAlice talks.... you\'ll likely have JSON No schema\n\n * Then click "new schema mapping"\n * For name field type in something like "Alice install"\n * For URL field paste the URL of the Raw file you just copied\n * On the right-hand side of that screen click the + to add new mapping\n * Type *.install that should now apply that schema to any of the blah.install files in the future.\n * Click Apply\n * Do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nSecondly set up SonarCloud\n\nSonarLint (SonarCloud, sonarQube) is a great tool for making sure your code complies with Alice. It will warn you in Pycharm when you call a variable Thisis_myVariable instead of the Alice way which is thisIsMyVariable and of course many other checks. It\'s a must-have plugin so let\'s go add that now.\n\nPycharm has a Sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * Create an account on SonarCloud\n * Contact us to add you as a dev, in order for you to generate your access token\n * Once you\'ve been added in our dev group, go to your SonarCloud profile, under security, and generate a new access token.\n * In Pycharm open your settings\n * Go to Plugins\n * Search and install SonarLint\n\n * Under Tools select SonarLint and click on the + to add a new connection\n\n * Name it ProjectAlice and choose SonarCloud, then click on next\n\n * Enter your SonarCloud token, and you\'re good to go!\n\n# Updating your repository\nLet\'s touch a little more on GitHub repos and keeping them up to date\n\nAlice is always evolving. As such the files in Alice are always changing. So that you have the latest files we want to get into the habit of pushing and pulling the Upstream repo.\n\n"Wooah back up buddy" I hear you saying.... that\'s a new word. what\'s upstream ?\n\nWell your repository as far as GitHub is concerned is called "origin". Whereas the repository you forked from is called "upstream" so in this case the upstream for your ProjectAlice files will be. https://GitHub.com/project-alice-assistant/ProjectAlice\n\nKnowing that, let\'s add that url to your Pycharm, so we can receive updates.\n\n * Click "VCS" then "Git" then "remotes"\n * You should see in the list ProjectAlice "origin"\n * Click your remote repo in this screen to highlight it\n * Now click the + sign\n * In the window that opens. For the "name" field, add "upstream" <<- has to be that nothing else will work.\n * In the url field add " https://GitHub.com/project-alice-assistant/ProjectAlice "\n * Click save\n * Now click "VCS" again and then "git" then "fetch" this will update head and branches etc\n * Next click "VCS" again then "pull"\n * In the window that opens starting from the left drop down box ....\n\n * Choose ProjectAlice\n * Choose "pull"\n * Choose "upstream"\n * Choose "b3 branch"\n * Click pull\n\nit will now "pull" all the latest changes that the Alice team have pushed recently into your local files on your computer. Pycharm is now up-to-date. However, your "origin" (your repo) isn\'t up-to-date with your Pycharms local files now. So now do a ctl+shift+k to "push" updated files to your origin repo. This process of pull and push will become second nature to you eventually. 😃\n\n# Handy Alice commands when testing a \nWhen making a you\'ll often not get it right the first time and frequently use print statements. These don\'t show in syslog. So to be able to view these statements along with being able to see clearly what\'s happening when you run Alice you may want to start her manually.\n\nTo do that:\n\nsudo systemctl stop ProjectAlice\n\ncd ProjectAlice\n\n./venv/bin/python main.py\n\nYou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nHope that has helped. Enjoy your coding adventures.\n\nBy LazzaAU',normalizedContent:'# pycharm from jetbrains\nhave you just started with alice and all excited with the possibilities you could unlock by creating your own ? but uncertain where to start? well you\'ve come to the right place. alice is written in the python language. the team behind alice do most of their python magic and more using an ide called pycharm. for that reason and because it\'s a great program we will focus on getting pycharm setup for you. that way getting help in the discord will also be easier. so let\'s get started.\n\nwhat we will cover in the below!!\n\n * where to get pycharm\n * basics of github\n * setting up pycharm directories\n * check dependencies are set\n * changing branches\n * quality control settings\n * updating your repositories\n * some handy alice commands when skill making\n\nyes i understand there are a quite a few steps in this process but for the most of it you\'ll only have to do it once. then you\'ll have the re assurance that you\'ve done all you can to meet the alice code guidelines. which by the way is something you should read as well...\n\n# download and install pycharm\nfirst lets download pycharm, the community version is free and a great starting point. get that from here: https://www.jetbrains.com/pycharm/download\n\n# a bit about github.\ngreat, so now pycharm is downloaded and installed lets set up a few things to make it easier in the long run. if you haven\'t already get yourself a github account. you can read about it here https://git-scm.com/book/en/v2/github-account-setup-and-configuration or jump straight to the signup page here: https://github.com/.\n\nthe below steps aren\'t vital to code in pycharm, but it certainly worth doing to have the version control ability and in the future push and pull to your repository.\n\ngithub if you don\'t know, is on a basic level a storage spot for developers with a tonne of features but mainly "version control" is what you\'re going to want from it for now. github once setup allows you to push and pull files between repositories without missing latest updates and writing conflicting code with other developers. that way code sharing and file changes are controlled across repositories (repo\'s for short).\n\nso when you create a new via the alice dev-mode and upload it to github, it will initially create the required framework for the . it will then place the new in your projectalice/skills/ directory on your pi and store it on github as a repository. now when you edit/modify the and ctrl + s to save it, it will save the changes only to your pi and the github copy will stay the same. when you feel you have the code at a point that you want to save it on github as well, then in pycharm you can click the green downwards pointing arrow (top right of the pycharm screen) and "commit" the changes.\n\ncommitting the changes in simple terms, is geek talk for saving. 😃 it tells github you\'ve modified code, and you want to store it on github. once committed, you then click the blue "update project" arrow (or ctrl + shift + k also called push which does similar). pycharm will then "push" your commit (modified files) to your github repo. by pushing to origin, you will now have a backup of your files on github which at a later stage you can share with who ever or create a "pull request" (pr) to the projectalice team, so the can be reviewed for merging/adding in the alice store so everyone can enjoy using it.\n\n# setup pycharm directories\n# option 1\nthis option is a safe way to start out with pycharm it also gets you familiar with github version control.\n\n warning unless you use pycharm professional, going with this option will mean you either have to copy your folder to alice each time you want to test something. alternatively push the updates to your repository, and then on your pi.\n\ncd projectalice/skills/<your skill name>\n\ngit pull\n\nsudo systemctl restart projectalice\n\n * sign in to github. go to projectalice.\n * in the top right of that page, click on "fork" to basically clone a copy of projectalice to your own github account.\n * now create a folder on your desktop somewhere. let\'s say for now it\'s going to be documents/githubprojectalice for example.\n * now open pycharm\n * in the menu along the top of pycharm click on "vcs" then "get from version control"\n\n * in the window that opens click on "github" from the menu on the left. you should see in the list that appears your projectalice fork you just forked.\n * click that and direct it to the "documents/githubprojectalice" folder you just created.\n * make the path -> documents/githubprojectalice/projectalice so that it clones into a folder called projectalice.\n * when pycharm pops up a window choose "this window".\n\nthen once done click vcs again and then "get from version control" then "github " again and select your . make the path now go to documents/githubprojectalice/skills/ .... when asked by pycharm choose "attach".\n\nnow you should have pycharm displaying projectalice and all her files and your showing up in the projectalice/skills directory. (note this is all local files and nothing to do with your pi for now)\n\n# option 2\nauto login to your pi and set up a sshfs connection to trick pycharm\n\nthis below optional method will allow you to load your pi\'s projectalice files directly into pycharm. therefore, allowing you to modify the files on your pi directly. however, this raises the chances of you breaking alice so only recommended once you feel a little more comfortable with how things work.\n\n 1. follow these steps https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/ to set up auto login to your pi ( no need to keep typing password)\n    \n    \n 2. create a folder on your desktop computer in the home directory called something like "development"\n    \n    \n 3. then type this command on your desktop terminal >>\n    \n     * sshfs -o reconnect -o nonempty pi@192.168.1.4:/home/pi/projectalice /home/bob/development/alice\n    \n    \n\n(obviously change the ip to your pi\'s ip and the second path to your new development folders path)\n\nwhat this will do is gain access to your pi via your windows/linux desktop by creating a folder in the development folder and show the contents of your pi\'s\'s projectalice folder. in doing so pycharm will think the development/alice folder is an actual folder on your desktop and therefore in pycharm you can now view and modify projectalice files via pycharm directly 😃\n\n# pycharm dependencies\nnow you have the directories loaded in pycharm. go to pycharm settings ( ctrl + shift + s )\n\n * then in the menu on the left. click "project-alice-assistant/projectalice".\n * then click "project dependencies"\n * now click your to highlight it\n * then put a tick in "projectalice" tick box to tell pycharm your depends on the files from the projectalice files\n\n# changing branches\nthe latest branch in alice as of writing this is b3. you may want to set your pycharm to b3 branch, so you stay up to date with the latest changes.\n\nin pycharm click your way through this\n\nvcs -> git -> branches-> repositories ->projectalice -> local branches -> 1.0.0-b3 -> checkout.\n\nthat should cause pycharm to move to the b3 branch. you\'ll only need to do this once also unless you start playing with branches, but i don\'t advise that for now until your use to that side of things.\n\nthat should be enough for the moment to get pycharm setup as far as main directories go. next we need to set up sonarcloud, sk-package, and pycharm settings so that your code is as compatible as possible with alice.\n\n# quality control settings\nfirst let\'s now set up the projectalice-sk package\n\n * fork the sk repo from skillkit\n * in pycharm click into "vcs" menu then "github" (just like earlier)\n * select your sk fork and download it to githubprojectalice/projectalice/skpackage ( or similar)\n * choose "attach" when prompted.\n * now go to "run " menu in pycharm (along top of screen)\n * then choose "debug configuration"\n * click the + sign to make a new script.\n * call it something like "alice validation "\n * then to the right of that screen ... for the field "script path " enter the local path to the projectaliceskillkit.py file\n * in the field "parameters" add\n\nvalidate --paths /home/bob/documents/githubprojectalice/projectalice/skills\n\n(change the path to suit your path to the directory.)\n\n * put a tick in the box , "run with python console"\n * click apply.\n\nnow when in pycharm and you click the run icon (top right of screen) with the alice validation script selected, pycharm will loop through every you have listed in the folder and do a validation on it. it will print the results out in the console of pycharm.\n\nas an added bonus let\'s also add the sk schema files to pycharm so that you get instant feedback on quality of your .install file and json files etc. note that this does not check everything that the sk package does, so you still need to do the above. this will just tell you if you\'ve got a syntax wrong as you modify the file.\n\n * go to this page schema files\n   \n   \n * take a look at that list. you will see different schema files for different file types. we will now go through installing just one of those types into pycharm, and you can do all the rest on your own.\n   \n   \n * let\'s pick on the install-schema.json file. click it to open that code then click the "raw" button to the right.\n   \n   \n * copy the url\n   \n   \n * come back to pycharm and go to your .\n   \n   \n * double-click the installation file for your to open it in the editor\n   \n   \n * now at the very bottom right of your pycharm do you see a "no schema" button ? click that to open the schema configuration screen.\n   \n   \n\nnote this image shows json projectalice talks.... you\'ll likely have json no schema\n\n * then click "new schema mapping"\n * for name field type in something like "alice install"\n * for url field paste the url of the raw file you just copied\n * on the right-hand side of that screen click the + to add new mapping\n * type *.install that should now apply that schema to any of the blah.install files in the future.\n * click apply\n * do the same with the other schema\'s but obviously change the mappings to something that will capture that file type like *talks/en.json should capture all talk json files of en language\n\nsecondly set up sonarcloud\n\nsonarlint (sonarcloud, sonarqube) is a great tool for making sure your code complies with alice. it will warn you in pycharm when you call a variable thisis_myvariable instead of the alice way which is thisismyvariable and of course many other checks. it\'s a must-have plugin so let\'s go add that now.\n\npycharm has a sonarcloud plugin that can check your code to make sure it is following our guidelines!\n\n * create an account on sonarcloud\n * contact us to add you as a dev, in order for you to generate your access token\n * once you\'ve been added in our dev group, go to your sonarcloud profile, under security, and generate a new access token.\n * in pycharm open your settings\n * go to plugins\n * search and install sonarlint\n\n * under tools select sonarlint and click on the + to add a new connection\n\n * name it projectalice and choose sonarcloud, then click on next\n\n * enter your sonarcloud token, and you\'re good to go!\n\n# updating your repository\nlet\'s touch a little more on github repos and keeping them up to date\n\nalice is always evolving. as such the files in alice are always changing. so that you have the latest files we want to get into the habit of pushing and pulling the upstream repo.\n\n"wooah back up buddy" i hear you saying.... that\'s a new word. what\'s upstream ?\n\nwell your repository as far as github is concerned is called "origin". whereas the repository you forked from is called "upstream" so in this case the upstream for your projectalice files will be. https://github.com/project-alice-assistant/projectalice\n\nknowing that, let\'s add that url to your pycharm, so we can receive updates.\n\n * click "vcs" then "git" then "remotes"\n * you should see in the list projectalice "origin"\n * click your remote repo in this screen to highlight it\n * now click the + sign\n * in the window that opens. for the "name" field, add "upstream" <<- has to be that nothing else will work.\n * in the url field add " https://github.com/project-alice-assistant/projectalice "\n * click save\n * now click "vcs" again and then "git" then "fetch" this will update head and branches etc\n * next click "vcs" again then "pull"\n * in the window that opens starting from the left drop down box ....\n\n * choose projectalice\n * choose "pull"\n * choose "upstream"\n * choose "b3 branch"\n * click pull\n\nit will now "pull" all the latest changes that the alice team have pushed recently into your local files on your computer. pycharm is now up-to-date. however, your "origin" (your repo) isn\'t up-to-date with your pycharms local files now. so now do a ctl+shift+k to "push" updated files to your origin repo. this process of pull and push will become second nature to you eventually. 😃\n\n# handy alice commands when testing a \nwhen making a you\'ll often not get it right the first time and frequently use print statements. these don\'t show in syslog. so to be able to view these statements along with being able to see clearly what\'s happening when you run alice you may want to start her manually.\n\nto do that:\n\nsudo systemctl stop projectalice\n\ncd projectalice\n\n./venv/bin/python main.py\n\nyou\'ll then get to see in the terminal any print statements you put in your code.... along with easy to read console messages and comes with colour\n\nhope that has helped. enjoy your coding adventures.\n\nby lazzaau',charsets:{}},{title:"Contributing",frontmatter:{title:"Contributing",sidebarDepth:3},regularPath:"/de/contribute/",relativePath:"de/contribute/README.md",key:"v-7599ab7e",path:"/de/contribute/",headers:[{level:2,title:"Dokumentation",slug:"dokumentation",normalizedTitle:"dokumentation",charIndex:315},{level:2,title:"Core",slug:"core",normalizedTitle:"core",charIndex:661},{level:3,title:"Inform an Issue",slug:"inform-an-issue",normalizedTitle:"inform an issue",charIndex:742},{level:3,title:"Core pull request Guidelines",slug:"core-pull-request-guidelines",normalizedTitle:"core pull request guidelines",charIndex:1245},{level:2,title:"Skills",slug:"skills",normalizedTitle:"skills",charIndex:1513},{level:3,title:"Neue Skills",slug:"neue-skills",normalizedTitle:"neue skills",charIndex:1522},{level:3,title:"Übersetzungen",slug:"ubersetzungen",normalizedTitle:"ubersetzungen",charIndex:1674},{level:3,title:"Skills pull request Guidelines",slug:"skills-pull-request-guidelines",normalizedTitle:"skills pull request guidelines",charIndex:1853},{level:2,title:"Dir gefällt ProjectAlice?",slug:"dir-gefallt-projectalice",normalizedTitle:"dir gefallt projectalice?",charIndex:2252},{level:3,title:"Spread the word",slug:"spread-the-word",normalizedTitle:"spread the word",charIndex:2280},{level:3,title:"Become a stargazer",slug:"become-a-stargazer",normalizedTitle:"become a stargazer",charIndex:2398},{level:3,title:"Stay in touch",slug:"stay-in-touch",normalizedTitle:"stay in touch",charIndex:2562}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Dokumentation Core Inform an Issue Core pull request Guidelines Skills Neue Skills Übersetzungen Skills pull request Guidelines Dir gefällt ProjectAlice? Spread the word Become a stargazer Stay in touch",content:"# Thank you\nZunächst einmal vielen Dank, dass du daran interessiert bist, zu ProjectAlice beizutragen. 🙏 Mit deiner Zusammenarbeit können viele Dinge verbessert und bereichert werden, unabhängig davon, ob du ein erfahrener Entwickler bist oder nicht. Im Folgenden findest du einige Richtlinien für Inspiration.\n\n# Dokumentation\nDu kannst die Anleitungen von ProjectAlice schreiben, übersetzen und verbessern. Jede Seite hat einen Link zu ihrem Quellcode, sodass du eine Kopie (Fork) einfach bearbeiten und (Pull Request) einsenden kannst. Das gilt für Tippfehler oder wenn du etwas findest, das nicht klar genug ist, oder auch für komplett neue Abschnitte.\n\n# Core\nFinde ein offenes issue auf Github. Neue Features sind immer willkommen!\n\n# Inform an Issue\n * Was für Issues kann ich erstellen?\n\nNeben dem Report von einem bug, kannst du auch neue Feature vorschlagen, Ideen kund tun, etc.\n\nDu kannst auch ein Issue erstellen, wenn dir etwas in der Dokumentation nicht eindeutig genug ist.\n\n * Wie erstellt man einen Report?\n\nVersuche einfach zu erklären was passiert und was du erwartet hast, das passiert . Am besten Beschreibst du auch wie man einen Fehler reproduzieren kann und kopiere ein paar Logs dazu, in denen man den Fehler sieht\n\n# Core pull request Guidelines\nReferenziere deinen PR zu einem verwandten Issue (sofern vorhanden) und liefere eine Beschreibung deiner vorgeschlagenen Änderung. Stelle sicher, dass du den Coding Guidelines folgst. Du findest sie hier in der Sektion Code Guidelines.\n\n# Skills\n# Neue Skills\nNeue Skills sind immer willkommen! Eine Anleitung wie du Skills für Project Alice erstellst, findest du in der Sektion Skill Entwicklung\n\n# Übersetzungen\nSkills müssen deine Sprache unterstützen, damit du sie verwenden kannst. Wie du einen Skill in eine andere Sprache übersetzt, findest du auf in unserer Anleitung\n\n# Skills pull request Guidelines\nReferenziere deinen PR zu einem verwandten Issue (sofern vorhanden) und liefere eine Beschreibung deiner vorgeschlagenen Änderung. Stelle sicher, dass du den Coding Guidelines folgst. Du findest sie hier in der Sektion Code Guidelines. Um deinen Skill zu validieren, kannst du das Alice Skill Kit verwenden. Wie das geht, findest du in der Sektion Alice Skill Kit.\n\n# Dir gefällt ProjectAlice?\n# Spread the word\nErzähle anderen davon! Teile deine Erfahrungen mit Freunden, Kollegen und den Sozialen Netzwerken.\n\n# Become a stargazer\nVielleicht hinterlässt du normalerweise auf Github keine Sterne - wir bitten dich, mach eine Ausnahme und tu es. Lass uns deinen Stern da. 😃\n\n# Stay in touch\n * Trete ProjectAlice auf Discord bei und bringe dich Live in unsere Diskussionen ein, erhalte die neusten Neuigkeiten und werde ein Teil der Community!",normalizedContent:"# thank you\nzunachst einmal vielen dank, dass du daran interessiert bist, zu projectalice beizutragen. 🙏 mit deiner zusammenarbeit konnen viele dinge verbessert und bereichert werden, unabhangig davon, ob du ein erfahrener entwickler bist oder nicht. im folgenden findest du einige richtlinien fur inspiration.\n\n# dokumentation\ndu kannst die anleitungen von projectalice schreiben, ubersetzen und verbessern. jede seite hat einen link zu ihrem quellcode, sodass du eine kopie (fork) einfach bearbeiten und (pull request) einsenden kannst. das gilt fur tippfehler oder wenn du etwas findest, das nicht klar genug ist, oder auch fur komplett neue abschnitte.\n\n# core\nfinde ein offenes issue auf github. neue features sind immer willkommen!\n\n# inform an issue\n * was fur issues kann ich erstellen?\n\nneben dem report von einem bug, kannst du auch neue feature vorschlagen, ideen kund tun, etc.\n\ndu kannst auch ein issue erstellen, wenn dir etwas in der dokumentation nicht eindeutig genug ist.\n\n * wie erstellt man einen report?\n\nversuche einfach zu erklaren was passiert und was du erwartet hast, das passiert . am besten beschreibst du auch wie man einen fehler reproduzieren kann und kopiere ein paar logs dazu, in denen man den fehler sieht\n\n# core pull request guidelines\nreferenziere deinen pr zu einem verwandten issue (sofern vorhanden) und liefere eine beschreibung deiner vorgeschlagenen anderung. stelle sicher, dass du den coding guidelines folgst. du findest sie hier in der sektion code guidelines.\n\n# skills\n# neue skills\nneue skills sind immer willkommen! eine anleitung wie du skills fur project alice erstellst, findest du in der sektion skill entwicklung\n\n# ubersetzungen\nskills mussen deine sprache unterstutzen, damit du sie verwenden kannst. wie du einen skill in eine andere sprache ubersetzt, findest du auf in unserer anleitung\n\n# skills pull request guidelines\nreferenziere deinen pr zu einem verwandten issue (sofern vorhanden) und liefere eine beschreibung deiner vorgeschlagenen anderung. stelle sicher, dass du den coding guidelines folgst. du findest sie hier in der sektion code guidelines. um deinen skill zu validieren, kannst du das alice skill kit verwenden. wie das geht, findest du in der sektion alice skill kit.\n\n# dir gefallt projectalice?\n# spread the word\nerzahle anderen davon! teile deine erfahrungen mit freunden, kollegen und den sozialen netzwerken.\n\n# become a stargazer\nvielleicht hinterlasst du normalerweise auf github keine sterne - wir bitten dich, mach eine ausnahme und tu es. lass uns deinen stern da. 😃\n\n# stay in touch\n * trete projectalice auf discord bei und bringe dich live in unsere diskussionen ein, erhalte die neusten neuigkeiten und werde ein teil der community!",charsets:{}},{title:"Code guidelines",frontmatter:{title:"Code guidelines",sidebarDepth:3},regularPath:"/de/contribute/code-guidelines.html",relativePath:"de/contribute/code-guidelines.md",key:"v-3ca6ddb6",path:"/de/contribute/code-guidelines.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Core development",frontmatter:{title:"Core development",sidebarDepth:3},regularPath:"/de/core-development/",relativePath:"de/core-development/README.md",key:"v-bc7e3184",path:"/de/core-development/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Nützliche Links",frontmatter:{title:"Nützliche Links",sidebarDepth:3},regularPath:"/de/links/",relativePath:"de/links/README.md",key:"v-1dd60934",path:"/de/links/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Du findest weitere Inhalte zu Alice weit verstreut im Netz - über einen Like, Follow, Sub oder was es sonst so gibt, freuen wir uns natürlich!\n\n * Homepage\n * Community\n * Youtube\n * Twitch\n * Twitter\n * Discord",normalizedContent:"du findest weitere inhalte zu alice weit verstreut im netz - uber einen like, follow, sub oder was es sonst so gibt, freuen wir uns naturlich!\n\n * homepage\n * community\n * youtube\n * twitch\n * twitter\n * discord",charsets:{}},{title:"Satelliten installieren",frontmatter:{title:"Satelliten installieren",sidebarDepth:3},regularPath:"/de/satsetup/",relativePath:"de/satsetup/README.md",key:"v-03cf46ac",path:"/de/satsetup/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:'Achtung!\n\nEs handelt sich um eine Alpha Version! Es kann jederzeit zu größeren Änderungen in desem Abschnitt kommen. Die Zielgruppe sollte ein grundlegendes Verständnis ihrer Geräte haben, Linux und eventuell Programmierkenntenisse besitzen, sowie Python module installieren können.\n\n * Download unseres vorgefertigten Raspbian Buster image: * Direkter Download\n    * Diese Image enthält nicht mehr als Project Alice, mit allen Abhängigkeiten, sowie Hermes Led Control\n    * Einen Einblick erhälst du in der Sektion Vorinstallierte Pakete\n   \n   \n\nTip\n\nDu benötigst den Skill AliceSatellite auf deiner Haupteinheit installiert!\n\n * Flashe das image auf deine SD card\n * Platziere keine wpa_supplicant.conf oder ssh Datei in /boot\n * Starte deinen Raspberry NICHT bevor die folgenden Schritte ausgeführt hast!!\n * Bearbeite die /boot/ProjectAliceSatellite.yaml Datei. Wenn es keine ProjectAliceSatellite.yaml auf deiner /boot Partition geben sollte, schnapp dir hier die neuste Version: ProjectAliceSatellite.yaml\n * Konfiguriere sie entsprechend deiner Informationen und Bedürfnisse. Alle Konfigurationen haben eine kurze Erklärung, das meiste sollte aber selbsterklärend sein.\n * Gehe sicher, dass du überall ein Leerzeichen nach den Doppelpunkten hast: * Falsch: forceRewrite:yes\n    * Richtig: forceRewrite: yes\n   \n   \n * Wenn der Wert Sonderzeichen enthält, schließe den kompletten Wert mit Anführungszeichen ein: * Falsch: mqttPassword: a:%qJi\n    * Richtig: mqttPassword: "a:%qJi"\n   \n   \n * Speichern, SD Karte abziehen und in den Raspberry Pi einstecken.\n * Frage Alice: "Füge einen neuen Satelliten im Wohnzimmer hinzu"\n * Starte jetzt deinen Satelliten\n * Alice sollte sich selbst starten, mit deinem WLAN verbinden, Updates installieren, die Konfiguration einrichten und hochfahren. Das kann eine Weile dauern.\n * Wenn Alice auch nach 5 Minuten noch keinen Satelliten gefunden hat, wird sie dir das mitteilen. In dem Fall frag sie einfach nochmal, "Füge einen Satelliten hinzu". Je nach Hardware, kann die Installation auch mal über 5 Minuten benötigen.\n * Der SSH Benutzername ist pi und das Passwort ist umbrella. Ändere das Kennwort nach einer erfolgreichen Installation ab!\n\nWenn alles funktioniert hat, bestätigt dir Alice das erfolgreiche Hinzufügen eines neuen Satelliten! Alice kümmert sich darum, dass dein Hotword und Wakeword, genau wie auf der Haupteinheit, auch auf dem Satelliten verfügbar ist.\n\n# Hast du ein Problem mit Alice? Sie hört dich nicht? Sie scheint nichtmal zu starten?\nWirf einen Blick in unseren Troubleshooting Guide!',normalizedContent:'achtung!\n\nes handelt sich um eine alpha version! es kann jederzeit zu großeren anderungen in desem abschnitt kommen. die zielgruppe sollte ein grundlegendes verstandnis ihrer gerate haben, linux und eventuell programmierkenntenisse besitzen, sowie python module installieren konnen.\n\n * download unseres vorgefertigten raspbian buster image: * direkter download\n    * diese image enthalt nicht mehr als project alice, mit allen abhangigkeiten, sowie hermes led control\n    * einen einblick erhalst du in der sektion vorinstallierte pakete\n   \n   \n\ntip\n\ndu benotigst den skill alicesatellite auf deiner haupteinheit installiert!\n\n * flashe das image auf deine sd card\n * platziere keine wpa_supplicant.conf oder ssh datei in /boot\n * starte deinen raspberry nicht bevor die folgenden schritte ausgefuhrt hast!!\n * bearbeite die /boot/projectalicesatellite.yaml datei. wenn es keine projectalicesatellite.yaml auf deiner /boot partition geben sollte, schnapp dir hier die neuste version: projectalicesatellite.yaml\n * konfiguriere sie entsprechend deiner informationen und bedurfnisse. alle konfigurationen haben eine kurze erklarung, das meiste sollte aber selbsterklarend sein.\n * gehe sicher, dass du uberall ein leerzeichen nach den doppelpunkten hast: * falsch: forcerewrite:yes\n    * richtig: forcerewrite: yes\n   \n   \n * wenn der wert sonderzeichen enthalt, schließe den kompletten wert mit anfuhrungszeichen ein: * falsch: mqttpassword: a:%qji\n    * richtig: mqttpassword: "a:%qji"\n   \n   \n * speichern, sd karte abziehen und in den raspberry pi einstecken.\n * frage alice: "fuge einen neuen satelliten im wohnzimmer hinzu"\n * starte jetzt deinen satelliten\n * alice sollte sich selbst starten, mit deinem wlan verbinden, updates installieren, die konfiguration einrichten und hochfahren. das kann eine weile dauern.\n * wenn alice auch nach 5 minuten noch keinen satelliten gefunden hat, wird sie dir das mitteilen. in dem fall frag sie einfach nochmal, "fuge einen satelliten hinzu". je nach hardware, kann die installation auch mal uber 5 minuten benotigen.\n * der ssh benutzername ist pi und das passwort ist umbrella. andere das kennwort nach einer erfolgreichen installation ab!\n\nwenn alles funktioniert hat, bestatigt dir alice das erfolgreiche hinzufugen eines neuen satelliten! alice kummert sich darum, dass dein hotword und wakeword, genau wie auf der haupteinheit, auch auf dem satelliten verfugbar ist.\n\n# hast du ein problem mit alice? sie hort dich nicht? sie scheint nichtmal zu starten?\nwirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Satellite install",frontmatter:{title:"Satellite install",sidebarDepth:3},regularPath:"/de/satsetup/manual-install.html",relativePath:"de/satsetup/manual-install.md",key:"v-3ef16335",path:"/de/satsetup/manual-install.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Vorinstalliert",frontmatter:{title:"Vorinstalliert",sidebarDepth:3},regularPath:"/de/satsetup/preinstalled.html",relativePath:"de/satsetup/preinstalled.md",key:"v-599b782f",path:"/de/satsetup/preinstalled.html",headers:[{level:2,title:"Systemweit",slug:"systemweit",normalizedTitle:"systemweit",charIndex:140},{level:2,title:"venv",slug:"venv",normalizedTitle:"venv",charIndex:203}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Systemweit venv",content:"# Vorinstallierte Pakete\nHier findest du eine Liste von allen Programmen die auf dem Project Alice Satelliten Image vorinstalliert sind:\n\n# Systemweit\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",normalizedContent:"# vorinstallierte pakete\nhier findest du eine liste von allen programmen die auf dem project alice satelliten image vorinstalliert sind:\n\n# systemweit\n * git\n * snips-satellite\n * python3-pip\n * python3-venv\n\n# venv\n * requests\n * psutil\n * pyyaml\n * paho-mqtt",charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/de/satsetup/troubleshooting.html",relativePath:"de/satsetup/troubleshooting.md",key:"v-4f62e6f6",path:"/de/satsetup/troubleshooting.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Update Satellite to B1",frontmatter:{title:"Update Satellite to B1",sidebarDepth:3},regularPath:"/de/satsetup/updateToB1.html",relativePath:"de/satsetup/updateToB1.md",key:"v-1fbf6992",path:"/de/satsetup/updateToB1.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"WARNING\n\nThe alpha and beta releases are subject to major changes. The target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# Updating to B1 branch or above from A1\n * See Satellite setup if you don't already have A1 installed\n\nFirst double-check your satellite is operational on A1\n\nThen in the command line do the following\n\n * sudo systemctl stop ProjectAlice\n * git stash\n * git checkout 1.0.0-b1\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start ProjectAlice\n\nTo check there are no errors ...\n\n * tail -f /var/log/syslog\n\nIf no errors\n\n * git stash clear\n\nIf everything goes fine, and you have a satellite displayed in My Home. The satellite icon should now be green showing it's connected.\n\n# Having issues with Alice? She doesn't hear you? Doesn't seem to start?\nHave a look at our Troubleshooting guide!",normalizedContent:"warning\n\nthe alpha and beta releases are subject to major changes. the target audience is people with some knowledge of their devices, coding, installing python modules and basic stuff!\n\n# updating to b1 branch or above from a1\n * see satellite setup if you don't already have a1 installed\n\nfirst double-check your satellite is operational on a1\n\nthen in the command line do the following\n\n * sudo systemctl stop projectalice\n * git stash\n * git checkout 1.0.0-b1\n * sudo apt-get install portaudio19-dev\n * ./venv/bin/pip install importlib_metadata\n * ./venv/bin/pip install webrtcva\n * ./venv/bin/pip install wheel\n * ./venv/bin/pip install pyaudio\n * sudo systemctl start projectalice\n\nto check there are no errors ...\n\n * tail -f /var/log/syslog\n\nif no errors\n\n * git stash clear\n\nif everything goes fine, and you have a satellite displayed in my home. the satellite icon should now be green showing it's connected.\n\n# having issues with alice? she doesn't hear you? doesn't seem to start?\nhave a look at our troubleshooting guide!",charsets:{}},{title:"Haupteinheit installieren",frontmatter:{title:"Haupteinheit installieren",sidebarDepth:3},regularPath:"/de/setup/",relativePath:"de/setup/README.md",key:"v-fa956c34",path:"/de/setup/",headers:[{level:2,title:"Welche Variante darfs sein?",slug:"welche-variante-darfs-sein",normalizedTitle:"welche variante darfs sein?",charIndex:248}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Welche Variante darfs sein?",content:'Achtung!\n\nDies ist eine Beta Version! Die Software und Prozesse unterliegen kontinuierlicher Veränderung. Die Zielgruppe sind aktuell alle, die grundlegendes Wissen zu ihren Geräten haben, Systemlogs lesen und Python Module installieren können.\n\n# Welche Variante darfs sein?\nEs gibt aktuell drei Wege Alice zu installieren. Seit Oktober 2020 ist die empfohlene Methode die manuelle Installation, da man damit immer die neuste Version hat und nicht für jede kleine Änderung eine neues Image erstellt werden muss. Ab Version 1.0 wird es auch wieder "Plug&Play" Images geben!\n\n * Manuelle Installation\n * "Plug&Play" Raspberry Pi OS image\n * Docker\n\n# Hast du Probleme mit Alice? Sie kann dich nicht hören? Sie startet garnicht?\nWirf einen Blick in unseren Troubleshooting guide!',normalizedContent:'achtung!\n\ndies ist eine beta version! die software und prozesse unterliegen kontinuierlicher veranderung. die zielgruppe sind aktuell alle, die grundlegendes wissen zu ihren geraten haben, systemlogs lesen und python module installieren konnen.\n\n# welche variante darfs sein?\nes gibt aktuell drei wege alice zu installieren. seit oktober 2020 ist die empfohlene methode die manuelle installation, da man damit immer die neuste version hat und nicht fur jede kleine anderung eine neues image erstellt werden muss. ab version 1.0 wird es auch wieder "plug&play" images geben!\n\n * manuelle installation\n * "plug&play" raspberry pi os image\n * docker\n\n# hast du probleme mit alice? sie kann dich nicht horen? sie startet garnicht?\nwirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Docker",frontmatter:{title:"Docker",sidebarDepth:3},regularPath:"/de/setup/docker.html",relativePath:"de/setup/docker.md",key:"v-2a00bb85",path:"/de/setup/docker.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Dank der Arbeit unserer Community, gibt es noch einen weiteren Weg Alice auf vielfältigen Architekturen zu installieren.\n\nDieser Weg wird aktuell nicht von uns verwaltet, bietet dir allerdings ein Docker image mit dem du Alice installieren kannst! Und das wollen wir euch natürlich nicht vorenthalten!\n\nhttps://github.com/poulsp/docker-Alice-Linux-x86",normalizedContent:"dank der arbeit unserer community, gibt es noch einen weiteren weg alice auf vielfaltigen architekturen zu installieren.\n\ndieser weg wird aktuell nicht von uns verwaltet, bietet dir allerdings ein docker image mit dem du alice installieren kannst! und das wollen wir euch naturlich nicht vorenthalten!\n\nhttps://github.com/poulsp/docker-alice-linux-x86",charsets:{}},{title:'Installation mit unserem "Plug&Play" Image',frontmatter:{title:'Installation mit unserem "Plug&Play" Image',sidebarDepth:3,tags:["image","vorgefertigt","installation","installieren","plug&play","setup"]},regularPath:"/de/setup/image-install.html",relativePath:"de/setup/image-install.md",key:"v-798f791f",path:"/de/setup/image-install.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:'Achtung!\n\nDas zuletzt erstellte Image ist aus Beta 2! Hast du unter manueller Installation nach einer aktualisierten Version von Alice geschaut? Das nächste "Plug&Play" Image wird es erst wieder ab Version 1 geben.\n\n * Lade unser vorgefertigtes Raspbian OS Image herunter: * Direkter Download\n    * Das Image enthält nur Project Alice und einige Abhängigkeiten.\n    * Wenn du dich wunderst was genau drin steckt, wirf einen Blick in die Sektion vorinstallierte Pakete\n   \n   \n * Extrahiere das Image aus dem 7zip Archiv\n\nTip\n\nVerwende 7zip, es ist Open Source, schnell, hat eine der besten Kompressionsraten und kommt mit einigen netten Features\n\n * Spiele das Image auf deine SD Karte\n * Platziere KEINE wpa_supplicant.conf oder ssh Datei in /boot\n * Starte deinen Raspberry NICHT bevor du die folgenden Schritte ausgeführt hast!!\n * Bearbeite die Datei /boot/ProjectAlice.yaml. Wenn es keine ProjectAlice.yaml Datei in der /boot Partition gibt, hol dir die letzte Version hier: ProjectAlice.yaml\n * Stelle in der Datei alles so ein, wie du es benötigst. Alle Einstellungen haben eine kurze Erklärung, aber das meiste sollte selbsterklärend sein.\n * Stelle sicher dass du ein Leerzeichen nach dem Doppelpunkt hast: * Falsch: forceRewrite:yes\n    * Richtig: forceRewrite: yes\n   \n   \n * Wenn der Wert Sonderzeichen enthält, schließe ihn mit Anführungszeichen ein: * Falsch: mqttPassword: a:%qJi\n    * Richtig: mqttPassword: "a:%qJi"\n   \n   \n * Speichern, SD Karte auswerfen und in den Raspberry Pi stecken. Jetzt kannst du den Raspberry anschalten!\n * Alice sollte sich selbst starten und mit deinem WLAN verbinden. Sie führt Updates aus, konfiguriert sich und startet danach vollständig. Das kann eine Weile dauern. Ziehe sie jetzt nicht vom Strom ab bevor sie mit dir gesprochen hat!\n * Wenn du das Interface eingeschaltet hast(standard Einstellung), siehst du was los ist, wenn du http://x.x.x.x:5000 in deinem Browser aufrufst. Dabei musst du natürlich die IP oder den Hostnamen von deinem Raspberry einfügen.\n * Der SSH Benutzername ist pi, und das Passwort umbrella. Denke daran dein Passwort nach einer erfolgreichen Installation sofort zu ändern!',normalizedContent:'achtung!\n\ndas zuletzt erstellte image ist aus beta 2! hast du unter manueller installation nach einer aktualisierten version von alice geschaut? das nachste "plug&play" image wird es erst wieder ab version 1 geben.\n\n * lade unser vorgefertigtes raspbian os image herunter: * direkter download\n    * das image enthalt nur project alice und einige abhangigkeiten.\n    * wenn du dich wunderst was genau drin steckt, wirf einen blick in die sektion vorinstallierte pakete\n   \n   \n * extrahiere das image aus dem 7zip archiv\n\ntip\n\nverwende 7zip, es ist open source, schnell, hat eine der besten kompressionsraten und kommt mit einigen netten features\n\n * spiele das image auf deine sd karte\n * platziere keine wpa_supplicant.conf oder ssh datei in /boot\n * starte deinen raspberry nicht bevor du die folgenden schritte ausgefuhrt hast!!\n * bearbeite die datei /boot/projectalice.yaml. wenn es keine projectalice.yaml datei in der /boot partition gibt, hol dir die letzte version hier: projectalice.yaml\n * stelle in der datei alles so ein, wie du es benotigst. alle einstellungen haben eine kurze erklarung, aber das meiste sollte selbsterklarend sein.\n * stelle sicher dass du ein leerzeichen nach dem doppelpunkt hast: * falsch: forcerewrite:yes\n    * richtig: forcerewrite: yes\n   \n   \n * wenn der wert sonderzeichen enthalt, schließe ihn mit anfuhrungszeichen ein: * falsch: mqttpassword: a:%qji\n    * richtig: mqttpassword: "a:%qji"\n   \n   \n * speichern, sd karte auswerfen und in den raspberry pi stecken. jetzt kannst du den raspberry anschalten!\n * alice sollte sich selbst starten und mit deinem wlan verbinden. sie fuhrt updates aus, konfiguriert sich und startet danach vollstandig. das kann eine weile dauern. ziehe sie jetzt nicht vom strom ab bevor sie mit dir gesprochen hat!\n * wenn du das interface eingeschaltet hast(standard einstellung), siehst du was los ist, wenn du http://x.x.x.x:5000 in deinem browser aufrufst. dabei musst du naturlich die ip oder den hostnamen von deinem raspberry einfugen.\n * der ssh benutzername ist pi, und das passwort umbrella. denke daran dein passwort nach einer erfolgreichen installation sofort zu andern!',charsets:{}},{title:"Manuelle Installation der Haupteinheit",frontmatter:{title:"Manuelle Installation der Haupteinheit",sidebarDepth:3,tags:["Installation","Einrichtung","Haupteinheit"]},regularPath:"/de/setup/manual-install.html",relativePath:"de/setup/manual-install.md",key:"v-46952605",path:"/de/setup/manual-install.html",headers:[{level:2,title:"Installiere Raspberry Pi OS",slug:"installiere-raspberry-pi-os",normalizedTitle:"installiere raspberry pi os",charIndex:375},{level:2,title:"Richte deinen PI ein",slug:"richte-deinen-pi-ein",normalizedTitle:"richte deinen pi ein",charIndex:1872},{level:2,title:"Installiere Git und clone Alice",slug:"installiere-git-und-clone-alice",normalizedTitle:"installiere git und clone alice",charIndex:2348},{level:2,title:"Starte Alice",slug:"starte-alice",normalizedTitle:"starte alice",charIndex:2564}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Installiere Raspberry Pi OS Richte deinen PI ein Installiere Git und clone Alice Starte Alice",content:'Stand Oktober 2020 ist die manuelle Installation der bevorzugte Weg. Da aktuell neue Versionen sehr schnell veröffentlicht werden, ist es zu zeitaufwändig jedes Mal ein neues Image zu erstellen. Es sind nur wenige Schritte von einem funktionierenden Raspberry Pi OS, bis Alice mit der neusten Version bereit ist! Um sicherzugehen, erstmal die Raspberry Pi OS Installation\n\n# Installiere Raspberry Pi OS\n * Downloade Raspberry Pi OS, die Lite Version wird empfohlen\n * Stecke deine 8GB+ SD Karte in den Computer und brenne das Raspberry Pi OS image darauf. * Was heißt brenne das image? Leg die Streichhölzer weg, und schaue hier\n   \n   \n * Wenn deine SD Karte geflashed wurde entferne sie und stecke sie erneut in den PC. Dieser sollte jetzt ein Laufwerk boot finden. (Und eventuell darauf Hinweisen, dass weitere Laufwerke erst formatiert werden müssten - jetzt NICHT formatieren!)\n * Schnappe dir deinen bevorzugten Text Editor (mhhh... notepad++) und erstelle eine neue Datei im Laufwerk boot. Öffne dazu deinen Texteditor und speichere die Datei mit dem namen ssh, ohne Dateiendung (.txt). Unter Windows muss man dafür All types *.* auswählen, statt Normal text file (.txt).\n * Anschließend erstellst du noch eine Datei mit folgendem Text:country=DE\n   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=WPA-PSK\n   }\n   \n   \n   \n * Du solltest natürlich deinen eigenen Ländercode eintragen (DE, AT, CH...) und auch deine WLAN SSID und Passwort hinzufügen\n * Auch diese Datei speicherst du auf der Partition boot, diesmal mit dem Namen wpa_supplicant.conf. Auch diesmal ohne Dateiendung, also für Windows Nutzer mit all types.\n * Fertig! Entferne jetzt deine SD Karte vom Rechner und stecke sie in deinen Raspberry Pi. Gib ihm Strom und etwas Zeit zum Starten.\n\n# Richte deinen PI ein\n * Verbinde dich zu deinem PI mittels SSH. Für Windows Nutzer empfehle ich kitty\n * Der standard Benutzername ist pi, und das standard Passwort ist raspberry\n * Update das System * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * Öffne das Konfigurationstool * sudo raspi-config\n   \n   \n * Setze den Netzwerknamen auf ProjectAlice\n * Stelle deine Sprache, Tastatur und Zeitzone ein\n * Ändere das standard Benutzerpasswort!\n * Neustart\n\n# Installiere Git und clone Alice\nWe need a few things to get Alice up now\n\n * Installiere git: sudo apt-get install git -y\n * Clone Alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/ProjectAlice.git\n\n\n# Starte Alice\n * Kopiere die Basiskonfiguration an den richtigen Ort für die Ersteinrichtung: sudo cp ~/ProjectAlice/ProjectAlice.yaml /boot/ProjectAlice.yaml\n * Bearbeite die Installationseinstellungen: sudo nano /boot/ProjectAlice.yaml\n * Gehe die Datei Zeile für Zeile durch und Stelle alles nach deinen belieben ein.\n * Weißt du was? Wir sind durch! Lass sie uns starten!\n\ncd ~/ProjectAlice\npython3 main.py\n\n\n * Jetzt ist Geduld angesagt. Es braucht einige Installationen und Neustarts, aber Alice kümmert sich um alles. Anfangs siehst du in der Console noch den Fortschritt, aber sobald Alice ihren Service installiert hat, passiert alles im Hintergrund. Wenn du weiter den Prozess beobachten willst, wirf einen Blick in das Systemlog tail -f /var/log/syslog.\n * Sobald sie fertig ist, macht sie mit einem "Ding!" auf sich aufmerksam!\n * Kein "Ding!"? => Wirf einen Blick in unseren Troubleshooting guide!',normalizedContent:'stand oktober 2020 ist die manuelle installation der bevorzugte weg. da aktuell neue versionen sehr schnell veroffentlicht werden, ist es zu zeitaufwandig jedes mal ein neues image zu erstellen. es sind nur wenige schritte von einem funktionierenden raspberry pi os, bis alice mit der neusten version bereit ist! um sicherzugehen, erstmal die raspberry pi os installation\n\n# installiere raspberry pi os\n * downloade raspberry pi os, die lite version wird empfohlen\n * stecke deine 8gb+ sd karte in den computer und brenne das raspberry pi os image darauf. * was heißt brenne das image? leg die streichholzer weg, und schaue hier\n   \n   \n * wenn deine sd karte geflashed wurde entferne sie und stecke sie erneut in den pc. dieser sollte jetzt ein laufwerk boot finden. (und eventuell darauf hinweisen, dass weitere laufwerke erst formatiert werden mussten - jetzt nicht formatieren!)\n * schnappe dir deinen bevorzugten text editor (mhhh... notepad++) und erstelle eine neue datei im laufwerk boot. offne dazu deinen texteditor und speichere die datei mit dem namen ssh, ohne dateiendung (.txt). unter windows muss man dafur all types *.* auswahlen, statt normal text file (.txt).\n * anschließend erstellst du noch eine datei mit folgendem text:country=de\n   ctrl_interface=dir=/var/run/wpa_supplicant group=netdev\n   update_config=1\n   \n   network={\n       ssid=""\n       scan_ssid=1\n       psk=""\n       key_mgmt=wpa-psk\n   }\n   \n   \n   \n * du solltest naturlich deinen eigenen landercode eintragen (de, at, ch...) und auch deine wlan ssid und passwort hinzufugen\n * auch diese datei speicherst du auf der partition boot, diesmal mit dem namen wpa_supplicant.conf. auch diesmal ohne dateiendung, also fur windows nutzer mit all types.\n * fertig! entferne jetzt deine sd karte vom rechner und stecke sie in deinen raspberry pi. gib ihm strom und etwas zeit zum starten.\n\n# richte deinen pi ein\n * verbinde dich zu deinem pi mittels ssh. fur windows nutzer empfehle ich kitty\n * der standard benutzername ist pi, und das standard passwort ist raspberry\n * update das system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * offne das konfigurationstool * sudo raspi-config\n   \n   \n * setze den netzwerknamen auf projectalice\n * stelle deine sprache, tastatur und zeitzone ein\n * andere das standard benutzerpasswort!\n * neustart\n\n# installiere git und clone alice\nwe need a few things to get alice up now\n\n * installiere git: sudo apt-get install git -y\n * clone alice:\n\ncd\ngit clone https://github.com/project-alice-assistant/projectalice.git\n\n\n# starte alice\n * kopiere die basiskonfiguration an den richtigen ort fur die ersteinrichtung: sudo cp ~/projectalice/projectalice.yaml /boot/projectalice.yaml\n * bearbeite die installationseinstellungen: sudo nano /boot/projectalice.yaml\n * gehe die datei zeile fur zeile durch und stelle alles nach deinen belieben ein.\n * weißt du was? wir sind durch! lass sie uns starten!\n\ncd ~/projectalice\npython3 main.py\n\n\n * jetzt ist geduld angesagt. es braucht einige installationen und neustarts, aber alice kummert sich um alles. anfangs siehst du in der console noch den fortschritt, aber sobald alice ihren service installiert hat, passiert alles im hintergrund. wenn du weiter den prozess beobachten willst, wirf einen blick in das systemlog tail -f /var/log/syslog.\n * sobald sie fertig ist, macht sie mit einem "ding!" auf sich aufmerksam!\n * kein "ding!"? => wirf einen blick in unseren troubleshooting guide!',charsets:{}},{title:"Vorinstallierte Pakete",frontmatter:{title:"Vorinstallierte Pakete",sidebarDepth:3},regularPath:"/de/setup/preinstalled.html",relativePath:"de/setup/preinstalled.md",key:"v-03bb25b6",path:"/de/setup/preinstalled.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Seit beta 1 werden nicht mehr alle Abhängigkeiten vorinstalliert - nurnoch die notwendigsten:\n\n * Python3 PIP\n * psutil\n * PyYAML\n * toml\n\nWenn du alle Abhängigkeiten sehen willst, sobald die Installation vollständig ist, wirf einen Blick in folgende Dateien:\n\n * System\n * Python",normalizedContent:"seit beta 1 werden nicht mehr alle abhangigkeiten vorinstalliert - nurnoch die notwendigsten:\n\n * python3 pip\n * psutil\n * pyyaml\n * toml\n\nwenn du alle abhangigkeiten sehen willst, sobald die installation vollstandig ist, wirf einen blick in folgende dateien:\n\n * system\n * python",charsets:{}},{title:"Anforderungen",frontmatter:{title:"Anforderungen",sidebarDepth:3},regularPath:"/de/setup/requirements.html",relativePath:"de/setup/requirements.md",key:"v-21d949f6",path:"/de/setup/requirements.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:'# Anforderungen\nProject Alice läuft erfolgreich auf Raspberry Pi 3a+, 3b, 3b+ und 4b (1GB RAM genügt, für die Zukunft besser 2GB oder direkt 4GB. Die "neue" 8GB Variante klappt natürlich auch - Preisleistung lohnt sich für Alice aktuell nicht!).\n\nAnsonsten brauchst du ein Mikrofon und einen Lautsprecher wenn du mit der Haupteinheit auch direkt kommunizieren willst. Wenn du allerdings deine Haupteinheit versteckt im Serverschrank hast und nur über die verteilten Satelliten mit Alice reden willst, dann benötigt die Haupteinheit auch keine Ton Ein- und Ausgabe! Bewährt hat sich dabei der Respeaker 2 mit einem "beliebigen" Lautsprecher auf Klinke oder ein USB-Mikrofon wie zum Beispiel das Playstation 3 Eyetoy\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.',normalizedContent:'# anforderungen\nproject alice lauft erfolgreich auf raspberry pi 3a+, 3b, 3b+ und 4b (1gb ram genugt, fur die zukunft besser 2gb oder direkt 4gb. die "neue" 8gb variante klappt naturlich auch - preisleistung lohnt sich fur alice aktuell nicht!).\n\nansonsten brauchst du ein mikrofon und einen lautsprecher wenn du mit der haupteinheit auch direkt kommunizieren willst. wenn du allerdings deine haupteinheit versteckt im serverschrank hast und nur uber die verteilten satelliten mit alice reden willst, dann benotigt die haupteinheit auch keine ton ein- und ausgabe! bewahrt hat sich dabei der respeaker 2 mit einem "beliebigen" lautsprecher auf klinke oder ein usb-mikrofon wie zum beispiel das playstation 3 eyetoy\n\n* mit einem kauf uber die angegebenen amazon links unterstutzt du project alice. die empfehlung zu diesen geraten ist jedoch komplett unabhangig davon. alle einnahmen werden transparent gehalten und dienen zunachst dazu aufgelaufene serverkosten zu decken.',charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/de/setup/room-configuration.html",relativePath:"de/setup/room-configuration.md",key:"v-41edb305",path:"/de/setup/room-configuration.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/de/setup/troubleshooting.html",relativePath:"de/setup/troubleshooting.md",key:"v-09f1f986",path:"/de/setup/troubleshooting.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Ja, nichts und niemand ist perfekt, aber wir geben unser bestes nahe dran zu sein. Aber um ehrlich zu sein, Alice wird größer und größer, da geht auch mal was schief. Oder verwendest du Hardware die wir einfach noch nie getestet haben? Vielleicht ist dir auch nur ein Flüchtigkeitsfehler unterlaufen? Es gibt viele Gründe warum es auf Anhieb mal nicht klappt. Lass uns einfach eine Lösung dafür finden! Bedenke, der erste Start kann schon mal 15 Minuten dauern. Das hängt von Hardware und Einstellungen ab. Auf jeden Fall: Ziehe Alice jetzt nicht den Stecker wenn es so scheint als würde nichts passieren. Vielleicht erwischt du sonst Alice mitten in ihrem Training.\n\nAls erstes solltest du mittels SSH auf dein Gerät zugreifen. Finde die IP von deinem Gerät heraus und verbinde dich mittels ssh. Unter Windows empfehlen wir Kitty, auf anderen Plattformen solltest du direkt per Terminal verbinden können.\n\nEs gibt viele mögliche Wege nach dem Fehler zu suchen, das hier ist nur einer davon.\n\nAls erstes, lass uns einen Blick auf den Project Alice service werfen:\n\nsudo systemctl status ProjectAlice\n\nDu solltest einige Informationen zum Service erhalten. Wenn du es eine Weile beobachtetest, solltest du feststellen, dass es entweder durchgängig läuft, dann musst du einfach weiter warten bis Alice fertig gestartet ist. Oder du siehst, dass der Service regelmäßig abstürzt und neu startet. Vielleicht wird dir der Service aber auch als Tot angezeigt.\n\nSollte der Service tot sein oder dauernd neu starten, müssen wir tiefer graben. Stoppe Project Alice. Drücke dazu als erstes STRG+C um wieder Eingabe bereit zu sein. Dann geb ein:\n\nsudo systemctl stop ProjectAlice\n\nLass uns Alice jetzt manuell starten, dann haben wir einen besseren Einblick in die Logs. Schreibe dazu in deinem SSH terminal:\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nDadurch wird Alice manuell gestartet und sie gibt dir jede detaillierte Meldung aus. Wenn sie auf einen Fehler stößt, wird dir dieser ausgegeben und Alice stoppt. Suche nach so einem Fehler und erstelle damit ein Issue auf Github. Lies dir die Logs sorgfältig durch, wenn doch nur eine Einstellung fehlt, oder eine Abhängigkeit nicht installiert wurde, dann gibt es hierfür normalerweise eindeutige Meldungen!\n\nWenn es keinen Fehler gibt und es scheint so, als würde Alice ohne Probleme starten, dann sollte die letzte Zeile im Log folgende sein:\n\nStarting Alice Core\n\nGleichzeitig solltest du dann auch ihre Willkommensnachricht hören!\n\n# Das Log sagt, sie fragt nach einem neuen Nutzer, aber ich höre nichts\nLinux Audio Probleme, die sind ja leider bekannt? Stoppe Alice mit STRG+C und wirf einen Blick in deine installierten Audiogeräte:\n\naplay -l\narecord -l\n\n\nHier sollteste du deine Geräte finden. Das erste Gerät ist dein standard Audio Ausgabegerät, das zweite deine Audio Eingabe. Ist deine Hardware hier nicht gelistet, hast du das Problem identifiziert! Für eine genaue Lösung, ist die Hardware-Welt leider zu groß..\n\nWIP",normalizedContent:"ja, nichts und niemand ist perfekt, aber wir geben unser bestes nahe dran zu sein. aber um ehrlich zu sein, alice wird großer und großer, da geht auch mal was schief. oder verwendest du hardware die wir einfach noch nie getestet haben? vielleicht ist dir auch nur ein fluchtigkeitsfehler unterlaufen? es gibt viele grunde warum es auf anhieb mal nicht klappt. lass uns einfach eine losung dafur finden! bedenke, der erste start kann schon mal 15 minuten dauern. das hangt von hardware und einstellungen ab. auf jeden fall: ziehe alice jetzt nicht den stecker wenn es so scheint als wurde nichts passieren. vielleicht erwischt du sonst alice mitten in ihrem training.\n\nals erstes solltest du mittels ssh auf dein gerat zugreifen. finde die ip von deinem gerat heraus und verbinde dich mittels ssh. unter windows empfehlen wir kitty, auf anderen plattformen solltest du direkt per terminal verbinden konnen.\n\nes gibt viele mogliche wege nach dem fehler zu suchen, das hier ist nur einer davon.\n\nals erstes, lass uns einen blick auf den project alice service werfen:\n\nsudo systemctl status projectalice\n\ndu solltest einige informationen zum service erhalten. wenn du es eine weile beobachtetest, solltest du feststellen, dass es entweder durchgangig lauft, dann musst du einfach weiter warten bis alice fertig gestartet ist. oder du siehst, dass der service regelmaßig absturzt und neu startet. vielleicht wird dir der service aber auch als tot angezeigt.\n\nsollte der service tot sein oder dauernd neu starten, mussen wir tiefer graben. stoppe project alice. drucke dazu als erstes strg+c um wieder eingabe bereit zu sein. dann geb ein:\n\nsudo systemctl stop projectalice\n\nlass uns alice jetzt manuell starten, dann haben wir einen besseren einblick in die logs. schreibe dazu in deinem ssh terminal:\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\ndadurch wird alice manuell gestartet und sie gibt dir jede detaillierte meldung aus. wenn sie auf einen fehler stoßt, wird dir dieser ausgegeben und alice stoppt. suche nach so einem fehler und erstelle damit ein issue auf github. lies dir die logs sorgfaltig durch, wenn doch nur eine einstellung fehlt, oder eine abhangigkeit nicht installiert wurde, dann gibt es hierfur normalerweise eindeutige meldungen!\n\nwenn es keinen fehler gibt und es scheint so, als wurde alice ohne probleme starten, dann sollte die letzte zeile im log folgende sein:\n\nstarting alice core\n\ngleichzeitig solltest du dann auch ihre willkommensnachricht horen!\n\n# das log sagt, sie fragt nach einem neuen nutzer, aber ich hore nichts\nlinux audio probleme, die sind ja leider bekannt? stoppe alice mit strg+c und wirf einen blick in deine installierten audiogerate:\n\naplay -l\narecord -l\n\n\nhier sollteste du deine gerate finden. das erste gerat ist dein standard audio ausgabegerat, das zweite deine audio eingabe. ist deine hardware hier nicht gelistet, hast du das problem identifiziert! fur eine genaue losung, ist die hardware-welt leider zu groß..\n\nwip",charsets:{}},{title:"Hotword und Wakeword",frontmatter:{title:"Hotword und Wakeword",sidebarDepth:3},regularPath:"/de/setup/wakeword.html",relativePath:"de/setup/wakeword.md",key:"v-585f6345",path:"/de/setup/wakeword.html",headers:[{level:2,title:"Hotword",slug:"hotword",normalizedTitle:"hotword",charIndex:256},{level:2,title:"Wakeword",slug:"wakeword",normalizedTitle:"wakeword",charIndex:23},{level:3,title:"Setze alles zurück",slug:"setze-alles-zuruck",normalizedTitle:"setze alles zuruck",charIndex:827},{level:3,title:"Erstelle dein Wakeword manuell",slug:"erstelle-dein-wakeword-manuell",normalizedTitle:"erstelle dein wakeword manuell",charIndex:1107}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Hotword Wakeword Setze alles zurück Erstelle dein Wakeword manuell",content:'Es gibt zwei Arten von Wakewords für Alice. Zum einen das , es funktioniert für jeden und ist vorinstalliert. Zum anderen die persönlichen , and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# Hotword\nAktuell sind die folgenden unterstützt:\n\n * "Hey Snips"\n * "Porcupine"/"Bumblebee"/"Blueberry"/"Terminator"\n\nWir arbeiten an weiteren Lösungen und ersetzen, bzw. erweitern diese Liste sobald weitere unterstützt sind.\n\n# Wakeword\nDas persönliche wird nach der Erstellung eines neuen Benutzers aufgenommen. Das kann direkt nach dem ersten Start für den ersten Nutzer sein, oder wann auch immer ein neuer Nutzer später hinzugefügt wird. Wenn du dich zunächst dazu entscheidest kein zu erstellen, dann haben wir (aktuell) zwei Wege dies nachträglich zu erledigen.\n\n# Setze alles zurück\nLösche die Erinnerung von Alice und starte nochmal neu mit der Erstellung des Admin-Benutzers. Dieser Weg wird natürlich nur empfohlen, wenn du gerade erst Alice installiert hast.\n\nsudo rm ~/ProjectAlice/system/database/data.db\nsudo systemctl restart Alice\n\n\n# Erstelle dein Wakeword manuell\nMit dieser Anleitung lernst du deine eigenen Wakewords aufzunehmen, zu schneiden und Alice beizubringen.\n\n 1. Nimm dich drei mal auf wenn du "Hey Alice" sagst. Nenne die Dateien 0.wav 1.wav and 2.wav\n 2. Schneide die Aufnahmen so knapp wie möglich (Eine Millisekunde zuviel abschneiden, ist besser als eine Millisekunde zu wenig!)\n\nTip!\n\nEin kostenloses Tool und unsere Empfehlung wäre zum Beispiel Audacity\n\n 3. Verschiebe die Datei nach ~/ProjectAlice/trained/hotwords/%username%/. Füge dazu deinen Namen in die Verzeichnisstruktur ein - alles klein geschrieben!\n    \n    \n 4. Erstelle eine Datei "config.json" im selben Verzeichnis und befülle sie mit dem folgenden (Auch hier wieder %username% mit deinem Namen, in Kleinbuchstaben, ersetzen)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. Bearbeite in der Datei den folgenden Block, damit er den Pfad zu deinem neu aufgenommenen enthält, gefolgt von der Sensivität. Starte mit ~0.5, das kannst du nachher in der Weboberfläche von Alice genauer ermitteln lassen(Adminbereich). Auch hier natürlich wieder den %username% ersetzen!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/ProjectAlice/trained/hotwords/snips_hotword=0.53","/home/pi/ProjectAlice/trained/hotwords/%username%=0.48"]\n\n\n 7. Starte Alice neu\n\nsudo systemctl restart ProjectAlice',normalizedContent:'es gibt zwei arten von wakewords fur alice. zum einen das , es funktioniert fur jeden und ist vorinstalliert. zum anderen die personlichen , and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# hotword\naktuell sind die folgenden unterstutzt:\n\n * "hey snips"\n * "porcupine"/"bumblebee"/"blueberry"/"terminator"\n\nwir arbeiten an weiteren losungen und ersetzen, bzw. erweitern diese liste sobald weitere unterstutzt sind.\n\n# wakeword\ndas personliche wird nach der erstellung eines neuen benutzers aufgenommen. das kann direkt nach dem ersten start fur den ersten nutzer sein, oder wann auch immer ein neuer nutzer spater hinzugefugt wird. wenn du dich zunachst dazu entscheidest kein zu erstellen, dann haben wir (aktuell) zwei wege dies nachtraglich zu erledigen.\n\n# setze alles zuruck\nlosche die erinnerung von alice und starte nochmal neu mit der erstellung des admin-benutzers. dieser weg wird naturlich nur empfohlen, wenn du gerade erst alice installiert hast.\n\nsudo rm ~/projectalice/system/database/data.db\nsudo systemctl restart alice\n\n\n# erstelle dein wakeword manuell\nmit dieser anleitung lernst du deine eigenen wakewords aufzunehmen, zu schneiden und alice beizubringen.\n\n 1. nimm dich drei mal auf wenn du "hey alice" sagst. nenne die dateien 0.wav 1.wav and 2.wav\n 2. schneide die aufnahmen so knapp wie moglich (eine millisekunde zuviel abschneiden, ist besser als eine millisekunde zu wenig!)\n\ntip!\n\nein kostenloses tool und unsere empfehlung ware zum beispiel audacity\n\n 3. verschiebe die datei nach ~/projectalice/trained/hotwords/%username%/. fuge dazu deinen namen in die verzeichnisstruktur ein - alles klein geschrieben!\n    \n    \n 4. erstelle eine datei "config.json" im selben verzeichnis und befulle sie mit dem folgenden (auch hier wieder %username% mit deinem namen, in kleinbuchstaben, ersetzen)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 5. sudo nano /etc/snips.toml\n    \n    \n 6. bearbeite in der datei den folgenden block, damit er den pfad zu deinem neu aufgenommenen enthalt, gefolgt von der sensivitat. starte mit ~0.5, das kannst du nachher in der weboberflache von alice genauer ermitteln lassen(adminbereich). auch hier naturlich wieder den %username% ersetzen!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/projectalice/trained/hotwords/snips_hotword=0.53","/home/pi/projectalice/trained/hotwords/%username%=0.48"]\n\n\n 7. starte alice neu\n\nsudo systemctl restart projectalice',charsets:{}},{title:"Introduction to skill development",frontmatter:{title:"Introduction to skill development",sidebarDepth:3},regularPath:"/de/skill-development/",relativePath:"de/skill-development/README.md",key:"v-7e6cd7b4",path:"/de/skill-development/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Builtin intents",frontmatter:{title:"Builtin intents",sidebarDepth:5},regularPath:"/de/skill-development/builtin-intents.html",relativePath:"de/skill-development/builtin-intents.md",key:"v-2e5d5b53",path:"/de/skill-development/builtin-intents.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Builtin slots",frontmatter:{title:"Builtin slots",sidebarDepth:3},regularPath:"/de/skill-development/builtin-slots.html",relativePath:"de/skill-development/builtin-slots.md",key:"v-5756d057",path:"/de/skill-development/builtin-slots.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Database access",frontmatter:{title:"Database access",sidebarDepth:3},regularPath:"/de/skill-development/database-access.html",relativePath:"de/skill-development/database-access.md",key:"v-910389fe",path:"/de/skill-development/database-access.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Dialog template",frontmatter:{title:"Dialog template",sidebarDepth:4},regularPath:"/de/skill-development/dialog-template.html",relativePath:"de/skill-development/dialog-template.md",key:"v-464ee06f",path:"/de/skill-development/dialog-template.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Events",frontmatter:{title:"Events",sidebarDepth:3},regularPath:"/de/skill-development/events.html",relativePath:"de/skill-development/events.md",key:"v-35f71965",path:"/de/skill-development/events.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Logging",frontmatter:{title:"Logging",sidebarDepth:3},regularPath:"/de/skill-development/logging.html",relativePath:"de/skill-development/logging.md",key:"v-10d31522",path:"/de/skill-development/logging.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Missing slot information",frontmatter:{title:"Missing slot information",sidebarDepth:3},regularPath:"/de/skill-development/missing-slot-info.html",relativePath:"de/skill-development/missing-slot-info.md",key:"v-3cfb3881",path:"/de/skill-development/missing-slot-info.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"New language support",frontmatter:{title:"New language support",sidebarDepth:4},regularPath:"/de/skill-development/new-language-support.html",relativePath:"de/skill-development/new-language-support.md",key:"v-75c9dde5",path:"/de/skill-development/new-language-support.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Publish your skill",frontmatter:{title:"Publish your skill",sidebarDepth:3},regularPath:"/de/skill-development/publishing-to-skill-store.html",relativePath:"de/skill-development/publishing-to-skill-store.md",key:"v-2eab9c93",path:"/de/skill-development/publishing-to-skill-store.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/de/skill-development/room-configuration.html",relativePath:"de/skill-development/room-configuration.md",key:"v-532802c5",path:"/de/skill-development/room-configuration.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Skill configuration file",frontmatter:{title:"Skill configuration file",sidebarDepth:3},regularPath:"/de/skill-development/skill-configuration-file.html",relativePath:"de/skill-development/skill-configuration-file.md",key:"v-d63d2936",path:"/de/skill-development/skill-configuration-file.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Skill download suggestion",frontmatter:{title:"Skill download suggestion",sidebarDepth:3,tags:["suggestion","auto download","download"]},regularPath:"/de/skill-development/skill-download-suggestion.html",relativePath:"de/skill-development/skill-download-suggestion.md",key:"v-59baa413",path:"/de/skill-development/skill-download-suggestion.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Talk file",frontmatter:{title:"Talk file",sidebarDepth:3},regularPath:"/de/skill-development/talk-file.html",relativePath:"de/skill-development/talk-file.md",key:"v-08842bf3",path:"/de/skill-development/talk-file.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Widgets",frontmatter:{title:"Widgets",sidebarDepth:3},regularPath:"/de/skill-development/widgets.html",relativePath:"de/skill-development/widgets.md",key:"v-783892cf",path:"/de/skill-development/widgets.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Your first skill",frontmatter:{title:"Your first skill",sidebarDepth:3},regularPath:"/de/skill-development/your-first-skill.html",relativePath:"de/skill-development/your-first-skill.md",key:"v-5c61de05",path:"/de/skill-development/your-first-skill.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# WIP\nIch brauche jemanden, diese Seite zu übersetzen bitte",normalizedContent:"# wip\nich brauche jemanden, diese seite zu ubersetzen bitte",charsets:{}},{title:"Sponsoren",frontmatter:{title:"Sponsoren",sidebarDepth:3},regularPath:"/de/sponsors/",relativePath:"de/sponsors/README.md",key:"v-0c231626",path:"/de/sponsors/",headers:[{level:2,title:"Jetbrains",slug:"jetbrains",normalizedTitle:"jetbrains",charIndex:834},{level:2,title:"Gitlab",slug:"gitlab",normalizedTitle:"gitlab",charIndex:1517}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Jetbrains Gitlab",content:"# Sponsors\nProject Alice schickt ein riesiges Dankeschön an die folgenden Personen und Firmen, für ihre Unterstützung! Es ist nicht leicht kostenlose Software als Open Source zu entwickeln und die entstehenden Kosten können schnell erdrückend werden wenn man Effizienz und Qualität anstrebt.\n\nWenn auch du ein Sponsor von Project Alice werden willst, gibt es hierfür aktuell zwei Wege. Entweder eine monatliche Unterstüzung mit Liberapay (Transparenter als Patreons und gibt 100% weiter an den Empfänger!) oder mit einer einmaligen Spende über Paypal.\n\nLiberapay: https://liberapay.com/Psycho/donate\n\n\nAktuell gibt es keinen Plan, wie wir den Unterstützern danken können, außer sie hier zu nennen und einen Link ihrer Wahl zu platzieren. Wenn es jedoch Vorschläge gibt, immer her damit!\n\nPaypal: https://paypal.me/Psychokiller1888\n\n# Jetbrains\n Bist du auf der Suche nach den perfekten Werzeugen für welche Sprache auch immer du programmierst? Deine Suche ist vorbei, Jetbrains bietet dir die perfekte Suite für Entwicklungen in Python, PHP, HTML, Java, Rust, C# und vielen weiteren! Mit dedizierten Apps für jede Sprache, einer mächtigen Codevervollständigung und Analyse gibt es keine Ausrede mehr für Tippfehler! Refactoring wird auf ein komplett neues Level gehoben, Debugging versüßt, Remote Auto Deployment, Themes, Plugins und so vieles mehr machen es die perfekte Plattform für alle deine Bedürfnisse!\n\nVielen Dank für kostenfreie Lizensen, vollgepackt mit allen Programmen, zur Open Source Entwicklung!\n\n\n\n# Gitlab\n Looking to host your code? For a complete and very powerful Continuous Integration system? Managing your issues? Maybe you are already using another repository, but you still want to benefit from the CI? Give Gitlab a try! And even more than a try! The hosted solution is perfect for starters but if your needs increase, Gitlab can be easily downloaded and installed. Best part of it? Fear no data leakage, it's open source!\n\nThank you gitlab for providing us with a Gold license!",normalizedContent:"# sponsors\nproject alice schickt ein riesiges dankeschon an die folgenden personen und firmen, fur ihre unterstutzung! es ist nicht leicht kostenlose software als open source zu entwickeln und die entstehenden kosten konnen schnell erdruckend werden wenn man effizienz und qualitat anstrebt.\n\nwenn auch du ein sponsor von project alice werden willst, gibt es hierfur aktuell zwei wege. entweder eine monatliche unterstuzung mit liberapay (transparenter als patreons und gibt 100% weiter an den empfanger!) oder mit einer einmaligen spende uber paypal.\n\nliberapay: https://liberapay.com/psycho/donate\n\n\naktuell gibt es keinen plan, wie wir den unterstutzern danken konnen, außer sie hier zu nennen und einen link ihrer wahl zu platzieren. wenn es jedoch vorschlage gibt, immer her damit!\n\npaypal: https://paypal.me/psychokiller1888\n\n# jetbrains\n bist du auf der suche nach den perfekten werzeugen fur welche sprache auch immer du programmierst? deine suche ist vorbei, jetbrains bietet dir die perfekte suite fur entwicklungen in python, php, html, java, rust, c# und vielen weiteren! mit dedizierten apps fur jede sprache, einer machtigen codevervollstandigung und analyse gibt es keine ausrede mehr fur tippfehler! refactoring wird auf ein komplett neues level gehoben, debugging versußt, remote auto deployment, themes, plugins und so vieles mehr machen es die perfekte plattform fur alle deine bedurfnisse!\n\nvielen dank fur kostenfreie lizensen, vollgepackt mit allen programmen, zur open source entwicklung!\n\n\n\n# gitlab\n looking to host your code? for a complete and very powerful continuous integration system? managing your issues? maybe you are already using another repository, but you still want to benefit from the ci? give gitlab a try! and even more than a try! the hosted solution is perfect for starters but if your needs increase, gitlab can be easily downloaded and installed. best part of it? fear no data leakage, it's open source!\n\nthank you gitlab for providing us with a gold license!",charsets:{}},{title:"Grundlegende Verwendung",frontmatter:{title:"Grundlegende Verwendung",sidebarDepth:3},regularPath:"/de/usage/",relativePath:"de/usage/README.md",key:"v-207e9734",path:"/de/usage/",headers:[{level:2,title:"Nicht verstanden?",slug:"nicht-verstanden",normalizedTitle:"nicht verstanden?",charIndex:774},{level:3,title:"Beispiel",slug:"beispiel",normalizedTitle:"beispiel",charIndex:1127}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Nicht verstanden? Beispiel",content:"# Sprache\nAlice ist ein Sprachassistent also haben wir auch versucht die meisten Funktionen mit Sprachunterstützung zu gestalten. Manche Funktionen sind noch in Arbeit, andere erhalten erst später Sprachunterstützung, aber normalerweise machst du alles mit Alice über deine Stimme!\n\nEin Problem ist, das viele nicht wissen was sie zu ihrem Sprachassistenten sagen können, da sie ja keine physische Person vor sich haben. Und mit einer Maschine reden ist einfach nicht so natürlich. Mit Alice musst du dir keine Sorgen machen - rede einfach mit ihr und frage sie was auch immer du willst! Wenn sie dich nicht versteht, wird sie dich es wissen lassen! Wenn es schon einen Skill gibt fragt dich Alice ob sie ihn hinzufügen soll - oder wirf doch selber einen Blick auf die !\n\n# Nicht verstanden?\nAlice hat dich vielleicht akustisch verstanden, das heißt aber noch nicht, dass sie auch weiß was sie dir antworten soll. Dafür brauchst du erst einen Skill. Solltest du deiner Meinung nach einen Skill haben der dafür Verantwortlich ist, dann war die Confidence/Wahrscheinlichkeit nicht hoch genug. Schlag in Github doch ein paar neue Beispielsätze vor! Kurzfristig kannst du im Adminmenü auch den Schwellwert (probabilityThreshold) reduzieren!\n\nTip!\n\nManchmal versteht Alice deine Formulierung nicht - sie ahnt zwar schon was du willst, ist sich aber nicht sicher genug. Statt genau den gleichen Satz zu wiederholen, formuliere deine Frage um! Anschließend fragt dich Alice auch, ob sie sich deine vorherige Formulierung für die Zukunft lernen sollst!\n\n# Beispiel\nHey Alice?Ja?Wie ist die temp draußenSorry? Ich verstehe dich nicht?Wie ist die temperatur draußen?Es hat gerade 6°C draußen.Ist es das was du gemeint hast?JaOk, cool, dann merke ich mir das!Hey Alice?Ja?Wie ist die temp draußen?Es hat gerade 6°C draußen.",normalizedContent:"# sprache\nalice ist ein sprachassistent also haben wir auch versucht die meisten funktionen mit sprachunterstutzung zu gestalten. manche funktionen sind noch in arbeit, andere erhalten erst spater sprachunterstutzung, aber normalerweise machst du alles mit alice uber deine stimme!\n\nein problem ist, das viele nicht wissen was sie zu ihrem sprachassistenten sagen konnen, da sie ja keine physische person vor sich haben. und mit einer maschine reden ist einfach nicht so naturlich. mit alice musst du dir keine sorgen machen - rede einfach mit ihr und frage sie was auch immer du willst! wenn sie dich nicht versteht, wird sie dich es wissen lassen! wenn es schon einen skill gibt fragt dich alice ob sie ihn hinzufugen soll - oder wirf doch selber einen blick auf die !\n\n# nicht verstanden?\nalice hat dich vielleicht akustisch verstanden, das heißt aber noch nicht, dass sie auch weiß was sie dir antworten soll. dafur brauchst du erst einen skill. solltest du deiner meinung nach einen skill haben der dafur verantwortlich ist, dann war die confidence/wahrscheinlichkeit nicht hoch genug. schlag in github doch ein paar neue beispielsatze vor! kurzfristig kannst du im adminmenu auch den schwellwert (probabilitythreshold) reduzieren!\n\ntip!\n\nmanchmal versteht alice deine formulierung nicht - sie ahnt zwar schon was du willst, ist sich aber nicht sicher genug. statt genau den gleichen satz zu wiederholen, formuliere deine frage um! anschließend fragt dich alice auch, ob sie sich deine vorherige formulierung fur die zukunft lernen sollst!\n\n# beispiel\nhey alice?ja?wie ist die temp draußensorry? ich verstehe dich nicht?wie ist die temperatur draußen?es hat gerade 6°c draußen.ist es das was du gemeint hast?jaok, cool, dann merke ich mir das!hey alice?ja?wie ist die temp draußen?es hat gerade 6°c draußen.",charsets:{}},{title:"Web Interface",frontmatter:{title:"Web Interface",sidebarDepth:3,tags:["web","interface"]},regularPath:"/de/usage/web-interface.html",relativePath:"de/usage/web-interface.md",key:"v-592be0a9",path:"/de/usage/web-interface.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:'# Zugriff\nDas Alice web ist über den Port 5000 zu erreichen (Einstellbar in der Konfiguration) und der Zugriff kann entweder über die IP oder den Hostnamen erfolgen. Zum Beispiel:\n\nhttp://192.168.1.101:5000/\n\n# Home\nDiese Seite kannst du dir selbst mit gestalten. Wie überall im web Interface findest du dafür rechts oben eine Toolbar - mit einem Klick auf den Stift startet der Bearbeitungsmodus und dir werden die weiteren Werkzeuge angezeigt.\n\nIm Bearbeitungsmodus kannst du Widgets verschieben, skalieren und sortieren. Die Tools, die dir zur Verfügung stehen sind:\n\n * Ein Wechsel in den Theatermodus: Toolbar und Menüleiste verschwinden - die komplette Fläche steht für deine gewünschte Information zur Verfügung, perfekt auch für kleine Bildschirme wie zum Beispiel den offiziellen Raspberry Pi 7" Touchscreen*. Zum Verlassen des Theatermodus muss die Seite neu geladen werden!\n * Das Zahnrad zum Starten des Konfigurationsmodus: Anschließend kannst du Detaileinstellungen und auch die Anzeige(Farbe, Transparenz, Schriftgröße..) eines Widgets ändern.\n * Das Pluszeichen zum Hinzufügen eines Widegts: Wird dir nur ein leeres Popup angezeigt, hast du aktuell keine Skills installiert, die auch ein Widget mit sich bringen! Versuche es doch mal mit ISS, Wetter, dem TextinputWidget oder DateTimeYear!\n * Das Minus Zeichen zum Entfernen eines Widget.\n * Die Diskette zum Speichern der Änderungen und schließen der Toolbar\n\n# Skills\nHier kannst du deine Skills verwalten. Zunächst siehst du eine Übersicht aller installierten Skills. Du kannst dir zu jedem Skill die möglichen anschauen, Einstellungen verwalten oder die Installations- und Verwendungshinweise ansehen. Oben rechts in der Toolbar wechselst du zur Installation neuer Skills. Wähle einen Skill aus und klicke erneut oben in der Ecke auf den Download! Alice kümmert sich um den Rest!\n\n# Mein Haus\nHier findet die technische Konfiguration aller Lokationen und Geräte statt. Mehr Informationen erhaltest du in der Sektion Mein Haus\n\n# Szenarien\nDer Szenarieneditor bringt dir die Mächtigkeit eines Node-Red Editors direkt in Alice. Mehr Informationen erhaltest du in der Sektion Szenarien\n\n# Syslog\nHier findest du alle Loggingnachrichten von Alice. Verhält sich etwas nicht wie du es erwartest? Wirf einen Blick hier hinein!\n\n# AliceWatch\nHier findest du eine Übersicht was Alice von dir verstanden hat, was sie sagen interpretiert, selber sagt, oder einfach nur im Hintergrund verarbeitet.\n\n# Admin\nIm Adminbereich musst du dich zunächst einloggen - Alice geleitet dich durch Sprachkommandos durch diesen Prozess. Ansonsten: Gib "admin" oder deinen Benutzernamen mit deiner Tastatur ein. Anschließend erscheint das Zahlenpad mit dem du deine Pin eingeben kannst! Jetzt kannst du alle Einstellungen rund um Alice tätigen - vergiss nicht ganz unten auf der Seite zu speichern! Über den zweiten Reiter erreichst du weitere Tools zum Neustarten, neu Trainieren, aktualisieren, sowie der Benutzerverwaltung mit einem neuen Wakeword und dem Feintuning dazu.\n\n# Devmode\nHier kannst du mit Hilfe von Alice einen neuen Skill erstellen. Trage alle Informationen ein und Alice erstellt für dich die notwendigen Verzeichnisse und Dateien - ein direkter Upload auf Github ist auch möglich!\n\n* Mit einem Kauf über die angegebenen Amazon Links unterstützt du Project Alice. Die Empfehlung zu diesen Geräten ist jedoch komplett unabhängig davon. Alle Einnahmen werden transparent gehalten und dienen zunächst dazu aufgelaufene Serverkosten zu decken.',normalizedContent:'# zugriff\ndas alice web ist uber den port 5000 zu erreichen (einstellbar in der konfiguration) und der zugriff kann entweder uber die ip oder den hostnamen erfolgen. zum beispiel:\n\nhttp://192.168.1.101:5000/\n\n# home\ndiese seite kannst du dir selbst mit gestalten. wie uberall im web interface findest du dafur rechts oben eine toolbar - mit einem klick auf den stift startet der bearbeitungsmodus und dir werden die weiteren werkzeuge angezeigt.\n\nim bearbeitungsmodus kannst du widgets verschieben, skalieren und sortieren. die tools, die dir zur verfugung stehen sind:\n\n * ein wechsel in den theatermodus: toolbar und menuleiste verschwinden - die komplette flache steht fur deine gewunschte information zur verfugung, perfekt auch fur kleine bildschirme wie zum beispiel den offiziellen raspberry pi 7" touchscreen*. zum verlassen des theatermodus muss die seite neu geladen werden!\n * das zahnrad zum starten des konfigurationsmodus: anschließend kannst du detaileinstellungen und auch die anzeige(farbe, transparenz, schriftgroße..) eines widgets andern.\n * das pluszeichen zum hinzufugen eines widegts: wird dir nur ein leeres popup angezeigt, hast du aktuell keine skills installiert, die auch ein widget mit sich bringen! versuche es doch mal mit iss, wetter, dem textinputwidget oder datetimeyear!\n * das minus zeichen zum entfernen eines widget.\n * die diskette zum speichern der anderungen und schließen der toolbar\n\n# skills\nhier kannst du deine skills verwalten. zunachst siehst du eine ubersicht aller installierten skills. du kannst dir zu jedem skill die moglichen anschauen, einstellungen verwalten oder die installations- und verwendungshinweise ansehen. oben rechts in der toolbar wechselst du zur installation neuer skills. wahle einen skill aus und klicke erneut oben in der ecke auf den download! alice kummert sich um den rest!\n\n# mein haus\nhier findet die technische konfiguration aller lokationen und gerate statt. mehr informationen erhaltest du in der sektion mein haus\n\n# szenarien\nder szenarieneditor bringt dir die machtigkeit eines node-red editors direkt in alice. mehr informationen erhaltest du in der sektion szenarien\n\n# syslog\nhier findest du alle loggingnachrichten von alice. verhalt sich etwas nicht wie du es erwartest? wirf einen blick hier hinein!\n\n# alicewatch\nhier findest du eine ubersicht was alice von dir verstanden hat, was sie sagen interpretiert, selber sagt, oder einfach nur im hintergrund verarbeitet.\n\n# admin\nim adminbereich musst du dich zunachst einloggen - alice geleitet dich durch sprachkommandos durch diesen prozess. ansonsten: gib "admin" oder deinen benutzernamen mit deiner tastatur ein. anschließend erscheint das zahlenpad mit dem du deine pin eingeben kannst! jetzt kannst du alle einstellungen rund um alice tatigen - vergiss nicht ganz unten auf der seite zu speichern! uber den zweiten reiter erreichst du weitere tools zum neustarten, neu trainieren, aktualisieren, sowie der benutzerverwaltung mit einem neuen wakeword und dem feintuning dazu.\n\n# devmode\nhier kannst du mit hilfe von alice einen neuen skill erstellen. trage alle informationen ein und alice erstellt fur dich die notwendigen verzeichnisse und dateien - ein direkter upload auf github ist auch moglich!\n\n* mit einem kauf uber die angegebenen amazon links unterstutzt du project alice. die empfehlung zu diesen geraten ist jedoch komplett unabhangig davon. alle einnahmen werden transparent gehalten und dienen zunachst dazu aufgelaufene serverkosten zu decken.',charsets:{}},{title:"Useful links",frontmatter:{title:"Useful links",sidebarDepth:3},regularPath:"/links/",relativePath:"links/README.md",key:"v-a7323dfc",path:"/links/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Project Alice exists at many places for you to be updated! Likes and follows very welcome!\n\n * Homepage\n * Community\n * Youtube\n * Twitch\n * Twitter\n * Discord",normalizedContent:"project alice exists at many places for you to be updated! likes and follows very welcome!\n\n * homepage\n * community\n * youtube\n * twitch\n * twitter\n * discord",charsets:{}},{title:"Satellite setup",frontmatter:{title:"Satellite setup",sidebarDepth:3},regularPath:"/satsetup/",relativePath:"satsetup/README.md",key:"v-e860ba34",path:"/satsetup/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:'TIP\n\nYou need the AliceSatellite Skill installed and running on your main unit!\n\nBasically, to install your satellites, you just have to do exactly the same as you did for your main unit but chose Install Alice Satellite using the CLI:\n\nInstalling with the CLI\n\nOnce you have the satellite installed, it will automatically boot and try to connect to whatever main device is in "add" mode. To make your Alice main unit add a new Satellite, first make sure you have the AliceSatellite skill installed. Then, all you need to do is simply ask her to "add a new satellite"! And you are done!\n\nTIP\n\nIf the main unit times out finding the satellite, unplug it, ask Alice to add a new satellite and power up your satellite.\n\nIf everything goes fine, Alice will confirm the addition of the satellite and automatically configure it to connect to the correct Mqtt server. She will also automatically upload the hotword and wakeword resources to the new device.\n\n# Having issues with Alice? She doesn\'t hear you? Doesn\'t seem to start?\nHave a look at our Troubleshooting guide!',normalizedContent:'tip\n\nyou need the alicesatellite skill installed and running on your main unit!\n\nbasically, to install your satellites, you just have to do exactly the same as you did for your main unit but chose install alice satellite using the cli:\n\ninstalling with the cli\n\nonce you have the satellite installed, it will automatically boot and try to connect to whatever main device is in "add" mode. to make your alice main unit add a new satellite, first make sure you have the alicesatellite skill installed. then, all you need to do is simply ask her to "add a new satellite"! and you are done!\n\ntip\n\nif the main unit times out finding the satellite, unplug it, ask alice to add a new satellite and power up your satellite.\n\nif everything goes fine, alice will confirm the addition of the satellite and automatically configure it to connect to the correct mqtt server. she will also automatically upload the hotword and wakeword resources to the new device.\n\n# having issues with alice? she doesn\'t hear you? doesn\'t seem to start?\nhave a look at our troubleshooting guide!',charsets:{}},{title:"Main unit setup",frontmatter:{title:"Main unit setup",sidebarDepth:3},regularPath:"/setup/",relativePath:"setup/README.md",key:"v-5c24c47a",path:"/setup/",headers:[{level:2,title:"Which way?",slug:"which-way",normalizedTitle:"which way?",charIndex:176}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Which way?",content:"WARNING\n\nThis is a beta release! It is subject to change, and the target audience is people with some knowledge of their devices, installing python modules and basic stuff!\n\n# Which way?\nAlice can be installed in many ways, but we recommend you use the Alice-CLI way to do it\n\n * AliceCli\n\nOther ways are described in Developer installation but beware that you should know what you are doing!\n\n# Having issues with Alice? She doesn't hear you? Doesn't seem to start?\nHave a look at our Troubleshooting guide!",normalizedContent:"warning\n\nthis is a beta release! it is subject to change, and the target audience is people with some knowledge of their devices, installing python modules and basic stuff!\n\n# which way?\nalice can be installed in many ways, but we recommend you use the alice-cli way to do it\n\n * alicecli\n\nother ways are described in developer installation but beware that you should know what you are doing!\n\n# having issues with alice? she doesn't hear you? doesn't seem to start?\nhave a look at our troubleshooting guide!",charsets:{}},{title:"Install with AliceCli",frontmatter:{title:"Install with AliceCli",sidebarDepth:3,tags:["cli","command line","install","setup"]},regularPath:"/setup/alice-cli.html",relativePath:"setup/alice-cli.md",key:"v-53571db6",path:"/setup/alice-cli.html",headers:[{level:2,title:"Install the command line tool.",slug:"install-the-command-line-tool",normalizedTitle:"install the command line tool.",charIndex:331},{level:2,title:"Use the command line tool.",slug:"use-the-command-line-tool",normalizedTitle:"use the command line tool.",charIndex:778},{level:3,title:"Project Alice CLI version x.x.x",slug:"project-alice-cli-version-x-x-x",normalizedTitle:"project alice cli version x.x.x",charIndex:1681},{level:3,title:"Discover devices on network",slug:"discover-devices-on-network",normalizedTitle:"discover devices on network",charIndex:1050},{level:3,title:"Connect to a device",slug:"connect-to-a-device",normalizedTitle:"connect to a device",charIndex:1080},{level:3,title:"Prepare SD card",slug:"prepare-sd-card",normalizedTitle:"prepare sd card",charIndex:2048},{level:3,title:"Change device's password",slug:"change-device-s-password",normalizedTitle:"change device's password",charIndex:1148},{level:3,title:"Set device's name",slug:"set-device-s-name",normalizedTitle:"set device's name",charIndex:1175},{level:3,title:"Install your sound device",slug:"install-your-sound-device",normalizedTitle:"install your sound device",charIndex:1195},{level:3,title:"Sound test",slug:"sound-test",normalizedTitle:"sound test",charIndex:1223},{level:3,title:"Install Alice",slug:"install-alice",normalizedTitle:"install alice",charIndex:1236},{level:3,title:"Install Alice Satellite",slug:"install-alice-satellite",normalizedTitle:"install alice satellite",charIndex:1252},{level:3,title:"Start Alice",slug:"start-alice",normalizedTitle:"start alice",charIndex:1303},{level:3,title:"Restart Alice",slug:"restart-alice",normalizedTitle:"restart alice",charIndex:1317},{level:3,title:"Stop Alice",slug:"stop-alice",normalizedTitle:"stop alice",charIndex:1333},{level:3,title:"Enable Alice service",slug:"enable-alice-service",normalizedTitle:"enable alice service",charIndex:1346},{level:3,title:"Disable Alice service",slug:"disable-alice-service",normalizedTitle:"disable alice service",charIndex:1369},{level:3,title:"Update Alice",slug:"update-alice",normalizedTitle:"update alice",charIndex:1418},{level:3,title:"Update system",slug:"update-system",normalizedTitle:"update system",charIndex:1433},{level:3,title:"Upgrade system",slug:"upgrade-system",normalizedTitle:"upgrade system",charIndex:1449},{level:3,title:"Reboot device",slug:"reboot-device",normalizedTitle:"reboot device",charIndex:1587},{level:3,title:"Uninstall your sound device",slug:"uninstall-your-sound-device",normalizedTitle:"uninstall your sound device",charIndex:1603},{level:3,title:"Turn off Respeaker bright white leds",slug:"turn-off-respeaker-bright-white-leds",normalizedTitle:"turn off respeaker bright white leds",charIndex:1633},{level:3,title:"Enable bug report for next session",slug:"enable-bug-report-for-next-session",normalizedTitle:"enable bug report for next session",charIndex:1488},{level:3,title:"Check Alice logs",slug:"check-alice-logs",normalizedTitle:"check alice logs",charIndex:1525},{level:3,title:"Check system logs",slug:"check-system-logs",normalizedTitle:"check system logs",charIndex:1544},{level:2,title:"Cool, now what?",slug:"cool-now-what",normalizedTitle:"cool, now what?",charIndex:4537}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Install the command line tool. Use the command line tool. Project Alice CLI version x.x.x Discover devices on network Connect to a device Prepare SD card Change device's password Set device's name Install your sound device Sound test Install Alice Install Alice Satellite Start Alice Restart Alice Stop Alice Enable Alice service Disable Alice service Update Alice Update system Upgrade system Reboot device Uninstall your sound device Turn off Respeaker bright white leds Enable bug report for next session Check Alice logs Check system logs Cool, now what?",content:"# Alice cli\nAlice Command Line Interpreter is a tool designed to be run from any device, connect to Alice and let you execute actions on it. While it offers a menu, most of the options are also usable with direct commands. Use alice --help to get a list of the supported commands.\n\nWARNING\n\nYou need to run Python 3.8 at least!\n\n# Install the command line tool.\nTIP\n\nAliceCli is meant to run on a separate device not on Alice's device!!, like per example, your main computer.\n\nOn Windows, it is recommended to run it on Windows Terminal\n\nOn your main computer, install AliceCli from Pypi:\n\npip install projectalice-cli\n\nTIP\n\nWatch the output of your installation! There might be a warning if your PATH variable is not set up correctly and if you have to include it manually!\n\n# Use the command line tool.\nOnce installed, you'll have access to a new command in your terminal: alice. Open your favourite terminal and type alice and you should be presented a menu with quite a few options!\n\nProject Alice CLI version 1.2.1\n\n?\n\n------- Network -------\n❯ Discover devices on network\n  Connect to a device\n\n------- Setup -------\n  Prepare your SD card\n  Change device's password\n  Set device's name\n  Install your sound device\n  Sound test\n  Install Alice\n  Install Alice Satellite\n\n------- Service -------\n  Start Alice\n  Restart Alice\n  Stop Alice\n  Enable Alice service\n  Disable Alice service\n\n------- Updates -------\n  Update Alice\n  Update system\n  Upgrade system\n\n------- Logs -------\n  Enable bug report for next session\n  Check Alice logs\n  Check system logs\n\n------- Tools -------\n  Reboot device\n  Uninstall your sound device\n  Turn off Respeaker bright white leds\n  Exit\n\n\n# Project Alice CLI version x.x.x\nDepending on if a new version is available, this message will let you know how to update the CLI to the latest version!\n\n# Discover devices on network\nThis will search for devices on your network whose names contain either alice or raspberry.\n\n# Connect to a device\nIf you know the ip of your device, you can directly connect to it\n\n# Prepare SD card\nThis will prepare you SD card. Make sure it is plugged in your computer. It will assist you to download the latest Raspberry OS Buster image, flash your SD card and make the initial setup for your Raspberry Pi to boot correctly and connect to your Wlan.\n\n# Change device's password\nThis is important, even if you think it isn't, you should change the default raspberry password to something only you know.\n\n# Set device's name\nBy defaults, your device is named ProjectAlice. This lets you change this to whatever pleases you.\n\n# Install your sound device\nOne critical and very error-prone part is the sound device installation. We recommend you run Alice with a Respeaker, so the CLI only supports them for now, but the Alice installation process proposes more devices that she try to install for you.\n\n# Sound test\nLets you test your sound device, both mic and speaker\n\n# Install Alice\nThis will install Alice with your guidance. You'll need to answer a few questions for the first settings and the CLI will deploy Alice on the connected device.\n\n# Install Alice Satellite\nThis will install Alice Satellite with your guidance. You'll need to answer a few questions for the first settings and the CLI will deploy Alice on the connected device.\n\n# Start Alice\nOnce installed, Alice is automatically started with systemctl. If you need to start her, you can with this\n\n# Restart Alice\nRestarts Alice with systemctl\n\n# Stop Alice\nStops Alice with systemctl\n\n# Enable Alice service\nAfter installation, Alice's systemctl service is enabled by default, and she boots when your device boots. In case you disabled it, you can enable it here\n\n# Disable Alice service\nThis disables Alice's service, so she doesn't automatically start on system boot.\n\n# Update Alice\nThis updates Alice to the latest available version depending on your settings\n\n# Update system\nPerforms a sudo apt-get update\n\n# Upgrade system\nPerforms a sudo apt-get upgrade -y\n\n# Reboot device\nReboots the device\n\n# Uninstall your sound device\nUninstalls your Respeaker sound device, which you always should first if trying to reinstall it.\n\n# Turn off Respeaker bright white leds\nRespeakers have the nasty habit to have their leds turned on, white full brightness, by default avec driver install. Kill them!\n\n# Enable bug report for next session\nTurns on auto bug reporting for the next time Alice starts\n\n# Check Alice logs\nDisplays and follows Alice logs\n\n# Check system logs\nDisplays and follows system logs\n\n# Cool, now what?\nOk, unpack your SD card and plug it to your computer. Open your terminal and type alice to start the CLI. Choose Prepare your SD card and let the CLI guide you. Once it is flashed, remove your SD card, plug it in your Raspberry Pi and power it on. Let it a good minute to boot first time after flashing.\n\nYour Raspberry should have booted, and we are ready to communicate with it. No need to manually discover a device or connect, it's automatic!\n\n * Choose change device's password and set your own password.\n * As you did not manually connect, the CLI will discover the devices on your network and let you chose to which one you want to connect. Thee one you want to connect to should be called ProjectAlice.\n * Chose Set device's name. Why? Because it is now called ProjectAlice, as stated in the last point. What if you install satellite? You won't be able to distinguish which is who. So to avoid any risks, just rename it to ProjectAliceMainUnit\n * If you use a Respeaker * Choose Install your sound device and follow the CLI's instructions\n    * Choose Sound test to make sure it installed correctly * If not, report on our discord server\n      \n      \n   \n   \n * Choose Install Alice for your main unit or Install Alice Satellite for satellites. * If Alice is already installed the CLI will ask you if you want to reinstall\n    * Otherwise, follow the instructions given by the CLI.\n   \n   \n * Once done, open Check Alice logs and check her logs. She does a lot on her first start, like downloading missing parts, updating, training, installing skills etc. It takes time. She will, on herself, encounter a few errors and restart maybe 2/3 times to fix those. If the logs, after a while, continuously state restarting alice, we have a problem, and you should report to our Discord server\n * If the logs say Start in xxx seeconds then we are good to go, and she should already greet you with some instructions about the admin user!\n * Enjoy!",normalizedContent:"# alice cli\nalice command line interpreter is a tool designed to be run from any device, connect to alice and let you execute actions on it. while it offers a menu, most of the options are also usable with direct commands. use alice --help to get a list of the supported commands.\n\nwarning\n\nyou need to run python 3.8 at least!\n\n# install the command line tool.\ntip\n\nalicecli is meant to run on a separate device not on alice's device!!, like per example, your main computer.\n\non windows, it is recommended to run it on windows terminal\n\non your main computer, install alicecli from pypi:\n\npip install projectalice-cli\n\ntip\n\nwatch the output of your installation! there might be a warning if your path variable is not set up correctly and if you have to include it manually!\n\n# use the command line tool.\nonce installed, you'll have access to a new command in your terminal: alice. open your favourite terminal and type alice and you should be presented a menu with quite a few options!\n\nproject alice cli version 1.2.1\n\n?\n\n------- network -------\n❯ discover devices on network\n  connect to a device\n\n------- setup -------\n  prepare your sd card\n  change device's password\n  set device's name\n  install your sound device\n  sound test\n  install alice\n  install alice satellite\n\n------- service -------\n  start alice\n  restart alice\n  stop alice\n  enable alice service\n  disable alice service\n\n------- updates -------\n  update alice\n  update system\n  upgrade system\n\n------- logs -------\n  enable bug report for next session\n  check alice logs\n  check system logs\n\n------- tools -------\n  reboot device\n  uninstall your sound device\n  turn off respeaker bright white leds\n  exit\n\n\n# project alice cli version x.x.x\ndepending on if a new version is available, this message will let you know how to update the cli to the latest version!\n\n# discover devices on network\nthis will search for devices on your network whose names contain either alice or raspberry.\n\n# connect to a device\nif you know the ip of your device, you can directly connect to it\n\n# prepare sd card\nthis will prepare you sd card. make sure it is plugged in your computer. it will assist you to download the latest raspberry os buster image, flash your sd card and make the initial setup for your raspberry pi to boot correctly and connect to your wlan.\n\n# change device's password\nthis is important, even if you think it isn't, you should change the default raspberry password to something only you know.\n\n# set device's name\nby defaults, your device is named projectalice. this lets you change this to whatever pleases you.\n\n# install your sound device\none critical and very error-prone part is the sound device installation. we recommend you run alice with a respeaker, so the cli only supports them for now, but the alice installation process proposes more devices that she try to install for you.\n\n# sound test\nlets you test your sound device, both mic and speaker\n\n# install alice\nthis will install alice with your guidance. you'll need to answer a few questions for the first settings and the cli will deploy alice on the connected device.\n\n# install alice satellite\nthis will install alice satellite with your guidance. you'll need to answer a few questions for the first settings and the cli will deploy alice on the connected device.\n\n# start alice\nonce installed, alice is automatically started with systemctl. if you need to start her, you can with this\n\n# restart alice\nrestarts alice with systemctl\n\n# stop alice\nstops alice with systemctl\n\n# enable alice service\nafter installation, alice's systemctl service is enabled by default, and she boots when your device boots. in case you disabled it, you can enable it here\n\n# disable alice service\nthis disables alice's service, so she doesn't automatically start on system boot.\n\n# update alice\nthis updates alice to the latest available version depending on your settings\n\n# update system\nperforms a sudo apt-get update\n\n# upgrade system\nperforms a sudo apt-get upgrade -y\n\n# reboot device\nreboots the device\n\n# uninstall your sound device\nuninstalls your respeaker sound device, which you always should first if trying to reinstall it.\n\n# turn off respeaker bright white leds\nrespeakers have the nasty habit to have their leds turned on, white full brightness, by default avec driver install. kill them!\n\n# enable bug report for next session\nturns on auto bug reporting for the next time alice starts\n\n# check alice logs\ndisplays and follows alice logs\n\n# check system logs\ndisplays and follows system logs\n\n# cool, now what?\nok, unpack your sd card and plug it to your computer. open your terminal and type alice to start the cli. choose prepare your sd card and let the cli guide you. once it is flashed, remove your sd card, plug it in your raspberry pi and power it on. let it a good minute to boot first time after flashing.\n\nyour raspberry should have booted, and we are ready to communicate with it. no need to manually discover a device or connect, it's automatic!\n\n * choose change device's password and set your own password.\n * as you did not manually connect, the cli will discover the devices on your network and let you chose to which one you want to connect. thee one you want to connect to should be called projectalice.\n * chose set device's name. why? because it is now called projectalice, as stated in the last point. what if you install satellite? you won't be able to distinguish which is who. so to avoid any risks, just rename it to projectalicemainunit\n * if you use a respeaker * choose install your sound device and follow the cli's instructions\n    * choose sound test to make sure it installed correctly * if not, report on our discord server\n      \n      \n   \n   \n * choose install alice for your main unit or install alice satellite for satellites. * if alice is already installed the cli will ask you if you want to reinstall\n    * otherwise, follow the instructions given by the cli.\n   \n   \n * once done, open check alice logs and check her logs. she does a lot on her first start, like downloading missing parts, updating, training, installing skills etc. it takes time. she will, on herself, encounter a few errors and restart maybe 2/3 times to fix those. if the logs, after a while, continuously state restarting alice, we have a problem, and you should report to our discord server\n * if the logs say start in xxx seeconds then we are good to go, and she should already greet you with some instructions about the admin user!\n * enjoy!",charsets:{}},{title:"Developer installation",frontmatter:{title:"Developer installation",sidebarDepth:3,tags:["advanced setup","developer","not for noobs"]},regularPath:"/setup/developer-install.html",relativePath:"setup/developer-install.md",key:"v-6d308145",path:"/setup/developer-install.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"# Warning\nThese technics to install Alice all work, but require knowledge and sometimes programming skills. We only officially support the Alice-CLI installation process, but we also provide information about other ways to get you running!\n\n * Manual install\n * Image install\n * Docker install",normalizedContent:"# warning\nthese technics to install alice all work, but require knowledge and sometimes programming skills. we only officially support the alice-cli installation process, but we also provide information about other ways to get you running!\n\n * manual install\n * image install\n * docker install",charsets:{}},{title:"Docker",frontmatter:{title:"Docker",sidebarDepth:3},regularPath:"/setup/docker.html",relativePath:"setup/docker.md",key:"v-6fa52ccd",path:"/setup/docker.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Thanks to the work of our community members, other way to install on more and more architecture and hardware emerge.\n\nThis is not maintained by us, but provides a Docker image for you to install Alice!\n\nhttps://github.com/poulsp/docker-Alice-Linux-x86",normalizedContent:"thanks to the work of our community members, other way to install on more and more architecture and hardware emerge.\n\nthis is not maintained by us, but provides a docker image for you to install alice!\n\nhttps://github.com/poulsp/docker-alice-linux-x86",charsets:{}},{title:"Install with our pre-made image",frontmatter:{title:"Install with our pre-made image",sidebarDepth:3,tags:["image","prefabricated","install","setup"]},regularPath:"/setup/image-install.html",relativePath:"setup/image-install.md",key:"v-d9d86b36",path:"/setup/image-install.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"WARNING\n\nThe last image we created for now is Beta 2! Did you check the alice CLI install for an updated Alice? We will resume image creation when version 1 is released.\n\n * Download our prefabricated Raspbian image: * Direct download\n    * This image has nothing more than Project Alice and a few dependencies.\n    * If you wonder what's inside, check the Preinstalled Packages Section\n   \n   \n * Extract the image from the 7zip archive\n\nTIP\n\nUse 7zip, it's open source, fast, has one of the best compression ratio and comes with nice features\n\n * Flash the image to your SD card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * Edit the /boot/ProjectAlice.yaml file. If there's no ProjectAlice.yaml file on the /boot partition, grab the latest from sources: ProjectAlice.yaml\n * Configure it according to your information and needs. All configurations have a little explanation, but most should be self-explanatory.\n * Make sure to have a space after the colons: * Wrong: forceRewrite:yes\n    * Correct: forceRewrite: yes\n   \n   \n * If the option value contains any special characters, enclose the whole value with double quotes: * Wrong: mqttPassword: a:%qJi\n    * Correct: mqttPassword: \"a:%qJi\"\n   \n   \n * Save it, unplug your SD card, plug it into your raspberry pi and power it up.\n * Alice should boot by herself and connect to your Wi-Fi, update, configure and start. This may take a while, so do not unplug until she has spoken to you!\n * If you have enabled the interface (by default), you can check what's going on by browsing to http://x.x.x.x:5000, replace with the Project Alice device's IP address.\n * The SSH User is pi, and the password is umbrella",normalizedContent:"warning\n\nthe last image we created for now is beta 2! did you check the alice cli install for an updated alice? we will resume image creation when version 1 is released.\n\n * download our prefabricated raspbian image: * direct download\n    * this image has nothing more than project alice and a few dependencies.\n    * if you wonder what's inside, check the preinstalled packages section\n   \n   \n * extract the image from the 7zip archive\n\ntip\n\nuse 7zip, it's open source, fast, has one of the best compression ratio and comes with nice features\n\n * flash the image to your sd card\n * do not place any wpa_supplicant.conf or ssh file in /boot\n * do not boot your raspberry before doing this next point!!\n * edit the /boot/projectalice.yaml file. if there's no projectalice.yaml file on the /boot partition, grab the latest from sources: projectalice.yaml\n * configure it according to your information and needs. all configurations have a little explanation, but most should be self-explanatory.\n * make sure to have a space after the colons: * wrong: forcerewrite:yes\n    * correct: forcerewrite: yes\n   \n   \n * if the option value contains any special characters, enclose the whole value with double quotes: * wrong: mqttpassword: a:%qji\n    * correct: mqttpassword: \"a:%qji\"\n   \n   \n * save it, unplug your sd card, plug it into your raspberry pi and power it up.\n * alice should boot by herself and connect to your wi-fi, update, configure and start. this may take a while, so do not unplug until she has spoken to you!\n * if you have enabled the interface (by default), you can check what's going on by browsing to http://x.x.x.x:5000, replace with the project alice device's ip address.\n * the ssh user is pi, and the password is umbrella",charsets:{}},{title:"Main unit manual setup",frontmatter:{title:"Main unit manual setup",sidebarDepth:3,tags:["install","setup","main unit"]},regularPath:"/setup/manual-install.html",relativePath:"setup/manual-install.md",key:"v-61d60636",path:"/setup/manual-install.html",headers:[{level:2,title:"Install Rasppberry Pi OS",slug:"install-rasppberry-pi-os",normalizedTitle:"install rasppberry pi os",charIndex:337},{level:2,title:"Configure your PI",slug:"configure-your-pi",normalizedTitle:"configure your pi",charIndex:1764},{level:2,title:"Install Dependencies",slug:"install-dependencies",normalizedTitle:"install dependencies",charIndex:2312},{level:2,title:"Install Git and clone Alice",slug:"install-git-and-clone-alice",normalizedTitle:"install git and clone alice",charIndex:2785},{level:2,title:"Start Alice",slug:"start-alice",normalizedTitle:"start alice",charIndex:3033}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Install Rasppberry Pi OS Configure your PI Install Dependencies Install Git and clone Alice Start Alice",content:"As of october 2020, manually installing is the prefered way, new versions coming out very fast, it's very consuming to create a new image everytime we update the sources. It's only a few simple steps from a running Rasppberry Pi OS to a running Alice. I guess I should also cover the Rasppberry Pi OS installation, just to be sure...\n\n# Install Rasppberry Pi OS\n * Download Rasppberry Pi OS, for now only Buster 32bit is supported. Lite version is recommended\n * Insert your 8 gig SD card into your computer and burn the Raspberry Pi OS image onto it * What means burn the image? Get rid of those matches, and have a look here\n   \n   \n * When your SD is flashed, unplug it and replug it, your computer should detect, among others, a new partition called boot\n * With your favorite text editor, create a new file on that partition. It is important, on Windows, that you do not right-click and create a new text file! Open your text editor (hint: notepad++) and do save it. Name the file ssh, without any extension. For Windows users, select all types instead of the default selected Normal text file (.txt)\n * Once saved, keep your ssh file open, and paste the following content into itcountry=CH\n   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n   update_config=1\n   \n   network={\n       ssid=\"\"\n       scan_ssid=1\n       psk=\"\"\n       key_mgmt=WPA-PSK\n   }\n   \n   \n   \n * Of course, take care to change the country code to match yours as well as add your WLAN ssid and password\n * Now, don't save, but choose Save under and save that file in the boot partition as well, but name it wpa_supplicant.conf, still as all types for Windows users.\n * Good, now unplug your SD card, plug it into your raspberry pi and power it. Let it a few seconds to boot.\n\n# Configure your PI\n * Connect to your pi through ssh from your terminal\n * By default, the user is pi, and the password is raspberry\n * Update your system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * Open the configuration tool * sudo raspi-config\n   \n   \n * In System Options * Change your password\n    * Set the hostname to ProjectAlice\n    * Set the Boot / Auto Login to Console Autologin\n   \n   \n * In Interface Options * Enable SPI\n    * Enable I2C\n   \n   \n * In Advanced options * Expand Filesystem\n   \n   \n * Reboot\n\n# Install Dependencies\nTo avoid installation errors, please ensure libssl-dev is installed on your system before commencing the build process.\n\nTo do this, run the following command:\n\n * sudo apt-get install libssl-dev -y\n\nYou may also require the rust compiler to build certain packages that depend on rust during the installation process (such as cryptography).\n\nAs a precaution, this can be installed with the following command:\n\n * curl https://sh.rustup.rs -sSf | sh\n\n# Install Git and clone Alice\n * We need a few things to get Alice up now\n * Install git using the command sudo apt-get install git -y\n * Clone Alice:\n\ncd\ngit clone --recurse-submodules https://github.com/project-alice-assistant/ProjectAlice.git\n\n\n# Start Alice\n * Copy the basic configuration on their place for first boot: sudo cp ~/ProjectAlice/ProjectAlice.yaml /boot/ProjectAlice.yaml\n * We need to configure a few things for her to start nicely: sudo nano /boot/ProjectAlice.yaml\n * Set that file parameters to your liking and setup.\n * You know what? We're done! Let's start her up!\n\ncd ~/ProjectAlice\npython3 main.py\n\n\n * This will start her, do some reboots and stuff. Once she loads, she'll start her own service, and you won't see any output on the console anymore. If you want to follow what's going on after she rebooted, type tail -f /var/log/syslog, and you will see what she's doing.\n * Once you hear a ding, she's up!\n * No ding? => Have a look at our Troubleshooting guide!",normalizedContent:"as of october 2020, manually installing is the prefered way, new versions coming out very fast, it's very consuming to create a new image everytime we update the sources. it's only a few simple steps from a running rasppberry pi os to a running alice. i guess i should also cover the rasppberry pi os installation, just to be sure...\n\n# install rasppberry pi os\n * download rasppberry pi os, for now only buster 32bit is supported. lite version is recommended\n * insert your 8 gig sd card into your computer and burn the raspberry pi os image onto it * what means burn the image? get rid of those matches, and have a look here\n   \n   \n * when your sd is flashed, unplug it and replug it, your computer should detect, among others, a new partition called boot\n * with your favorite text editor, create a new file on that partition. it is important, on windows, that you do not right-click and create a new text file! open your text editor (hint: notepad++) and do save it. name the file ssh, without any extension. for windows users, select all types instead of the default selected normal text file (.txt)\n * once saved, keep your ssh file open, and paste the following content into itcountry=ch\n   ctrl_interface=dir=/var/run/wpa_supplicant group=netdev\n   update_config=1\n   \n   network={\n       ssid=\"\"\n       scan_ssid=1\n       psk=\"\"\n       key_mgmt=wpa-psk\n   }\n   \n   \n   \n * of course, take care to change the country code to match yours as well as add your wlan ssid and password\n * now, don't save, but choose save under and save that file in the boot partition as well, but name it wpa_supplicant.conf, still as all types for windows users.\n * good, now unplug your sd card, plug it into your raspberry pi and power it. let it a few seconds to boot.\n\n# configure your pi\n * connect to your pi through ssh from your terminal\n * by default, the user is pi, and the password is raspberry\n * update your system * sudo apt-get update\n    * sudo apt-get dist-upgrade -y\n   \n   \n * open the configuration tool * sudo raspi-config\n   \n   \n * in system options * change your password\n    * set the hostname to projectalice\n    * set the boot / auto login to console autologin\n   \n   \n * in interface options * enable spi\n    * enable i2c\n   \n   \n * in advanced options * expand filesystem\n   \n   \n * reboot\n\n# install dependencies\nto avoid installation errors, please ensure libssl-dev is installed on your system before commencing the build process.\n\nto do this, run the following command:\n\n * sudo apt-get install libssl-dev -y\n\nyou may also require the rust compiler to build certain packages that depend on rust during the installation process (such as cryptography).\n\nas a precaution, this can be installed with the following command:\n\n * curl https://sh.rustup.rs -ssf | sh\n\n# install git and clone alice\n * we need a few things to get alice up now\n * install git using the command sudo apt-get install git -y\n * clone alice:\n\ncd\ngit clone --recurse-submodules https://github.com/project-alice-assistant/projectalice.git\n\n\n# start alice\n * copy the basic configuration on their place for first boot: sudo cp ~/projectalice/projectalice.yaml /boot/projectalice.yaml\n * we need to configure a few things for her to start nicely: sudo nano /boot/projectalice.yaml\n * set that file parameters to your liking and setup.\n * you know what? we're done! let's start her up!\n\ncd ~/projectalice\npython3 main.py\n\n\n * this will start her, do some reboots and stuff. once she loads, she'll start her own service, and you won't see any output on the console anymore. if you want to follow what's going on after she rebooted, type tail -f /var/log/syslog, and you will see what she's doing.\n * once you hear a ding, she's up!\n * no ding? => have a look at our troubleshooting guide!",charsets:{cjk:!0}},{title:"Preinstalled",frontmatter:{title:"Preinstalled",sidebarDepth:3},regularPath:"/setup/preinstalled.html",relativePath:"setup/preinstalled.md",key:"v-7851e59f",path:"/setup/preinstalled.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Since beta 1, we do not preinstall all the dependencies anymore except for a few critical ones:\n\n * Python3 PIP\n * psutil\n * PyYAML\n * toml\n\nIf you are looking for the actual dependencies, once installed, have a look here:\n\n * System\n * Python",normalizedContent:"since beta 1, we do not preinstall all the dependencies anymore except for a few critical ones:\n\n * python3 pip\n * psutil\n * pyyaml\n * toml\n\nif you are looking for the actual dependencies, once installed, have a look here:\n\n * system\n * python",charsets:{}},{title:"Requirements",frontmatter:{title:"Requirements",sidebarDepth:3},regularPath:"/setup/requirements.html",relativePath:"setup/requirements.md",key:"v-2a8104ed",path:"/setup/requirements.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"We've successfully run Project Alice on raspberry Pi 3b, 3b+, 3a+ and all variants of 4b\n\nOther than that you will need a microphone and a speaker if you intend to have the main unit also act as an assistant. Users that want to have the main unit on a hidden device and only use satellites can unplug the mic and speaker after first boot.",normalizedContent:"we've successfully run project alice on raspberry pi 3b, 3b+, 3a+ and all variants of 4b\n\nother than that you will need a microphone and a speaker if you intend to have the main unit also act as an assistant. users that want to have the main unit on a hidden device and only use satellites can unplug the mic and speaker after first boot.",charsets:{}},{title:"Room configuration",frontmatter:{title:"Room configuration",sidebarDepth:3},regularPath:"/setup/room-configuration.html",relativePath:"setup/room-configuration.md",key:"v-02cf5705",path:"/setup/room-configuration.html",headers:[{level:2,title:"Editing your home",slug:"editing-your-home",normalizedTitle:"editing your home",charIndex:878},{level:3,title:"Setup and configuration of your locations",slug:"setup-and-configuration-of-your-locations",normalizedTitle:"setup and configuration of your locations",charIndex:1486},{level:3,title:"Setup and configuration of devices",slug:"setup-and-configuration-of-devices",normalizedTitle:"setup and configuration of devices",charIndex:5816}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Editing your home Setup and configuration of your locations Setup and configuration of devices",content:'WARNING\n\nThis is a beta version....\n\n# MyHome\nOnce you want to get the most out of Alice, and her skills, you will have to set up your house with all its different rooms and devices. Remember, Alice won\'t share your information, your rooms and devices are safe with her and will never leave your local network! All the configuration can be done with the web interface "My Home".\n\nInitially this screen will only have one Room "The Hive", and one device "Alice". This is where Alice lives. It might be a bit empty at the moment, but we will address this shortly. With many of the available skills, comes new device types to fill your home. For now, we will focus on creating more rooms and build your home.\n\nTIP\n\nDid you know that you can click on most devices and execute one main action? Try clicking the Alice umbrella - it will stop and start Alice from listening to you!\n\n# Editing your home\nLike everywhere in the interface, you can find your tools on the top right of the screen. Click on the pencil to enter the editing mode! The first toolbar groups the tools for the different categories and offers general actions. From left to right you currently will find:\n\n * The close button, which re closes this menu.\n * A curtain icon, which puts your My home screen into theatre mode, similar to fullscreen mode\n * A map icon, which holds all the tools for adding and configuring locations in your home.\n * A plug icon, which holds all the tools for adding and configuring devices\n\n# Setup and configuration of your locations\nFirst you have to set up your , then you can add more devices. Locations can be rooms or areas, they can be stacked, and linked to other locations. When you click the map icon in the toolbar, you will get the following options:\n\n * A plus sign: This is where you add new locations or remove old ones\n * A trash can: For removing existing rooms\n * A Gear Icon: For changing room settings such as add synonyms or raising and lowering the order of the locations\n * Paint roller: Allows you to color the floor with different selection of coverings\n * A hard hat: Here you can add, move and delete walls, windows, stairs and doors\n * The couch for adding, moving and deleting furniture and decorations\n\nTIP\n\nClicking just the map icon then clicking the location on the grid, will allow you to move and resize your locations Also clicking the existing name on the grid will allow you to change the location name\n\n# Add a location\nFirst we have to add a location.\n\n * Click the plus sign in the location editing toolbar.\n * Now you can click anywhere on the empty space of the map in front of you. When you\'ve clicked the grid, a popup will open and ask you for the name of the newly created location.\n * When you confirm the popup, you can then click into the grid and drag the cursor to create the sized room you\'re after.\n\nWhilst the location is highlighted you can move it around by dragging it, resize it by dragging the corners. Note that if you drag the rom close to another it will snap into place.\n\nI would suggest you add a few more rooms from your home by repeating these steps - then adding in the other features is more fun, than it is for a single room!\n\nTIP\n\nIf you want to get rid of "The Hive" you first have to move the Alice main device to a different room!\n\n# Stylize your rooms (OPTIONAL)\nNow that we have created a few rooms, it is time to make them more colorful. First lets paint the floor:\n\n * Click on the paint roller in the location editing toolbar\n * A slide out window should appear where a lot of different floor types can be chosen from\n * Click one of them!\n * Now click on one of your rooms and that floor covering will be placed on that floor.\n\nGreat !! You now have your first floor painted.\n\nRepeat the above steps for the other rooms, before we head over to the walls:\n\n * Now click on the hard hat icon in the location editing toolbar\n * Like above, you should see another slide out window appear. In here you can select a wall type\n * Click on one of your rooms, and you will find a newly placed wall\n * Resize and move the wall around to add divisions between your rooms. Keep empty spaces for doors and windows!\n\nTIP\n\nto move and resize the walls make sure your still in the build menu (EG: The hard hat icon is still yellow)\n\nOnce you have all the walls placed, we will move on to adding in other building features\n\nFinally, when all your rooms are created, you can add in some static decorations:\n\n * Click on the couch icon in the toolbar\n * Select your decoration from the slide out window\n * Add, move and resize them just like everything else\n\nTIP\n\nChanges you make get saved auto magically !\n\nThat\'s it, now your home should look a lot nicer than before! Time to add in some functionality!\n\n# Configure your locations\nWhen you click on the settings icon, (the gears) in the location toolbar, you\'ll then be able to hover over a room and click that locations settings icon to configure it.\n\nFor now, you only have 2 options that will pop up over the room as soon as you hover over it.\n\n * Firstly:, is another gear/settings icon, click that to add or remove a synonym for that room. Synonyms will be usable for voice input just like the main name of the room. That way you can "play music in the office" or "play music in my workspace" and alice will know it is the same.\n   \n   \n * Secondly: You have up and down arrows when you hover a room. These will raise or lower the room on the map.\n   \n   \n\nExample of this is:\n\nYou create an outdoor space the entire size of your property. Now lower that by clicking the arrow, so it goes under all the other locations. Your outside area should now surround the house without covering all the rooms up.\n\nNow that you are done with the creation of the home, let\'s get started with adding in some life!\n\n# Setup and configuration of devices\nYou already saw your first device when you opened My Home for the first time. The small umbrella is your main device. When you click it, you will toggle the wakeword and microphone detection on and off. (as indicated by smaller red icons when you click the umbrella)\n\nThe menu for devices is much like the menu for locations. When you click on the plug icon in the toolbar, you will get the following options:\n\n * The plus sign again is for adding new devices and deleting old ones.\n * The trash can for removing a device\n * The settings tool is for changing the settings of a device such as name and heartbeat rate (if device allows it)\n * The chain link is for connecting one device to other locations.\n * The broken chain link. This is used to remove an existing link\n\n# Adding a device\nYou can add in a new device by clicking the plus icon in the devices tool bar. In the window that appears you can choose the device type from the dropdown menu in that window\n\nTIP\n\nAre there currently no device types shown? Is there nothing to click in that dropdown? Make sure to install a few that provide device types!\n\nSome skills that provide new device types to add in are:\n\n * AliceSatellite: Required to create satellites. Clicking a satellite will toggle the hotword and the icon shows its current state\n * Tasmota: Switches, Thermometers, Sensors\n * RandomIpDevice: Every device that has an IP address, or even websites you want to check or visit. The icon shows if the device is reachable and a click will open the supplied link.\n * HomeAssistant: Bring your HomeAssistant devices over to Alice. Although you can\'t add the devices manually, the will import your devices, and you can arrange them in your map! Outside MyHome a lot more functions await in this !\n * Vacuum: Add and control your Vacuum. Link it to the rooms it is responsible for and setup everything that is required. (Currently only for Roborock 😦 )\n\nBy adding a device, you only create an empty dummy for now - to give it life, you have to configure it. Before we do so, let\'s link it to all the related locations.\n\n# Creating device links to locations\nWhen you enter the device linking mode by clicking the chainLink, you can link one device to as many locations as you like - (or as many as the device allows).\n\nTIP\n\nWhy would you want to you ask ?\n\nWell in some situations such as the use of your robo vacuum or satellite devices, temperature gauges etc, the actual device as far as Alice initially knows could be situated in your "kitchen". However, the room itself is open and therefore the kitchen also incorporates the "dining room". By linking the "kitchen" satellite to the "dining room". you are able to ask Alice to "Play some random music in the kitchen" or in the "dining room" and she will know exactly where to play it\n\nSo with the chain link clicked,\n\n 1. Click the device you want to link from. A blue arrow will appear...\n 2. Now click somewhere on the new location you want to link to, or several locations if desired.\n 3. You should see a confirmation message appear and also see a dotted line to the location showing the link is active\n 4. Click the chain link again to turn that mode off (NOTE: you need to also turn the chain link off and back on again before you can select another device to link)\n\nYou can see all existing links by the connection lines.\n\nOk, so now we got devices, and links to rooms - but so far nothing is configured or more than decoration!\n\nTo unlink is basically the same process, but you use the broken link icon and a red arrow will appear.\n\n# Configure devices.\nBy clicking the settings Icon... In here you can change the device name and if the device is able to, you can adjust your device heartbeat to Alice.\n\nEvery device needs a name. This name can be used by to address specific devices (e.g. "turn off the spotlight"). So go ahead and name your device from this settings screen.\n\nTIP\n\nMake it a friendly name, like pool light or coffee machine. Having a name like gpio12 just ain\'t going to do anyone any favors.\n\nCurrently, your device is unlikely to be paired to Alice. So jump out of the device menu by clicking the close button to hide the menu Now click your device and if it\'s not paired then Alice will broadcast out to the network looking for a response from your new device. Once she finds it she will assign it a unique number and, complete installation and listen for a heartbeat from your device. This tells Alice it\'s connected and allows Alice to determine states and values of what ever the device is broadcasting.\n\nLet\'s take a look at the satellite provided by AliceSatellite: It has only a big "Find Device" button, nothing more. Clicking that button is basically just like telling AlicePlease add a new alice satellite in the living roomShe will start broadcasting for the new device and trigger the installation. When the installation is successful, the "Find Device" button will not be shown anymore.\n\nLet\'s take a look at another device type: Roborock by the skill Vacuum: Just like the satellite, there is a "Find Device" button on the top, but clicking it now, will just give you an error message, because you don\'t have supplied all the required information first! To do that, look below the big button. You will find a field for the ip and the token. Only after supplying them, Alice can try to connect to the vacuum. Switching the input field should save automatically in these settings - to be sure, pressing enter will save as well! But that is not all you can do in the settings for the vacuum. Below the required information for the device, you see a listing of all linked rooms. In case of the Roborock, you need one room id for each room your vacuum discovered, to be able to start the cleaning in that specific area. This is the place where you can save them for Alice.\n\n# My Home extra\'s\n 1. If a device is "offline" it will show by having a broken heart above its icon.\n 2. The compass - The arrow points to the centre of your map. Clicking that arrow in the centre of the compass will zoom your map to the centre of your screen.\n 3. Once a new device is added, click that device for it to "pair" to Alice, so she recognises it in the future. You should see a pairing message when this occurs.\n\nNote: With some skills like HomeAssistant, there is no pairing needed. It\'s done automatically',normalizedContent:'warning\n\nthis is a beta version....\n\n# myhome\nonce you want to get the most out of alice, and her skills, you will have to set up your house with all its different rooms and devices. remember, alice won\'t share your information, your rooms and devices are safe with her and will never leave your local network! all the configuration can be done with the web interface "my home".\n\ninitially this screen will only have one room "the hive", and one device "alice". this is where alice lives. it might be a bit empty at the moment, but we will address this shortly. with many of the available skills, comes new device types to fill your home. for now, we will focus on creating more rooms and build your home.\n\ntip\n\ndid you know that you can click on most devices and execute one main action? try clicking the alice umbrella - it will stop and start alice from listening to you!\n\n# editing your home\nlike everywhere in the interface, you can find your tools on the top right of the screen. click on the pencil to enter the editing mode! the first toolbar groups the tools for the different categories and offers general actions. from left to right you currently will find:\n\n * the close button, which re closes this menu.\n * a curtain icon, which puts your my home screen into theatre mode, similar to fullscreen mode\n * a map icon, which holds all the tools for adding and configuring locations in your home.\n * a plug icon, which holds all the tools for adding and configuring devices\n\n# setup and configuration of your locations\nfirst you have to set up your , then you can add more devices. locations can be rooms or areas, they can be stacked, and linked to other locations. when you click the map icon in the toolbar, you will get the following options:\n\n * a plus sign: this is where you add new locations or remove old ones\n * a trash can: for removing existing rooms\n * a gear icon: for changing room settings such as add synonyms or raising and lowering the order of the locations\n * paint roller: allows you to color the floor with different selection of coverings\n * a hard hat: here you can add, move and delete walls, windows, stairs and doors\n * the couch for adding, moving and deleting furniture and decorations\n\ntip\n\nclicking just the map icon then clicking the location on the grid, will allow you to move and resize your locations also clicking the existing name on the grid will allow you to change the location name\n\n# add a location\nfirst we have to add a location.\n\n * click the plus sign in the location editing toolbar.\n * now you can click anywhere on the empty space of the map in front of you. when you\'ve clicked the grid, a popup will open and ask you for the name of the newly created location.\n * when you confirm the popup, you can then click into the grid and drag the cursor to create the sized room you\'re after.\n\nwhilst the location is highlighted you can move it around by dragging it, resize it by dragging the corners. note that if you drag the rom close to another it will snap into place.\n\ni would suggest you add a few more rooms from your home by repeating these steps - then adding in the other features is more fun, than it is for a single room!\n\ntip\n\nif you want to get rid of "the hive" you first have to move the alice main device to a different room!\n\n# stylize your rooms (optional)\nnow that we have created a few rooms, it is time to make them more colorful. first lets paint the floor:\n\n * click on the paint roller in the location editing toolbar\n * a slide out window should appear where a lot of different floor types can be chosen from\n * click one of them!\n * now click on one of your rooms and that floor covering will be placed on that floor.\n\ngreat !! you now have your first floor painted.\n\nrepeat the above steps for the other rooms, before we head over to the walls:\n\n * now click on the hard hat icon in the location editing toolbar\n * like above, you should see another slide out window appear. in here you can select a wall type\n * click on one of your rooms, and you will find a newly placed wall\n * resize and move the wall around to add divisions between your rooms. keep empty spaces for doors and windows!\n\ntip\n\nto move and resize the walls make sure your still in the build menu (eg: the hard hat icon is still yellow)\n\nonce you have all the walls placed, we will move on to adding in other building features\n\nfinally, when all your rooms are created, you can add in some static decorations:\n\n * click on the couch icon in the toolbar\n * select your decoration from the slide out window\n * add, move and resize them just like everything else\n\ntip\n\nchanges you make get saved auto magically !\n\nthat\'s it, now your home should look a lot nicer than before! time to add in some functionality!\n\n# configure your locations\nwhen you click on the settings icon, (the gears) in the location toolbar, you\'ll then be able to hover over a room and click that locations settings icon to configure it.\n\nfor now, you only have 2 options that will pop up over the room as soon as you hover over it.\n\n * firstly:, is another gear/settings icon, click that to add or remove a synonym for that room. synonyms will be usable for voice input just like the main name of the room. that way you can "play music in the office" or "play music in my workspace" and alice will know it is the same.\n   \n   \n * secondly: you have up and down arrows when you hover a room. these will raise or lower the room on the map.\n   \n   \n\nexample of this is:\n\nyou create an outdoor space the entire size of your property. now lower that by clicking the arrow, so it goes under all the other locations. your outside area should now surround the house without covering all the rooms up.\n\nnow that you are done with the creation of the home, let\'s get started with adding in some life!\n\n# setup and configuration of devices\nyou already saw your first device when you opened my home for the first time. the small umbrella is your main device. when you click it, you will toggle the wakeword and microphone detection on and off. (as indicated by smaller red icons when you click the umbrella)\n\nthe menu for devices is much like the menu for locations. when you click on the plug icon in the toolbar, you will get the following options:\n\n * the plus sign again is for adding new devices and deleting old ones.\n * the trash can for removing a device\n * the settings tool is for changing the settings of a device such as name and heartbeat rate (if device allows it)\n * the chain link is for connecting one device to other locations.\n * the broken chain link. this is used to remove an existing link\n\n# adding a device\nyou can add in a new device by clicking the plus icon in the devices tool bar. in the window that appears you can choose the device type from the dropdown menu in that window\n\ntip\n\nare there currently no device types shown? is there nothing to click in that dropdown? make sure to install a few that provide device types!\n\nsome skills that provide new device types to add in are:\n\n * alicesatellite: required to create satellites. clicking a satellite will toggle the hotword and the icon shows its current state\n * tasmota: switches, thermometers, sensors\n * randomipdevice: every device that has an ip address, or even websites you want to check or visit. the icon shows if the device is reachable and a click will open the supplied link.\n * homeassistant: bring your homeassistant devices over to alice. although you can\'t add the devices manually, the will import your devices, and you can arrange them in your map! outside myhome a lot more functions await in this !\n * vacuum: add and control your vacuum. link it to the rooms it is responsible for and setup everything that is required. (currently only for roborock 😦 )\n\nby adding a device, you only create an empty dummy for now - to give it life, you have to configure it. before we do so, let\'s link it to all the related locations.\n\n# creating device links to locations\nwhen you enter the device linking mode by clicking the chainlink, you can link one device to as many locations as you like - (or as many as the device allows).\n\ntip\n\nwhy would you want to you ask ?\n\nwell in some situations such as the use of your robo vacuum or satellite devices, temperature gauges etc, the actual device as far as alice initially knows could be situated in your "kitchen". however, the room itself is open and therefore the kitchen also incorporates the "dining room". by linking the "kitchen" satellite to the "dining room". you are able to ask alice to "play some random music in the kitchen" or in the "dining room" and she will know exactly where to play it\n\nso with the chain link clicked,\n\n 1. click the device you want to link from. a blue arrow will appear...\n 2. now click somewhere on the new location you want to link to, or several locations if desired.\n 3. you should see a confirmation message appear and also see a dotted line to the location showing the link is active\n 4. click the chain link again to turn that mode off (note: you need to also turn the chain link off and back on again before you can select another device to link)\n\nyou can see all existing links by the connection lines.\n\nok, so now we got devices, and links to rooms - but so far nothing is configured or more than decoration!\n\nto unlink is basically the same process, but you use the broken link icon and a red arrow will appear.\n\n# configure devices.\nby clicking the settings icon... in here you can change the device name and if the device is able to, you can adjust your device heartbeat to alice.\n\nevery device needs a name. this name can be used by to address specific devices (e.g. "turn off the spotlight"). so go ahead and name your device from this settings screen.\n\ntip\n\nmake it a friendly name, like pool light or coffee machine. having a name like gpio12 just ain\'t going to do anyone any favors.\n\ncurrently, your device is unlikely to be paired to alice. so jump out of the device menu by clicking the close button to hide the menu now click your device and if it\'s not paired then alice will broadcast out to the network looking for a response from your new device. once she finds it she will assign it a unique number and, complete installation and listen for a heartbeat from your device. this tells alice it\'s connected and allows alice to determine states and values of what ever the device is broadcasting.\n\nlet\'s take a look at the satellite provided by alicesatellite: it has only a big "find device" button, nothing more. clicking that button is basically just like telling aliceplease add a new alice satellite in the living roomshe will start broadcasting for the new device and trigger the installation. when the installation is successful, the "find device" button will not be shown anymore.\n\nlet\'s take a look at another device type: roborock by the skill vacuum: just like the satellite, there is a "find device" button on the top, but clicking it now, will just give you an error message, because you don\'t have supplied all the required information first! to do that, look below the big button. you will find a field for the ip and the token. only after supplying them, alice can try to connect to the vacuum. switching the input field should save automatically in these settings - to be sure, pressing enter will save as well! but that is not all you can do in the settings for the vacuum. below the required information for the device, you see a listing of all linked rooms. in case of the roborock, you need one room id for each room your vacuum discovered, to be able to start the cleaning in that specific area. this is the place where you can save them for alice.\n\n# my home extra\'s\n 1. if a device is "offline" it will show by having a broken heart above its icon.\n 2. the compass - the arrow points to the centre of your map. clicking that arrow in the centre of the compass will zoom your map to the centre of your screen.\n 3. once a new device is added, click that device for it to "pair" to alice, so she recognises it in the future. you should see a pairing message when this occurs.\n\nnote: with some skills like homeassistant, there is no pairing needed. it\'s done automatically',charsets:{}},{title:"Troubleshooting",frontmatter:{title:"Troubleshooting",sidebarDepth:3},regularPath:"/setup/troubleshooting.html",relativePath:"setup/troubleshooting.md",key:"v-5d648005",path:"/setup/troubleshooting.html",headers:[{level:2,title:"Auto bug report",slug:"auto-bug-report",normalizedTitle:"auto bug report",charIndex:2097},{level:3,title:"Alice is started",slug:"alice-is-started",normalizedTitle:"alice is started",charIndex:2240},{level:3,title:"Alice doesn't start",slug:"alice-doesn-t-start",normalizedTitle:"alice doesn't start",charIndex:2436},{level:3,title:"Tell Alice to report the bugs",slug:"tell-alice-to-report-the-bugs",normalizedTitle:"tell alice to report the bugs",charIndex:2660}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Auto bug report Alice is started Alice doesn't start Tell Alice to report the bugs",content:"Yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. But hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... Ok, I stop.... Let's find a solution to your problem! Keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! Do not unplug your device if nothing happens, you might cut Alice in the middle of her training!\n\nFirst thing we want to do is SSH to your device. Find out your device's IP and ssh to it using whatever you have. On Windows, the terminal now supports SSH Windows Terminal or you can use Kitty, on other platforms your can simply connect through your terminal.\n\nThere are many things we can check, this is one path I'm giving you, but it's not the only one!\n\nFirst, let's check if the Project Alice service is up and running:\n\nsudo systemctl status ProjectAlice\n\nYou should get some info about the service. If you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nIf the service is dead or restarts all the time, let's debug it! Stop Project Alice. First pres CTRL+C to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop ProjectAlice\n\nLet's start it manually to have a better vision of the logs. In your ssh terminal type\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nThis will manually start ProjectAlice printing out every detail and stopping if any unrecoverable error arises. Read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nIf there are no errors and Alice seems to start fine, the last log line, on first boot, should be something like\n\n[Project Alice] Started in 7.23 seconds\n\nAnd you should hear a little chime.\n\nIf you see errors, if she shuts down or reboots by herself in a loop, time for some reporting 🦖\n\n# Auto bug report\nGitHub\n\nYou need an account on GitHub to use this feature as well as a GitHub API token\n\n * https://github.com\n * API Token\n\n# Alice is started\nOpen you web console and go into admin then settings and make sure the GitHub username as well as the API token are inserted. Stop Alice with sudo systemctl stop ProjectAlice.\n\n# Alice doesn't start\nSSH to your device and edit Alice's config file: nano ~/ProjectAlice/config.json. Search for githubToken and insert your GitHub API token and search for githubUsername and insert your GitHub username.\n\n# Tell Alice to report the bugs\nThis is a one command operation that can also be made through AliceCLI. The reason for no configuration or simpler way to do it, is that everything can fail, and reporting can also fail. But not a command entered willingly by a user...\n\n * If you don't start Alice manually, SSH to your device and stop her with sudo systemctl stop ProjectAlice.\n * Create the bug report flag by typing: touch ~/ProjectAlice/alice.bugreport.\n * Start Alice with cd ~/ProjectAlice && ./venv/bin/python main.py.\n\nAround line 5, you should see the BugReporterManager saying: [BugReportManager] Flag file detected, recording errors for this run\n\nThe whole logs will be automatically sent to our GitHub issues when Alice goes down. Which means, if she's running, you need to stop her with CTRL+C so the report is sent to us.\n\nTowards the end of the logs, you'll see something like [BugReportManager] Created new issue: https://github.com/project-alice-assistant/ProjectAlice/issues/599 which means the report was made, and you can find the issue at the given link\n\n * If you want to have Alice run automatically again, type sudo systemctl start ProjectAlice.\n\nThe report flag file is automatically deleted everytime Alice goes down",normalizedContent:"yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. but hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... ok, i stop.... let's find a solution to your problem! keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! do not unplug your device if nothing happens, you might cut alice in the middle of her training!\n\nfirst thing we want to do is ssh to your device. find out your device's ip and ssh to it using whatever you have. on windows, the terminal now supports ssh windows terminal or you can use kitty, on other platforms your can simply connect through your terminal.\n\nthere are many things we can check, this is one path i'm giving you, but it's not the only one!\n\nfirst, let's check if the project alice service is up and running:\n\nsudo systemctl status projectalice\n\nyou should get some info about the service. if you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nif the service is dead or restarts all the time, let's debug it! stop project alice. first pres ctrl+c to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop projectalice\n\nlet's start it manually to have a better vision of the logs. in your ssh terminal type\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\nthis will manually start projectalice printing out every detail and stopping if any unrecoverable error arises. read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nif there are no errors and alice seems to start fine, the last log line, on first boot, should be something like\n\n[project alice] started in 7.23 seconds\n\nand you should hear a little chime.\n\nif you see errors, if she shuts down or reboots by herself in a loop, time for some reporting 🦖\n\n# auto bug report\ngithub\n\nyou need an account on github to use this feature as well as a github api token\n\n * https://github.com\n * api token\n\n# alice is started\nopen you web console and go into admin then settings and make sure the github username as well as the api token are inserted. stop alice with sudo systemctl stop projectalice.\n\n# alice doesn't start\nssh to your device and edit alice's config file: nano ~/projectalice/config.json. search for githubtoken and insert your github api token and search for githubusername and insert your github username.\n\n# tell alice to report the bugs\nthis is a one command operation that can also be made through alicecli. the reason for no configuration or simpler way to do it, is that everything can fail, and reporting can also fail. but not a command entered willingly by a user...\n\n * if you don't start alice manually, ssh to your device and stop her with sudo systemctl stop projectalice.\n * create the bug report flag by typing: touch ~/projectalice/alice.bugreport.\n * start alice with cd ~/projectalice && ./venv/bin/python main.py.\n\naround line 5, you should see the bugreportermanager saying: [bugreportmanager] flag file detected, recording errors for this run\n\nthe whole logs will be automatically sent to our github issues when alice goes down. which means, if she's running, you need to stop her with ctrl+c so the report is sent to us.\n\ntowards the end of the logs, you'll see something like [bugreportmanager] created new issue: https://github.com/project-alice-assistant/projectalice/issues/599 which means the report was made, and you can find the issue at the given link\n\n * if you want to have alice run automatically again, type sudo systemctl start projectalice.\n\nthe report flag file is automatically deleted everytime alice goes down",charsets:{}},{title:"Hotword and wakeword",frontmatter:{title:"Hotword and wakeword",sidebarDepth:3},regularPath:"/setup/wakeword.html",relativePath:"setup/wakeword.md",key:"v-190fa89e",path:"/setup/wakeword.html",headers:[{level:2,title:"Hotword",slug:"hotword",normalizedTitle:"hotword",charIndex:191},{level:2,title:"Wakeword",slug:"wakeword",normalizedTitle:"wakeword",charIndex:342},{level:3,title:"Reset everything",slug:"reset-everything",normalizedTitle:"reset everything",charIndex:605},{level:3,title:"Create a wakeword manually",slug:"create-a-wakeword-manually",normalizedTitle:"create a wakeword manually",charIndex:862}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Hotword Wakeword Reset everything Create a wakeword manually",content:'There are two types of wakewords for Alice. The , that works for everybody, and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# Hotword\nAt the moment following are supported:\n\n * "Hey Snips"\n\nThis is subject to change and will be replaced when multiple engines are supported.\n\n# Wakeword\nThe personal is created after a new user is registered for Alice. This can be right after her start for the first user, or when you add in a new user later on. If you decide not to add a at the start, you (currently) have two ways to add it later on.\n\n# Reset everything\nDelete all memory of Alice and start over with the user creation of the admin user. This way is only recommended when you just created your instance of Alice.\n\nsudo rm ~/ProjectAlice/system/database/data.db\nsudo systemctl restart Alice\n\n\n# Create a wakeword manually\nHere you will create your own recordings, cut them on any device and insert them into Alice.\n\n 1. Record yourself 3 times saying "Hey Alice". Name the files 0.wav 1.wav and 2.wav\n 2. Crop the recording as close as possible (cutting of a millisecond should be better than keeping too much silence)\n 3. Change the project frequency to 16000 in the bottom toolbar and save the files as 16-bit\n\nTIP\n\nA free tool for this could be Audacity\n\n 4. Move the files to ~/ProjectAlice/trained/hotwords/%username%/. Add your username into the path, it should always be written in lower case!\n    \n    \n 5. Create a file "config.json" in the same folder with following content (again replace the %username% with your name, all lower case)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 6. sudo nano /etc/snips.toml\n    \n    \n 7. Modify the following block to include the path to your and the sensitivity. Don\'t forget to replace %username%!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/ProjectAlice/trained/hotwords/snips_hotword=0.53","/home/pi/ProjectAlice/trained/hotwords/%username%=0.48"]\n\n\n 8. Restart Alice\n\nsudo systemctl restart ProjectAlice',normalizedContent:'there are two types of wakewords for alice. the , that works for everybody, and are preinstalled, and the personal , that only work for one person and are individually created in runtime.\n\n# hotword\nat the moment following are supported:\n\n * "hey snips"\n\nthis is subject to change and will be replaced when multiple engines are supported.\n\n# wakeword\nthe personal is created after a new user is registered for alice. this can be right after her start for the first user, or when you add in a new user later on. if you decide not to add a at the start, you (currently) have two ways to add it later on.\n\n# reset everything\ndelete all memory of alice and start over with the user creation of the admin user. this way is only recommended when you just created your instance of alice.\n\nsudo rm ~/projectalice/system/database/data.db\nsudo systemctl restart alice\n\n\n# create a wakeword manually\nhere you will create your own recordings, cut them on any device and insert them into alice.\n\n 1. record yourself 3 times saying "hey alice". name the files 0.wav 1.wav and 2.wav\n 2. crop the recording as close as possible (cutting of a millisecond should be better than keeping too much silence)\n 3. change the project frequency to 16000 in the bottom toolbar and save the files as 16-bit\n\ntip\n\na free tool for this could be audacity\n\n 4. move the files to ~/projectalice/trained/hotwords/%username%/. add your username into the path, it should always be written in lower case!\n    \n    \n 5. create a file "config.json" in the same folder with following content (again replace the %username% with your name, all lower case)\n    \n    \n\n{\n    "num_mel_bins": 13,\n    "window_type": "povey",\n    "kind": "personal",\n    "window_size": 10,\n    "cepstral_lifter": 22.0,\n    "use_energy": false,\n    "energy_floor": 0.0,\n    "from_mfcc": 1,\n    "dtw_ref": 0.22,\n    "raw_energy": true,\n    "frame_length_ms": 25.0,\n    "frame_shift_ms": 10.0,\n    "preemphasis_coefficient": 0.97,\n    "to_mfcc": 13,\n    "sample_rate": 16000,\n    "dither": 0.0,\n    "mel_low_freq": 20,\n    "shift": 10,\n    "num_mfcc": 13,\n    "band_radius": 10,\n    "hotword_key": "%username%"\n}\n\n\n 6. sudo nano /etc/snips.toml\n    \n    \n 7. modify the following block to include the path to your and the sensitivity. don\'t forget to replace %username%!\n    \n    \n\n[snips-hotword]\nmodel = ["/home/pi/projectalice/trained/hotwords/snips_hotword=0.53","/home/pi/projectalice/trained/hotwords/%username%=0.48"]\n\n\n 8. restart alice\n\nsudo systemctl restart projectalice',charsets:{}},{title:"Introduction to Skill Development",frontmatter:{title:"Introduction to Skill Development",sidebarDepth:2},regularPath:"/skill-development/",relativePath:"skill-development/README.md",key:"v-20fa3876",path:"/skill-development/",headers:[{level:2,title:"Technical Requirements",slug:"technical-requirements",normalizedTitle:"technical requirements",charIndex:373},{level:3,title:"Python programming language",slug:"python-programming-language",normalizedTitle:"python programming language",charIndex:398},{level:3,title:"GitHub account",slug:"github-account",normalizedTitle:"github account",charIndex:1225},{level:3,title:"Running Alice",slug:"running-alice",normalizedTitle:"running alice",charIndex:1425},{level:2,title:"What makes a good Skill?",slug:"what-makes-a-good-skill",normalizedTitle:"what makes a good skill?",charIndex:1862},{level:3,title:"Fulfilling a need the user has",slug:"fulfilling-a-need-the-user-has",normalizedTitle:"fulfilling a need the user has",charIndex:1889},{level:3,title:"Having an easy-to-use voice interface",slug:"having-an-easy-to-use-voice-interface",normalizedTitle:"having an easy-to-use voice interface",charIndex:2336},{level:3,title:"Alice's idiom",slug:"alice-s-idiom",normalizedTitle:"alice's idiom",charIndex:2908},{level:2,title:"Skill terminology",slug:"skill-terminology",normalizedTitle:"skill terminology",charIndex:3968}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Technical Requirements Python programming language GitHub account Running Alice What makes a good Skill? Fulfilling a need the user has Having an easy-to-use voice interface Alice's idiom Skill terminology",content:"# Intro\nAlice's are the voice applications that provide different functionality for users. To create a Skill requires at least basic technical experience, an Alice installation, an idea of what your will do, and how people will use it.\n\nTIP\n\nExplore the fundamental building blocks of a , and the knowledge required to create meaningful and engaging voice interactions.\n\n# Technical Requirements\n# Python programming language\nWARNING\n\nIt is required that you read and understand our Code guidelines\n\nSkills for Alice are written using the Python programming language. A simple Skill can be a great way for new developers to try Python out in a real project, whilst experienced programmers will quickly see the powerful possibilities available in a well crafted .\n\nIf you aren't familiar with the basics of Python, check one of the many great tutorials online to get you started. If you've programmed in other object-oriented languages, like Java or C#, then you'll be able to pick it up, but if you're totally new to programming, you might want to look at an introductory programming course.\n\nFor a quick jump into setting your IDE for Alice, read the following community made documentation: Getting started with Pycharm.\n\n# GitHub account\nSkills are hosted on GitHub, so you will need to create an account there if you don't already have one. It is good to have a basic understanding of the Git basics and GitHub basics.\n\n# Running Alice\nTo test your Skill out, you will need to set up an Alice device. Currently, Alice can be installed on devices running debian stretch/buster. Alice also comes with a number of helpful tools to create new Skills, and validate them. If you aren't yet familiar with how Alice works, check out the overview of Alice components to understand the many technologies that come together to provide an intelligent voice assistant.\n\n# What makes a good Skill?\n# Fulfilling a need the user has\nGood Skills meet one or more of the user's needs. Popular Skills are popular because people use them frequently - for instance, to set alarms, reminders, or to identify the time in other time zones. On the other hand, a Skill that, say, recites π to 100 digits might be pretty cool, but when was the last time you needed to know π to 100 digits? Contrast that with the last time you set a reminder on your phone.\n\n# Having an easy-to-use voice interface\nJust like a web page with a thoughtfully-designed interface is much more pleasant to use, a Skill with a well-designed voice interface is a delight, not a chore, to use. You should anticipate the task the user is trying to accomplish, and how to make that as straightforward as possible.\n\nIf you have an idea for a Skill, it's a great idea to join our Discord Chat, specifically the skills channel, and share what your plans are. You'll be able to get constructive and helpful feedback on your Skill from an experienced community.\n\n# Alice's idiom\nThis part is important, to provide the smoothest experience possible to the end user. Let's set the example:\n\n * You have a house\n * The house has 3 Living room, kitchen, bedroom.\n * Every have an Alice \n * Every have some smart lights installed.\n * Bedroom and kitchen have roof windows.\n\nNow, you are standing in the living room and ask Alice\n\nTurn the lights on pleaseAs a user, you expect Alice to turn the lights on in the living room right? Without explicitly specifying it. Your skill must follow this rule.\n\nNow, while still standing in the living room:Close the windows\n\nThere's no windows in the living room, as a user, you know it. Your skill must close all the available windows as the user did not specify which ones!\n\nIn the contrary:Close the windows in the living room\n\nAlice should respond that there's no windows in the living room.\n\nOr:Close the windows in the bedroom\n\nAlice should close the windows in the bedroom only, as explicitly specified\n\nThis set of rules is relatively simple, and must be followed by every skill!\n\n# Skill terminology\nMake sure to check our Alice Glossary to understand all the terms used in relation with skills.",normalizedContent:"# intro\nalice's are the voice applications that provide different functionality for users. to create a skill requires at least basic technical experience, an alice installation, an idea of what your will do, and how people will use it.\n\ntip\n\nexplore the fundamental building blocks of a , and the knowledge required to create meaningful and engaging voice interactions.\n\n# technical requirements\n# python programming language\nwarning\n\nit is required that you read and understand our code guidelines\n\nskills for alice are written using the python programming language. a simple skill can be a great way for new developers to try python out in a real project, whilst experienced programmers will quickly see the powerful possibilities available in a well crafted .\n\nif you aren't familiar with the basics of python, check one of the many great tutorials online to get you started. if you've programmed in other object-oriented languages, like java or c#, then you'll be able to pick it up, but if you're totally new to programming, you might want to look at an introductory programming course.\n\nfor a quick jump into setting your ide for alice, read the following community made documentation: getting started with pycharm.\n\n# github account\nskills are hosted on github, so you will need to create an account there if you don't already have one. it is good to have a basic understanding of the git basics and github basics.\n\n# running alice\nto test your skill out, you will need to set up an alice device. currently, alice can be installed on devices running debian stretch/buster. alice also comes with a number of helpful tools to create new skills, and validate them. if you aren't yet familiar with how alice works, check out the overview of alice components to understand the many technologies that come together to provide an intelligent voice assistant.\n\n# what makes a good skill?\n# fulfilling a need the user has\ngood skills meet one or more of the user's needs. popular skills are popular because people use them frequently - for instance, to set alarms, reminders, or to identify the time in other time zones. on the other hand, a skill that, say, recites π to 100 digits might be pretty cool, but when was the last time you needed to know π to 100 digits? contrast that with the last time you set a reminder on your phone.\n\n# having an easy-to-use voice interface\njust like a web page with a thoughtfully-designed interface is much more pleasant to use, a skill with a well-designed voice interface is a delight, not a chore, to use. you should anticipate the task the user is trying to accomplish, and how to make that as straightforward as possible.\n\nif you have an idea for a skill, it's a great idea to join our discord chat, specifically the skills channel, and share what your plans are. you'll be able to get constructive and helpful feedback on your skill from an experienced community.\n\n# alice's idiom\nthis part is important, to provide the smoothest experience possible to the end user. let's set the example:\n\n * you have a house\n * the house has 3 living room, kitchen, bedroom.\n * every have an alice \n * every have some smart lights installed.\n * bedroom and kitchen have roof windows.\n\nnow, you are standing in the living room and ask alice\n\nturn the lights on pleaseas a user, you expect alice to turn the lights on in the living room right? without explicitly specifying it. your skill must follow this rule.\n\nnow, while still standing in the living room:close the windows\n\nthere's no windows in the living room, as a user, you know it. your skill must close all the available windows as the user did not specify which ones!\n\nin the contrary:close the windows in the living room\n\nalice should respond that there's no windows in the living room.\n\nor:close the windows in the bedroom\n\nalice should close the windows in the bedroom only, as explicitly specified\n\nthis set of rules is relatively simple, and must be followed by every skill!\n\n# skill terminology\nmake sure to check our alice glossary to understand all the terms used in relation with skills.",charsets:{}},{title:"Down the rabbit hole",frontmatter:{title:"Down the rabbit hole",sidebarDepth:4,tags:["database","logging","missing slot","built-in intents","built-in slots","events"]},regularPath:"/skill-development/down-the-rabbit-hole.html",relativePath:"skill-development/down-the-rabbit-hole.md",key:"v-202eb20e",path:"/skill-development/down-the-rabbit-hole.html",headers:[{level:2,title:"Logging",slug:"logging",normalizedTitle:"logging",charIndex:145},{level:3,title:"Basic Usage",slug:"basic-usage",normalizedTitle:"basic usage",charIndex:583},{level:3,title:"Logging Levels",slug:"logging-levels",normalizedTitle:"logging levels",charIndex:1397},{level:3,title:"Where do these messages get logged?",slug:"where-do-these-messages-get-logged",normalizedTitle:"where do these messages get logged?",charIndex:2774},{level:3,title:"Plurals",slug:"plurals",normalizedTitle:"plurals",charIndex:3030},{level:3,title:"Styling your logs",slug:"styling-your-logs",normalizedTitle:"styling your logs",charIndex:3596},{level:3,title:"Using the logger outside the skill class",slug:"using-the-logger-outside-the-skill-class",normalizedTitle:"using the logger outside the skill class",charIndex:4016},{level:2,title:"Database access",slug:"database-access",normalizedTitle:"database access",charIndex:5406},{level:3,title:"Setting up the database",slug:"setting-up-the-database",normalizedTitle:"setting up the database",charIndex:5744},{level:3,title:"Writing to your database",slug:"writing-to-your-database",normalizedTitle:"writing to your database",charIndex:6489},{level:3,title:"Reading from your database",slug:"reading-from-your-database",normalizedTitle:"reading from your database",charIndex:6846},{level:3,title:"Delete from your database",slug:"delete-from-your-database",normalizedTitle:"delete from your database",charIndex:7453},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:7886},{level:3,title:"Core events",slug:"core-events",normalizedTitle:"core events",charIndex:8315},{level:3,title:"User states",slug:"user-states",normalizedTitle:"user states",charIndex:12510},{level:3,title:"Timed events",slug:"timed-events",normalizedTitle:"timed events",charIndex:13804},{level:3,title:"Telemetry reports",slug:"telemetry-reports",normalizedTitle:"telemetry reports",charIndex:14502},{level:2,title:"Missing slot info",slug:"missing-slot-info",normalizedTitle:"missing slot info",charIndex:16245},{level:3,title:"Study case",slug:"study-case",normalizedTitle:"study case",charIndex:16333},{level:3,title:"The potential problem",slug:"the-potential-problem",normalizedTitle:"the potential problem",charIndex:16966},{level:3,title:"The bad solution",slug:"the-bad-solution",normalizedTitle:"the bad solution",charIndex:17211},{level:3,title:"The good solution",slug:"the-good-solution",normalizedTitle:"the good solution",charIndex:17842}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Logging Basic Usage Logging Levels Where do these messages get logged? Plurals Styling your logs Using the logger outside the skill class Database access Setting up the database Writing to your database Reading from your database Delete from your database Events Core events User states Timed events Telemetry reports Missing slot info Study case The potential problem The bad solution The good solution",content:"# Intro\nNow that you've discovered the structure of a skill, and seen some files a bit more in-depth, there's a lot more for you to discover!\n\n# Logging\nTo track events and data within your skill we can use logging. If you are new to programming, this is a way to output a message that can tell you the state of your skill at a particular point in time, details about an error that has occurred, or simply noting that a program reached a particular point in the code.\n\nTIP\n\nLogging is useful during skill development, as well as to help end-users diagnose problems in the future.\n\n# Basic Usage\nA logger is available through the AliceSkill base class. This means that you can use it within a skill without needing to import the logging package.\n\nHere is a quick example of an info level message used in a skill. We will learn more about different levels shortly.\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\n\nclass HelloWorldskill(AliceSkill):\n\n\n\t@IntentHandler('HelloWorldIntent')\n\tdef helloWorldIntent(self, session: DialogSession, **_kwargs):\n\t\t\"\"\"\n\t\t\tskills can log useful information.\n\t\t\tThese will appear in the Web Interface and the logs file.\n\t\t\"\"\"\n\t\tself.logInfo(\"This is an info level log message.\")\n\t\tself.endDialog(session.sessionId, self.randomTalk(text='helloWorld'))\n\n\n# Logging Levels\nThere are five types of log messages available that are used for different purposes.\n\n# Debug\nself.logDebug\n\n\nDebug messages are used for information that will help to diagnose problems. These are particularly useful if there is anything that has the potential to break in the future. They will only show if debug is set to true in the settings.\n\n# Info\nself.logInfo\n\n\nInfo messages provide general information when the skill is running as expected. These messages will always be logged so are useful when actively developing a skill, but should be used sparingly once a skill is published for other people to use.\n\n# Warning\nself.logWarning\n\n\nWarning messages are used to indicate that something has gone wrong, but the skill will continue to function. It is possible to output a stack trace when needed using:\n\nself.logWarning(msg='warning message', printStack=True):\n\n\n# Error\nself.logError\n\n\nError messages indicate that a serious problem has occurred and the skill will not be able to function. They will always output a stack trace.\n\n# Critical\nself.logCritical\n\n\nCritical error messages indicate that a very serious problem has occurred, and the skill will not be able to function. They will always output a stack trace.\n\n# Fatal\nself.logFatal\n\n\nlogFatal is an unrecoverable error that forces Alice to shut down. It is not recommended using in skills!\n\n# Where do these messages get logged?\nLog messages from a skill are displayed in the ProjectAlice Web Interface so that a User can see in real-time what is happening in the skill. They are also written to the logs file located at: ~/ProjectAlice/var/logs\n\n# Plurals\nThe nightmare for perfectionists... What's more annoying than a log line saying Loaded 1 devices? That's why we implemented a pluralizer... With every type of log messages, you can pass a second argument, plural with a list of words, in your log line, that need to be automatically added with an s\n\nself.logInfo(f'Loaded {myDeviceCount} device in {roomCount} room.', plural=['device', 'room'])\n\n\nNote that you should use the non-plural form, Alice will add the required s's if needed. The pluralization only works with digits and not with written number.\n\n# Styling your logs\nLogs support a similar to Markdown syntax. You can output bold text, underlined, dimmed and even colored text! These formatted logs will only show on stdout and on the interface. Here's how you can style your logs:\n\n# Bold:\n**My bold text**\n\n# Underlined:\n__My underlined text__\n\n# Dimmed:\n--My dimmed text--\n\n# Colored:\n![red](My colored text)\n\nAvailable colors are: red, green, yellow, blue, grey\n\n# Using the logger outside the skill class\nAs the logger is provided by the skill class, it is only available within that scope. If you need to log messages from outside this class, you can import the logger manually.\n\nfrom core.util.model.Logger import Logger\n\n\nThis can then be used outside your skill's class. Extending our first example:\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\nfrom core.util.model.Logger import Logger\n\nLogger().logInfo(\n\t\"This is a logged info level message outside of the skill class scope\"\n)\n\ndef my_special_function():\n\tLogger().logInfo(\"Another usage of logging.\")\n\nclass HelloWorldskill(AliceSkill):\n\t@IntentHandler('HelloWorldIntent')\n\tdef helloWorldIntent(self, session: DialogSession, **_kwargs):\n\t\t\"\"\"\n\t\t\tskills can log useful information.\n\t\t\tThese will appear in the Web Interface and the logs file.\n\t\t\"\"\"\n\t\tself.logInfo(\"This is an info level log message.\")\n\t\tself.endDialog(session.sessionId, self.randomTalk(text='helloWorld'))\n\t\tmy_special_function()\n\n\nWARNING\n\nWhen you want to print stack traces when logging outside the skill's class it might be required to provide a different depth for the stack trace to the Logger class, since the default depth of the stack trace is 4.\n\nLogger(depth=6).logError('log message with stack trace')\n\n\n# Database access\nAlice comes with a built-in SQLite database and offers a service provider for accessing the database. There are methods for creating, modifying and deleting a table built right into the skill constructor and there are methods available for adding, removing, modifying and of course reading the content of the database.\n\n# Setting up the database\nDefine the DB in your program as a dictionary and prepare the name of the database as a variable as best practice:\n\n    _TABLENAME = 'MyReminders'\n    _DATABASE = {\n        _TABLENAME: [\n            'message TEXT NOT NULL',\n            'timestamp INTEGER NOT NULL'\n        ]\n    }\n\n\nInclude the database definition into the constructor of your skill:\n\n    def __init__(self):\n        super().__init__(databaseSchema=self._DATABASE)\n\n\nNow your database will be set up with the first load of your skill. If you later on decide to change the structure of your database, Alice will take care of that as well - just update the self._DATABASE variable and Alice will add or remove the correct fields on reload of the skill.\n\n# Writing to your database\nAdding an entry to your database is as easy as defining the new entry as dictionary and calling the DatabaseManager:\n\nself.databaseInsert(tableName=self._TABLENAME, values={'message': yourMessage, 'timestamp': yourTimestamp})\n\n\nThe query will be automatically generated from the values that correspond to the column names: value\n\n# Reading from your database\nIf you want to read entries, you have to know a bit of SQL for the selection criteria. With myMessage as a local python variable you can make the following call, to read a database entry with the message stored in myMessage:\n\nself.databaseFetch(\n            tableName=self._TABLENAME,\n            query='SELECT * FROM :__table__ WHERE message = :tmpMessage',\n            values={'tmpMessage': myMessage},\n            method='all'\n        )\n\n\nAs for the method, you can choose between all and one. The difference is that all returns a list of entries, and one, well, one entry?\n\n# Delete from your database\nAgain some SQL Syntax has to be known. In this example we delete all entries that are already in the past by comparing them to the python variable myTimestamp:\n\nself.DatabaseManager.delete(\n                tableName='MyReminders',\n                query='DELETE FROM :__table__ WHERE timestamp < :tmpTimestamp',\n                values={'tmpTimestamp': myTimestamp},\n                callerName=self.name)\n\n\n# Events\nProject Alice is driven by . What are events you might ask, or what do we mean with it? Ever heard of \"action -> reaction\"? That's exactly it! When something happens, something occurs! Events are by convention prefixed with \"on\", like \"onStormyWeather\" or \"onDoorOpened\".\n\nWe provide a load of pre-made system events you can override in your skills. Let me try to list them all, more are added on regular bases though!\n\n# Core events\nDescription\n\nCore events report what's happening under the hood, what the system is doing\n\n# def onStart(self)\nTriggered when Alice is starting the skills\n\n# def onStop(self)\nTriggered when Alice is stopping the skill. The skill is typically stopped when Alice reboots, or after and update\n\n# def onBooted(self)\nTriggered when everything has started. Comes after onStart\n\n# def onHotword(self, siteId: str, user: str = constants.UNKNOWN_USER)\nTriggered when a hotword is heard. A hotword is a universal wakeword that doesn't identify a user\n\n# def onWakeword(self, siteId: str, user: str = constants.UNKNOWN_USER)\nTriggered when a wakeword is heard. A wakeword is a hotword that identifies a user\n\n# def onHotwordToggleOn(self, siteId: str)\nTriggered when the hotword triggers itself on again. Typically, the hotword is turned off once it's been heard, until the dialog is over.\n\n# def onHotwordToggleOff(self, siteId: str)\nTriggered when the hotword goes off. Typically, the hotword is turned off once it's been heard.\n\n# def onSessionStarted(self, session)\nTriggered when a session is started\n\n# def onStartListening(self, session)\nTriggered when Alice starts listening to you, right after the hotword was caught\n\n# def onCaptured(self, session)\nTriggered when Alice captured what you said, when you finished talking to her\n\n# def onPartialTextCaptured(self, session, text: str, likelihood: float, seconds: float):\nTriggered every time the ASR spits out a part of the utterance it is actively trying to capture.\n\n# def onUserCancel(self, session)\nTriggered when the user cancels a dialog. This ends the session and doesn't trigger onIntentParsed!\n\n# def onSessionTimeout(self, session)\nTriggered when a session times out\n\n# def onIntentNotRecognized(self, session)\nTriggered when the NLU couldn't understand the intent. Typically, occurs after onCaptured\n\n# def onSessionError(self, session)\nTriggered if the session ends with an error\n\n# def onSessionEnded(self, session)\nTriggered when the session ends\n\n# def onSay(self, session)\nTriggered when Alice starts to say something\n\n# def onSayFinished(self, session)\nTriggered when Alice has finished speaking\n\n# def onSessionQueued(self, session)\nTriggered when a new session is queued due to the fact there is already one on going\n\n# def onMessage(self, session)\nTriggered when a subscribed MQTT message is received\n\n# def onSkillInstalled(self, **kwargs)\nTriggered when a skill has installed. Info about what skill can be extracted from kwargs\n\n# def onSkillUpdated(self, **kwargs)\nTriggered when a skill has updated. Info about what skill can be extracted from kwargs\n\n# def onSkillInstallFailed(self, **kwargs)\nTriggered when a skill failed installing\n\n# def onInternetConnected(self)\nTriggered when internet connection is back, after a failure. Won't trigger on boot!\n\n# def onInternetLost(self)\nTriggered when internet connection is lost.\n\n# def onBroadcastingForNewDeviceStart(self, session)\nTriggered when Alice starts broadcasting her IP for new devices to discover\n\n# def onBroadcastingForNewDeviceStop(self)\nTriggered when Alice stops broadcasting her IP for new devices to discover. Happens when a new device was added or addition timeouts\n\n# def onAuthenticated(self, session)\nTriggered when a user successfully authenticated through his pin code\n\n# def onAuthenticationFailed(self, session)\nTriggered when a user failed authentication with his pin code\n\n# def onAudioFrame(self, message)\nTriggered when audio frame are coming in through MQTT. Can be very consuming!\n\n# def onDeviceConnecting(self)\nTriggered when a device is trying to connect to Alice's network\n\n# def onDeviceDisconnecting(self)\nTriggered when a device is disconnecting from Alice's network\n\n# def onVadUp(self, **kwargs):\nTriggered when voice activity is heard\n\n# def onVadDown(self, **kwargs):\nTriggered when voice activity has stopped\n\n# def onNluTrained(self, **kwargs):\nTriggered when the NLU has finished training\n\n# def onSnipsAssistantInstalled(self, **kwargs):\nTriggered when the assistant.json file has installed after training\n\n# def onSnipsAssistantFailedTraining(self, **kwargs):\nTriggered when the assistant.json file failed training\n\n# User states\nDescription\n\nUser states events report a change of state for a user. Example: \"Hey Alice? I'm going bed!\" would trigger \"onGoingBed\" and change the user state accordingly\n\n# def onGoingBed(self)\nTriggered when a user tells Alice he's going bed\n\n# def onSleep(self)\nTriggered when a user tells Alice good night\n\n# def onWakeup(self)\nTriggered when a user tells Alice good morning\n\n# def onLeavingHome(self)\nTriggered when a user tells Alice he's leaving home\n\n# def onReturningHome(self)\nTriggered when a user tells Alice he's returned home\n\n# def onEating(self)\nTriggered when a user tells Alice he's eating\n\n# def onWatchingTV(self)\nTriggered when a user tells Alice he's watching TV\n\n# def onCooking(self)\nTriggered when a user tells Alice he's cooking\n\n# def onMakeup(self)\nTriggered when a user tells Alice he's putting makeup\n\n# def onContextSensitiveDelete(self, sessionId: str)\nTriggered when the user asks, in a context-sensitive scenario, to delete or forget something. Example:What's my favorite color?blueForget this!ok\n\n# def onContextSensitiveEdit(self, sessionId: str)\nTriggered when the user asks, in a context-sensitive scenario, to change something. Example:What's my favorite color?blueChange this pleaseSure, so tell me, what's your new favorite color?greenok\n\n# Timed events\nDescription\n\nWhen Alice starts, the following events are scheduled. Alice does calculate for them to start at the correct time, so it reflects real life clock. Thus, onFullHour doesn't mean Alice was running an hour on the first round, as if Alice start at 9:47, onFullMinute would trigger at 900, onFiveMinutes at 900, onFullHour and all the others at precisely 1000\n\n# def onFullMinute(self)\nTriggered every real time full minute.\n\n# def onFiveMinute(self)\nTriggered every real time five minutes. Example: 10:15, 10:35; 12:55\n\n# def onQuarterHour(self)\nTriggered every real time fifteen minutes. Example: 10:15, 7:30; 12:00\n\n# def onFullHour(self)\nTriggered every real time hour.\n\n# Telemetry reports\nDescription\n\nAlice comes with a telemetry manager skill can use to store weather data. The following events reflect these reports\n\n# def onUVIndexAlert(self, deviceList: list)\nTriggered when a device reports a UV index out of the limit set by the user\n\n# def onRaining(self, deviceList: list)\nTriggered when a device reports rain\n\n# def onTooMuchRain(self, deviceList: list)\nTriggered when a device reports a rain level above the limit set by the user\n\n# def onWindy(self, deviceList: list)\nTriggered when a device reports a wind strength above the limit set by the user\n\n# def onFreezing(self, deviceList: list)\nTriggered when a device reports temperature below 0°C\n\n# def onTemperatureHighAlert(self, deviceList: list)\nTriggered when a device reports a temperature above the limit set by the user\n\n# def onTemperatureLowAlert(self, deviceList: list)\nTriggered when a device reports a temperature under the limit set by the user\n\n# def onCO2Alert(self, deviceList: list)\nTriggered when a device reports a CO2 level above the limit set by the user\n\n# def onHumidityHighAlert(self, deviceList: list)\nTriggered when a device reports a humidity level above the limit set by the user\n\n# def onHumidityLowAlert(self, deviceList: list)\nTriggered when a device reports a humidity level under the limit set by the user\n\n# def onNoiseAlert(self, deviceList: list)\nTriggered when a device reports a sound level above the limit set by the user\n\n# def onPressureHighAlert(self, deviceList: list)\nTriggered when a device reports an atmospheric pressure level above the limit set by the user\n\n# def onPressureLowAlert(self, deviceList: list)\nTriggered when a device reports an atmospheric pressure level under the limit set by the user\n\n# Missing slot info\nSometimes you need more information than what the user provided...\n\n# Study case\nLet's take an intent with a few slots, highlighted in the example.\n\nHey Alice?Yes?Can you book me a flight from Geneva to New York for tuesday 23 third of april around midday please?Of course, let me check that!For this example (and also in reality) a flight can only be booked if\n\n * The user has the intention to book a ticket, which requires the intent to be correctly detected\n * The user provided the following information, aka slots: * origin: Where the user wants to depart from\n    * destination: Where the user wants to travel to\n    * date: A date and possibly a time at which the user wants to leave\n   \n   \n\n# The potential problem\nNow, let's imagine the following:\n\nHey Alice?Yes?Can you book me a flight from Geneva please?The problem is that the user did not provide a destination or a date, for which Alice will have to query the user for details.\n\n# The bad solution\nYou could use the classic intent decorators with 4 separate methods, which is not recommended but written here to demonstrate:\n\n@IntentHandler('AnswerFrom')\ndef answerFrom(self, session: DialogSession):\n\tpass\n\n\n@IntentHandler('AnswerTo')\ndef answerTo(self, session: DialogSession):\n\tpass\n\t\n\t\n@IntentHandler('AnswerDate')\ndef answerDate(self, session: DialogSession):\n\tpass\n\n\n@IntentHandler('BookFlight')\ndef bookFlight(self, session: DialogSession):\n\tpass\n\n\nWell, not that effective, is it? lots of writing only to declare the methods, imagine the work in each of the methods to finally get to book the ticket.\n\n# The good solution\nThis is what I call the Fill the glass method, because we come always at the same method until everything is filled.\n\n@IntentHandler('AnswerFrom')\n@IntentHandler('AnswerTo')\n@IntentHandler('AnswerDate')\n@IntentHandler('BookFlight')\ndef bookFlight(self, session: DialogSession):\n\tif 'From' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhereFrom'),\n\t\t\tintentFilter=['AnswerFrom'],\n\t\t\tslot='From'\n\t\t)\n\t\treturn\n\telif 'To' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhereTo'),\n\t\t\tintentFilter=['AnswerTo']\n\t\t)\n\t\treturn\n\telif 'Date' not in session.slots:\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='WhatDate'),\n\t\t\tintentFilter=['AnswerDate']\n\t\t)\n\t\treturn\n\n\t# If we got here, we are sure to have all three required information!\n\t# So we can continue and proceed to the booking!\n\n\nWhat we did here is link our 4 intents to the same method bookFlight and we check if all our slots are filled. If not, we ask the user for the information and limit the NLU on the intent that interests us using intentFilter. In the first if condition I even mentioned the slot the NLU should focus on extracting!\n\nAs the answer will come back to the same method, the checks will naturally continue until all three are False, and we can proceed to the booking!\n\nMake sure to read builtin intents to understand dialogue state, or you will end up having collisions with other skills!",normalizedContent:"# intro\nnow that you've discovered the structure of a skill, and seen some files a bit more in-depth, there's a lot more for you to discover!\n\n# logging\nto track events and data within your skill we can use logging. if you are new to programming, this is a way to output a message that can tell you the state of your skill at a particular point in time, details about an error that has occurred, or simply noting that a program reached a particular point in the code.\n\ntip\n\nlogging is useful during skill development, as well as to help end-users diagnose problems in the future.\n\n# basic usage\na logger is available through the aliceskill base class. this means that you can use it within a skill without needing to import the logging package.\n\nhere is a quick example of an info level message used in a skill. we will learn more about different levels shortly.\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\n\nclass helloworldskill(aliceskill):\n\n\n\t@intenthandler('helloworldintent')\n\tdef helloworldintent(self, session: dialogsession, **_kwargs):\n\t\t\"\"\"\n\t\t\tskills can log useful information.\n\t\t\tthese will appear in the web interface and the logs file.\n\t\t\"\"\"\n\t\tself.loginfo(\"this is an info level log message.\")\n\t\tself.enddialog(session.sessionid, self.randomtalk(text='helloworld'))\n\n\n# logging levels\nthere are five types of log messages available that are used for different purposes.\n\n# debug\nself.logdebug\n\n\ndebug messages are used for information that will help to diagnose problems. these are particularly useful if there is anything that has the potential to break in the future. they will only show if debug is set to true in the settings.\n\n# info\nself.loginfo\n\n\ninfo messages provide general information when the skill is running as expected. these messages will always be logged so are useful when actively developing a skill, but should be used sparingly once a skill is published for other people to use.\n\n# warning\nself.logwarning\n\n\nwarning messages are used to indicate that something has gone wrong, but the skill will continue to function. it is possible to output a stack trace when needed using:\n\nself.logwarning(msg='warning message', printstack=true):\n\n\n# error\nself.logerror\n\n\nerror messages indicate that a serious problem has occurred and the skill will not be able to function. they will always output a stack trace.\n\n# critical\nself.logcritical\n\n\ncritical error messages indicate that a very serious problem has occurred, and the skill will not be able to function. they will always output a stack trace.\n\n# fatal\nself.logfatal\n\n\nlogfatal is an unrecoverable error that forces alice to shut down. it is not recommended using in skills!\n\n# where do these messages get logged?\nlog messages from a skill are displayed in the projectalice web interface so that a user can see in real-time what is happening in the skill. they are also written to the logs file located at: ~/projectalice/var/logs\n\n# plurals\nthe nightmare for perfectionists... what's more annoying than a log line saying loaded 1 devices? that's why we implemented a pluralizer... with every type of log messages, you can pass a second argument, plural with a list of words, in your log line, that need to be automatically added with an s\n\nself.loginfo(f'loaded {mydevicecount} device in {roomcount} room.', plural=['device', 'room'])\n\n\nnote that you should use the non-plural form, alice will add the required s's if needed. the pluralization only works with digits and not with written number.\n\n# styling your logs\nlogs support a similar to markdown syntax. you can output bold text, underlined, dimmed and even colored text! these formatted logs will only show on stdout and on the interface. here's how you can style your logs:\n\n# bold:\n**my bold text**\n\n# underlined:\n__my underlined text__\n\n# dimmed:\n--my dimmed text--\n\n# colored:\n![red](my colored text)\n\navailable colors are: red, green, yellow, blue, grey\n\n# using the logger outside the skill class\nas the logger is provided by the skill class, it is only available within that scope. if you need to log messages from outside this class, you can import the logger manually.\n\nfrom core.util.model.logger import logger\n\n\nthis can then be used outside your skill's class. extending our first example:\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\nfrom core.util.model.logger import logger\n\nlogger().loginfo(\n\t\"this is a logged info level message outside of the skill class scope\"\n)\n\ndef my_special_function():\n\tlogger().loginfo(\"another usage of logging.\")\n\nclass helloworldskill(aliceskill):\n\t@intenthandler('helloworldintent')\n\tdef helloworldintent(self, session: dialogsession, **_kwargs):\n\t\t\"\"\"\n\t\t\tskills can log useful information.\n\t\t\tthese will appear in the web interface and the logs file.\n\t\t\"\"\"\n\t\tself.loginfo(\"this is an info level log message.\")\n\t\tself.enddialog(session.sessionid, self.randomtalk(text='helloworld'))\n\t\tmy_special_function()\n\n\nwarning\n\nwhen you want to print stack traces when logging outside the skill's class it might be required to provide a different depth for the stack trace to the logger class, since the default depth of the stack trace is 4.\n\nlogger(depth=6).logerror('log message with stack trace')\n\n\n# database access\nalice comes with a built-in sqlite database and offers a service provider for accessing the database. there are methods for creating, modifying and deleting a table built right into the skill constructor and there are methods available for adding, removing, modifying and of course reading the content of the database.\n\n# setting up the database\ndefine the db in your program as a dictionary and prepare the name of the database as a variable as best practice:\n\n    _tablename = 'myreminders'\n    _database = {\n        _tablename: [\n            'message text not null',\n            'timestamp integer not null'\n        ]\n    }\n\n\ninclude the database definition into the constructor of your skill:\n\n    def __init__(self):\n        super().__init__(databaseschema=self._database)\n\n\nnow your database will be set up with the first load of your skill. if you later on decide to change the structure of your database, alice will take care of that as well - just update the self._database variable and alice will add or remove the correct fields on reload of the skill.\n\n# writing to your database\nadding an entry to your database is as easy as defining the new entry as dictionary and calling the databasemanager:\n\nself.databaseinsert(tablename=self._tablename, values={'message': yourmessage, 'timestamp': yourtimestamp})\n\n\nthe query will be automatically generated from the values that correspond to the column names: value\n\n# reading from your database\nif you want to read entries, you have to know a bit of sql for the selection criteria. with mymessage as a local python variable you can make the following call, to read a database entry with the message stored in mymessage:\n\nself.databasefetch(\n            tablename=self._tablename,\n            query='select * from :__table__ where message = :tmpmessage',\n            values={'tmpmessage': mymessage},\n            method='all'\n        )\n\n\nas for the method, you can choose between all and one. the difference is that all returns a list of entries, and one, well, one entry?\n\n# delete from your database\nagain some sql syntax has to be known. in this example we delete all entries that are already in the past by comparing them to the python variable mytimestamp:\n\nself.databasemanager.delete(\n                tablename='myreminders',\n                query='delete from :__table__ where timestamp < :tmptimestamp',\n                values={'tmptimestamp': mytimestamp},\n                callername=self.name)\n\n\n# events\nproject alice is driven by . what are events you might ask, or what do we mean with it? ever heard of \"action -> reaction\"? that's exactly it! when something happens, something occurs! events are by convention prefixed with \"on\", like \"onstormyweather\" or \"ondooropened\".\n\nwe provide a load of pre-made system events you can override in your skills. let me try to list them all, more are added on regular bases though!\n\n# core events\ndescription\n\ncore events report what's happening under the hood, what the system is doing\n\n# def onstart(self)\ntriggered when alice is starting the skills\n\n# def onstop(self)\ntriggered when alice is stopping the skill. the skill is typically stopped when alice reboots, or after and update\n\n# def onbooted(self)\ntriggered when everything has started. comes after onstart\n\n# def onhotword(self, siteid: str, user: str = constants.unknown_user)\ntriggered when a hotword is heard. a hotword is a universal wakeword that doesn't identify a user\n\n# def onwakeword(self, siteid: str, user: str = constants.unknown_user)\ntriggered when a wakeword is heard. a wakeword is a hotword that identifies a user\n\n# def onhotwordtoggleon(self, siteid: str)\ntriggered when the hotword triggers itself on again. typically, the hotword is turned off once it's been heard, until the dialog is over.\n\n# def onhotwordtoggleoff(self, siteid: str)\ntriggered when the hotword goes off. typically, the hotword is turned off once it's been heard.\n\n# def onsessionstarted(self, session)\ntriggered when a session is started\n\n# def onstartlistening(self, session)\ntriggered when alice starts listening to you, right after the hotword was caught\n\n# def oncaptured(self, session)\ntriggered when alice captured what you said, when you finished talking to her\n\n# def onpartialtextcaptured(self, session, text: str, likelihood: float, seconds: float):\ntriggered every time the asr spits out a part of the utterance it is actively trying to capture.\n\n# def onusercancel(self, session)\ntriggered when the user cancels a dialog. this ends the session and doesn't trigger onintentparsed!\n\n# def onsessiontimeout(self, session)\ntriggered when a session times out\n\n# def onintentnotrecognized(self, session)\ntriggered when the nlu couldn't understand the intent. typically, occurs after oncaptured\n\n# def onsessionerror(self, session)\ntriggered if the session ends with an error\n\n# def onsessionended(self, session)\ntriggered when the session ends\n\n# def onsay(self, session)\ntriggered when alice starts to say something\n\n# def onsayfinished(self, session)\ntriggered when alice has finished speaking\n\n# def onsessionqueued(self, session)\ntriggered when a new session is queued due to the fact there is already one on going\n\n# def onmessage(self, session)\ntriggered when a subscribed mqtt message is received\n\n# def onskillinstalled(self, **kwargs)\ntriggered when a skill has installed. info about what skill can be extracted from kwargs\n\n# def onskillupdated(self, **kwargs)\ntriggered when a skill has updated. info about what skill can be extracted from kwargs\n\n# def onskillinstallfailed(self, **kwargs)\ntriggered when a skill failed installing\n\n# def oninternetconnected(self)\ntriggered when internet connection is back, after a failure. won't trigger on boot!\n\n# def oninternetlost(self)\ntriggered when internet connection is lost.\n\n# def onbroadcastingfornewdevicestart(self, session)\ntriggered when alice starts broadcasting her ip for new devices to discover\n\n# def onbroadcastingfornewdevicestop(self)\ntriggered when alice stops broadcasting her ip for new devices to discover. happens when a new device was added or addition timeouts\n\n# def onauthenticated(self, session)\ntriggered when a user successfully authenticated through his pin code\n\n# def onauthenticationfailed(self, session)\ntriggered when a user failed authentication with his pin code\n\n# def onaudioframe(self, message)\ntriggered when audio frame are coming in through mqtt. can be very consuming!\n\n# def ondeviceconnecting(self)\ntriggered when a device is trying to connect to alice's network\n\n# def ondevicedisconnecting(self)\ntriggered when a device is disconnecting from alice's network\n\n# def onvadup(self, **kwargs):\ntriggered when voice activity is heard\n\n# def onvaddown(self, **kwargs):\ntriggered when voice activity has stopped\n\n# def onnlutrained(self, **kwargs):\ntriggered when the nlu has finished training\n\n# def onsnipsassistantinstalled(self, **kwargs):\ntriggered when the assistant.json file has installed after training\n\n# def onsnipsassistantfailedtraining(self, **kwargs):\ntriggered when the assistant.json file failed training\n\n# user states\ndescription\n\nuser states events report a change of state for a user. example: \"hey alice? i'm going bed!\" would trigger \"ongoingbed\" and change the user state accordingly\n\n# def ongoingbed(self)\ntriggered when a user tells alice he's going bed\n\n# def onsleep(self)\ntriggered when a user tells alice good night\n\n# def onwakeup(self)\ntriggered when a user tells alice good morning\n\n# def onleavinghome(self)\ntriggered when a user tells alice he's leaving home\n\n# def onreturninghome(self)\ntriggered when a user tells alice he's returned home\n\n# def oneating(self)\ntriggered when a user tells alice he's eating\n\n# def onwatchingtv(self)\ntriggered when a user tells alice he's watching tv\n\n# def oncooking(self)\ntriggered when a user tells alice he's cooking\n\n# def onmakeup(self)\ntriggered when a user tells alice he's putting makeup\n\n# def oncontextsensitivedelete(self, sessionid: str)\ntriggered when the user asks, in a context-sensitive scenario, to delete or forget something. example:what's my favorite color?blueforget this!ok\n\n# def oncontextsensitiveedit(self, sessionid: str)\ntriggered when the user asks, in a context-sensitive scenario, to change something. example:what's my favorite color?bluechange this pleasesure, so tell me, what's your new favorite color?greenok\n\n# timed events\ndescription\n\nwhen alice starts, the following events are scheduled. alice does calculate for them to start at the correct time, so it reflects real life clock. thus, onfullhour doesn't mean alice was running an hour on the first round, as if alice start at 9:47, onfullminute would trigger at 900, onfiveminutes at 900, onfullhour and all the others at precisely 1000\n\n# def onfullminute(self)\ntriggered every real time full minute.\n\n# def onfiveminute(self)\ntriggered every real time five minutes. example: 10:15, 10:35; 12:55\n\n# def onquarterhour(self)\ntriggered every real time fifteen minutes. example: 10:15, 7:30; 12:00\n\n# def onfullhour(self)\ntriggered every real time hour.\n\n# telemetry reports\ndescription\n\nalice comes with a telemetry manager skill can use to store weather data. the following events reflect these reports\n\n# def onuvindexalert(self, devicelist: list)\ntriggered when a device reports a uv index out of the limit set by the user\n\n# def onraining(self, devicelist: list)\ntriggered when a device reports rain\n\n# def ontoomuchrain(self, devicelist: list)\ntriggered when a device reports a rain level above the limit set by the user\n\n# def onwindy(self, devicelist: list)\ntriggered when a device reports a wind strength above the limit set by the user\n\n# def onfreezing(self, devicelist: list)\ntriggered when a device reports temperature below 0°c\n\n# def ontemperaturehighalert(self, devicelist: list)\ntriggered when a device reports a temperature above the limit set by the user\n\n# def ontemperaturelowalert(self, devicelist: list)\ntriggered when a device reports a temperature under the limit set by the user\n\n# def onco2alert(self, devicelist: list)\ntriggered when a device reports a co2 level above the limit set by the user\n\n# def onhumidityhighalert(self, devicelist: list)\ntriggered when a device reports a humidity level above the limit set by the user\n\n# def onhumiditylowalert(self, devicelist: list)\ntriggered when a device reports a humidity level under the limit set by the user\n\n# def onnoisealert(self, devicelist: list)\ntriggered when a device reports a sound level above the limit set by the user\n\n# def onpressurehighalert(self, devicelist: list)\ntriggered when a device reports an atmospheric pressure level above the limit set by the user\n\n# def onpressurelowalert(self, devicelist: list)\ntriggered when a device reports an atmospheric pressure level under the limit set by the user\n\n# missing slot info\nsometimes you need more information than what the user provided...\n\n# study case\nlet's take an intent with a few slots, highlighted in the example.\n\nhey alice?yes?can you book me a flight from geneva to new york for tuesday 23 third of april around midday please?of course, let me check that!for this example (and also in reality) a flight can only be booked if\n\n * the user has the intention to book a ticket, which requires the intent to be correctly detected\n * the user provided the following information, aka slots: * origin: where the user wants to depart from\n    * destination: where the user wants to travel to\n    * date: a date and possibly a time at which the user wants to leave\n   \n   \n\n# the potential problem\nnow, let's imagine the following:\n\nhey alice?yes?can you book me a flight from geneva please?the problem is that the user did not provide a destination or a date, for which alice will have to query the user for details.\n\n# the bad solution\nyou could use the classic intent decorators with 4 separate methods, which is not recommended but written here to demonstrate:\n\n@intenthandler('answerfrom')\ndef answerfrom(self, session: dialogsession):\n\tpass\n\n\n@intenthandler('answerto')\ndef answerto(self, session: dialogsession):\n\tpass\n\t\n\t\n@intenthandler('answerdate')\ndef answerdate(self, session: dialogsession):\n\tpass\n\n\n@intenthandler('bookflight')\ndef bookflight(self, session: dialogsession):\n\tpass\n\n\nwell, not that effective, is it? lots of writing only to declare the methods, imagine the work in each of the methods to finally get to book the ticket.\n\n# the good solution\nthis is what i call the fill the glass method, because we come always at the same method until everything is filled.\n\n@intenthandler('answerfrom')\n@intenthandler('answerto')\n@intenthandler('answerdate')\n@intenthandler('bookflight')\ndef bookflight(self, session: dialogsession):\n\tif 'from' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='wherefrom'),\n\t\t\tintentfilter=['answerfrom'],\n\t\t\tslot='from'\n\t\t)\n\t\treturn\n\telif 'to' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='whereto'),\n\t\t\tintentfilter=['answerto']\n\t\t)\n\t\treturn\n\telif 'date' not in session.slots:\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='whatdate'),\n\t\t\tintentfilter=['answerdate']\n\t\t)\n\t\treturn\n\n\t# if we got here, we are sure to have all three required information!\n\t# so we can continue and proceed to the booking!\n\n\nwhat we did here is link our 4 intents to the same method bookflight and we check if all our slots are filled. if not, we ask the user for the information and limit the nlu on the intent that interests us using intentfilter. in the first if condition i even mentioned the slot the nlu should focus on extracting!\n\nas the answer will come back to the same method, the checks will naturally continue until all three are false, and we can proceed to the booking!\n\nmake sure to read builtin intents to understand dialogue state, or you will end up having collisions with other skills!",charsets:{}},{title:"Files in depth",frontmatter:{title:"Files in depth",sidebarDepth:3,tags:["getting started","skill files","dialog template","sample","talk file","structure","slot","utterance","intent","config"]},regularPath:"/skill-development/files-in-depth.html",relativePath:"skill-development/files-in-depth.md",key:"v-43b644ef",path:"/skill-development/files-in-depth.html",headers:[{level:2,title:"Talk files",slug:"talk-files",normalizedTitle:"talk files",charIndex:146},{level:3,title:"Structure",slug:"structure",normalizedTitle:"structure",charIndex:572},{level:3,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:2357},{level:2,title:"Dialog templates",slug:"dialog-templates",normalizedTitle:"dialog templates",charIndex:4360},{level:3,title:"A basic file",slug:"a-basic-file",normalizedTitle:"a basic file",charIndex:4654},{level:3,title:"Let's define an intent",slug:"let-s-define-an-intent",normalizedTitle:"let's define an intent",charIndex:5255},{level:3,title:"Add some variable to our utterances, aka slots",slug:"add-some-variable-to-our-utterances-aka-slots",normalizedTitle:"add some variable to our utterances, aka slots",charIndex:6887},{level:3,title:"Slots declaration",slug:"slots-declaration",normalizedTitle:"slots declaration",charIndex:8054},{level:3,title:"Utterances",slug:"utterances",normalizedTitle:"utterances",charIndex:9372},{level:3,title:"Slot definition",slug:"slot-definition",normalizedTitle:"slot definition",charIndex:10248},{level:2,title:"Skill configuration file",slug:"skill-configuration-file",normalizedTitle:"skill configuration file",charIndex:10790},{level:3,title:"The template file",slug:"the-template-file",normalizedTitle:"the template file",charIndex:11526},{level:3,title:"The generated config file",slug:"the-generated-config-file",normalizedTitle:"the generated config file",charIndex:15951},{level:3,title:"Using the settings in my skill",slug:"using-the-settings-in-my-skill",normalizedTitle:"using the settings in my skill",charIndex:16497},{level:3,title:"Update a config value",slug:"update-a-config-value",normalizedTitle:"update a config value",charIndex:17192},{level:2,title:"en.sample",slug:"en-sample",normalizedTitle:"en.sample",charIndex:17621},{level:3,title:"Example",slug:"example",normalizedTitle:"example",charIndex:698},{level:3,title:"Rules",slug:"rules",normalizedTitle:"rules",charIndex:18657}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Talk files Structure Variables Dialog templates A basic file Let's define an intent Add some variable to our utterances, aka slots Slots declaration Utterances Slot definition Skill configuration file The template file The generated config file Using the settings in my skill Update a config value en.sample Example Rules",content:'# Let\'s go further\nShall we? Don\'t be scared, I\'m just going to show you the content of some files and explain what they do and how they work.\n\n# Talk files\nPro tip\n\nIf you want your assistant to feel natural, be natural. Write her answers how you speak, be friendly, use slang, provide multiple ways of answering\n\nThese files are used by Alice to respond to your requests and should by all means contain at least 2 different ways of answering, optimal would be 5 at least, so she doesn\'t always answer the same.\n\nWe have different ways of defining those text strings.\n\n# Structure\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our Talk file Schema\n\n# Example 1 - A list of strings\nLet\'s take this example:\n\n{\n\t"busy": [\n\t\t"Sorry, but I\'m busy at the moment, please wait.",\n\t\t"Wait a second, I\'m busy at the moment.",\n\t\t"Please wait, I\'m kinda busy right now."\n\t]\n}\n\n\nIn this example, the key is busy and that key is used by skills to retrieve the text to be spoken. It contains a list of 3 different strings, 3 different ways for Alice to choose from when answering. The choice is random, you cannot influence it, but it feels more natural if Alice doesn\'t always answer the same for the same question. This example is the very basic way of defining answers for a skill and is not the preferred way for skills.\n\n# Example 2 - A dictionary of strings\nLet\'s take a look at another example, the preferred way:\n\n{\n\t"confirmAddition": {\n\t\t"default": [\n\t\t\t"Ok, I have added this device.",\n\t\t\t"I added this new device.",\n            "Sure, I just added it!"\n\t\t]\n\t}\n}\n\n\nIn this example the key is confirmAddition but defines a dictionary this time. This dictionary is only defining the default way of answering and is not respectful of users that might have the option use short answers or night mode enabled. In this case, a random default string will be picked by Alice to answer. To respect the use short answers or night mode users, we can define the same as the following:\n\n{\n\t"confirmAddition": {\n\t\t"default": [\n\t\t\t"Ok, I have added this device!",\n\t\t\t"I added this new device!"\n\t\t],\n\t\t"short": [\n\t\t\t"Ok!",\n\t\t\t"Done!"\n\t\t]\n\t}\n}\n\n\nIn the case a user prefers a short answer or has turned on night mode, Alice will pick a random answer from the short list. Otherwise, she will randomly pick from the default list.\n\n# Variables\nThe time you will need variables in your answers will come very fast. Imagine answering for the weather, you cannot make 100 strings declaration for each possible temperatures! Two solutions exist.\n\n# Unindexed variables\nThis is ok to use in case your string only contains one variable but should be avoided in case of more, simply because some languages may have to inverse the position of the variables.\n\n{\n\t"langSwitch": {\n\t\t"default": [\n\t\t\t"Ok, let\'s talk in {} then!",\n\t\t\t"Sure, I can talk in {}",\n\t\t\t"No problem, I\'m switching to {}"\n\t\t],\n\t\t"short": [\n\t\t\t"Ok",\n\t\t\t"Yep"\n\t\t]\n\t}\n}\n\n\nAs you can see, default strings all have a {} weirdness... We call them curly braces. Well, this is your variable! Alice will replace that by the content you tell her. In this example, you could ask her to speak in finnish, and she\'d answer, randomly, with Ok, let\'s talk in finnish then!\n\n# Indexed variables\nThis is better as we define what goes where, as sometimes languages don\'t use the same order. Or sometimes a different way of saying inverts the order of the variables.\n\n{\n\t"noDevice": {\n\t\t"default": [\n\t\t\t"Sorry, no {0} in room {1}",\n\t\t\t"I can\'t, room {1} doesn\'t have any {0}"\n\t\t]\n\t}\n}\n\n\nBy reading this you notice that our curly braces now contain a number. They are the same variable as before but are indexed. If you take the first example, it could translate to Sorry, no satellite in room kitchen and the second would translate to I can\'t, room kitchen doesn\'t have any satellite. You surely have noticed that the room, and the device type variable are reversed in both examples.\n\nPro tip\n\nUse punctuation for your strings! Even at the end of answers, just because it\'s correct, but also because most TTS do respect them and will speak more naturally if punctuated correctly. Talk files also support SSML markup. The <speak> and breath effects are auto-injected, you shouldn\'t add them! If the TTS engine the user is using doesn\'t support SSML, Alice will automatically remove the tags.\n\n# Dialog templates\nThis is the "pièce of resistance", the beef! This defines your , and your in a readable way. Alice will then use this file to train the and components!\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our Dialogue Template Schema\n\n# A basic file\nA basic template look fairly simple, without any defined slot or intent\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [],\n\t"intents": []\n}\n\n\nFour mandatory fields:\n\n * skill: the name of your skill\n * description: the description of your skill, what users will be able to read before installing\n * slotTypes: a list of slot definition, in this case empty\n * intents: a list of intent definition, in this case empty\n\nAnd that\'s it! Every skill must ship with at least this. In this example, it would be a skill without any interaction User -> Alice\n\n# Let\'s define an intent\nOk, say we want the user to be able to say hello to Alice, we need to add an intent to our dialog template:\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [],\n\t"intents": [\n\t\t{\n\t\t\t"name": "HelloWorld_Hello",\n\t\t\t"description": "The user says hello",\n\t\t\t"enabledByDefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"hello alice",\n\t\t\t\t"hi alice",\n\t\t\t\t"konitchiwa alice",\n\t\t\t\t"hey alice",\n\t\t\t\t"aloha alice"\n\t\t\t],\n\t\t\t"slots": []\n\t\t}\t\n\t]\n}\n\n\n * This just defined an intent named HelloWorld_Hello. By standards, your intent names should always be prefixed with the skill name to avoid collisions with other skills.\n   \n   \n * There\'s then the description of that intent, what it does.\n   \n   \n * Comes enabledByDefault that can be either true or false. An intent that is enabled by default can be caught at any time. If disabled, it will only be caught if your script previously activates it. It makes sense to disable intents like "YesOrNo" per example, and only activate it when needed.\n   \n   \n * Next comes the utterances field, which are the ways of indicating your intent you teach to Alice. She will understand that you are using the intent HelloWorld_Hello if you say one of the four provided sentences. It is really important that you add up to at least 15 to 20 different ways of saying for a good training. The NLU then has enough data to start allowing small differences but still guess the correct intent at an acceptable percentage. Do not use punctuation signs and adding capital letters is of no use.\n   \n   \n * The last filed is slots and is empty in the example.\n   \n   \n\n# Add some variable to our utterances, aka slots\nImagine a shopping skill, and an intent to add an item to your shopping list. For sure, you won\'t define 10\'000 utterances with all possible items to say. For that you will use slots\n\n{\n\t"skill": "HelloWorld",\n\t"description": "This is my first skill",\n\t"slotTypes": [\n\t\t{\n\t\t\t"name": "Item",\n\t\t\t"matchingStrictness": null,\n\t\t\t"automaticallyExtensible": true,\n\t\t\t"useSynonyms": true,\n\t\t\t"values": [\n\t\t\t\t{\n\t\t\t\t\t"value": "wheat"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"value": "hawaiian pizza",\n\t\t\t\t\t"synonyms": [\n\t\t\t\t\t\t"hawaii pizza",\n\t\t\t\t\t\t"pizza hawaii"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t"intents": [\n\t\t{\n\t\t\t"name": "HelloWorld_AddItem",\n\t\t\t"description": "The user adds item to his shopping list",\n\t\t\t"enabledByDefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"add {hawaii pizza:=>Item} to my shopping list",\n\t\t\t\t"add {wheat:=>Item} to my shopping list please",\n\t\t\t\t"please add {wheat:=>Item} to my shopping list",\n\t\t\t\t"can you please add {hawaiian pizza:=>Item} to my shopping list"\n\t\t\t],\n\t\t\t"slots": [\n\t\t\t\t{\n\t\t\t\t\t"name": "shopItem",\n\t\t\t\t\t"description": null,\n\t\t\t\t\t"required": false,\n\t\t\t\t\t"type": "Item",\n\t\t\t\t\t"missingQuestion": ""\n\t\t\t\t}\n\t\t\t]\n\t\t}\t\n\t]\n}\n\n\n# Slots declaration\nOk, we went a little higher in our file and added a slot definition to our slotTypes\n\n{\n\t"name": "Item",\n\t"matchingStrictness": null,\n\t"automaticallyExtensible": true,\n\t"useSynonyms": true,\n\t"values": [\n\t\t{\n\t\t\t"value": "wheat"\n\t\t},\n\t\t{\n\t\t\t"value": "hawaiian pizza",\n\t\t\t"synonyms": [\n\t\t\t\t"hawaii pizza",\n\t\t\t\t"pizza hawaii"\n\t\t\t]\n\t\t}\n\t]\n}\n\n\n * name: This is the slot type, that should NEVER be translated\n   \n   \n * matchingStrictness: This is a float, from 0 to 1 or null on how strict the NLU will be on catching the word if small differences are detected.\n   \n   \n * automaticallyExtensible: This allows or forbids, an automatic attempt at catching other words that are not defined in your values.\n   \n   \n * useSynonyms: Allows or forbids the use of synonyms\n   \n   \n * values: Defines your slot possible values\n   \n    * The first one is defined without synonym and the value would be wheat\n    * The second one is defined with synonyms. The raw value would be hawaiian pizze even if you say hawaii pizza, hawaiian pizzaor pizza hawaii. This synonyms field only works if useSynonyms is set to true\n   \n   That\'s it for our definition! We have some Prebuilt slots available. Always check if your slot does not already exist before implementing yours!\n   \n   Now let\'s move to our intent:\n   \n   \n\n# Utterances\n{\n\t"name": "HelloWorld_AddItem",\n\t"description": "The user adds item to his shopping list",\n\t"enabledByDefault": true,\n\t"utterances": [\n\t\t"add {hawaii pizza:=>Item} to my shopping list",\n\t\t"add {wheat:=>Item} to my shopping list please",\n\t\t"please add {wheat:=>Item} to my shopping list",\n\t\t"can you please add {hawaiian pizza:=>Item} to my shopping list"\n\t],\n\t"slots": [\n\t\t{\n\t\t\t"name": "shopItem",\n\t\t\t"description": null,\n\t\t\t"required": false,\n\t\t\t"type": "Item",\n\t\t\t"missingQuestion": ""\n\t\t}\n\t]\n}\n\n\nTake a look at the utterances. You surely see that weird syntax made of curly braces {hawaii pizza:=>Item}. This is our slot! In this case you taught alice that hawaii pizza is of slot type Item, the one you defined just before! It is important to know that slots you use in your intents are first defined, but the value is also declared in the slot definition.\n\n# Slot definition\nWe also have now defined the intent slot itself:\n\n{\n\t"name": "ShopItem",\n\t"description": null,\n\t"required": false,\n\t"type": "Item"\n}\n\n\n * name: This is the name of the slot that is returned to your script and should never be translated\n * description: If you want to add a description of what that slot is\n * required: Leave it at false, or you\'ll lose the ability to have Alice random texts!\n * type: Also never to be translated, this defines of what type that slot is and refers to the slot definition on top of the file\n\n# Skill configuration file\nAt some point, your skill will need some user dependant configuration, per example an api key, a threshold, login or a password. This is where skill configuration files come in the game!\n\nAs a dev you have to provide a skill configuration template file. Based on this file, when Project Alice installs your skill, a config file will be automatically created with your default provided values. If you happen to update your config template, let\'s say, to drop a login and password field in favour of an api key field, Project Alice will detect it and update the configuration file accordingly.\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our Config file Schema\n\n# The template file\nThe name of the file must be config.json.template. Let\'s take a look at our HelloWorld skill that requires some configuration from the user:\n\n{\n\t"login": {\n\t\t"defaultValue": "",\n\t\t"dataType": "string",\n\t\t"isSensitive": false,\n\t\t"description": "Login for the HelloWorld database",\n\t\t"beforeUpdate": "tryConnection",\n\t\t"onUpdate": "reconnect"\n\t},\n\t"password": {\n\t\t"defaultValue": "",\n\t\t"dataType": "string",\n\t\t"isSensitive": true,\n\t\t"description": "Password for the HelloWorld database",\n\t\t"beforeUpdate": "tryConnection",\n\t\t"onUpdate": "reconnect"\n\t},\n\t"autoConnect": {\n\t\t"defaultValue": true,\n\t\t"dataType": "boolean",\n\t\t"isSensitive": false,\n\t\t"description": "Check this is you want HelloWorld to automatically connect to the database"\n\t},\n\t"retries": {\n\t\t"defaultValue": 3,\n\t\t"dataType": "integer",\n\t\t"isSensitive": false,\n\t\t"description": "How many times should the skill retry to connect in case of failure before giving up"\n\t},\n\t"databaseToUse": {\n\t\t"defaultValue": "HelloWorld",\n\t\t"dataType": "list",\n\t\t"isSensitive": false,\n\t\t"values": ["HelloWord", "ByeByeWorld", "HelloKitty"],\n\t\t"description": "Choose which database to connect to"\n\t},\n\t"language": {\n\t\t"defaultValue": "en",\n\t\t"dataType": "list",\n\t\t"isSensitive": false,\n\t\t"values": {"English": "en", "Français": "fr", "Deutsch":  "de"},\n\t\t"description": "Choose what language to use"\n\t},\n\t"maxTries": {\n\t\t"defaultValue": 3,\n\t\t"dataType": "range",\n\t\t"min": 1,\n\t\t"max": 5,\n\t\t"step": 1,\n\t\t"isSensitive": false,\n\t\t"description": "How many times should a user be allowed to fail authentication"\n\t},\n\t"notes": {\n\t\t"defaultValue": "",\n\t\t"dataType": "longstring",\n\t\t"isSensitive": false,\n\t\t"description": "Anything you would like to add?"\n\t}\n}\n\n\nWith the above example you have the full overview of what is supported. As you might have understood, we define each config by a name, this is the name you will use then in code to get the set value. We can then define a default value to use, a datatype and in case of lists, a list of value.\n\nIn our example:\n\n * login is a string, the text will be visible to the user.\n * password is a string, the text won\'t be visible thanks to the "isSensitive" option.\n * autoConnect is a boolean, true or false, or on or off. This will display a checkbox.\n * retries is an integer. An integer is a full number, such as 1, 5, 9563, with no trailing decimals.\n * databaseToUse is a list of type list. It means it will display a dropdown field containing the defined values.\n * language is a list of type dictionary. The difference with the above list, is that it will display the key (in this case "English" / "Français" / "Deutsch") in a dropdown field, but the value selected will be "en" or "fr" or "de". Useful when you have values to set that are not natural, the language example shows it well enough, it is nicer to display the full language name for the user to choose than a list with language codes.\n * maxTries is a slider. It needs to have a default value, a minimum allowed value, a maximum allowed value and a step which defines the increment by which the value is modified by each slider step. This setting cannot be made sensitive.\n * notes is a textarea, a text input that handles multiple lines.\n\nSo we have, as setting types:\n\n * string\n * longstring\n * boolean\n * integer\n * list\n * range\n\nThere are three more options you can add to any configuration!\n\n * "isSensitive": true|false: If true, the setting\'s value won\'t be shown, but replaced with * as passwords do per exemple. Cannot be applied to range configuration.\n   \n   \n * "display": "hidden": Hides the configuration field for the user. What\'s the use then? Well, imagine a skill that requires an API key but to retrieve this api key, one needs his login and password. I\'d make "login" and "password" visible configurations, so the user can fill them, and the api key be hidden. My skill would use the login and password fields to automatically retrieve the api key and set it for next uses. The user doesn\'t need to change or see that api configuration.\n   \n   \n * "beforeUpdate": "checkValue": Replace "checkValue" with any method name in your skill and that method will be triggered before the value update passes. The method must return a boolean.\n   \n   \n * "onUpdate": "reconnect": Replace "reconnect" with any method name in your skill and that method will be triggered every time the user updates that configuration field.\n   \n   \n\n# The generated config file\nWhen Alice loads her configuration she also loads all her active skills configurations. If there\'s a config template file available but no config file (config.json), she\'ll auto generate that said file! That file is git ignored, so it cannot be pushed on your repository, keeping your personal data safe. This is how the template example would look like:\n\n{\n  "login": "",\n  "password": "",\n  "autoConnect": true,\n  "retries": 3,\n  "databaseToUse": "HelloWorld",\n  "language": "en",\n  "maxTries": 3,\n  "notes": ""\n}\n\n\n# Using the settings in my skill\nNow that you have created your template, it\'s time to use those settings in your skill! Happy you, it\'s very easy!\n\nconfigValue = self.getConfig(\'login\')\n\n\nThat all! This will grab the login setting value, for your skill!\n\nAnother way to access the settings, for another skill per example:\n\nconfigValue = self.ConfigManager.getSkillConfigByName(\'skillName\', \'configName\')\n\n\nThis will grab the setting configName from the skill skillName\n\nAnd if you don\'t have access to self, in a class method per example:\n\nconfigValue = SuperManager.getInstance().configManager.getSkillConfigByName(\'skillName\', \'configName\')\n\n\nI let you guess what it does.... Same as above!\n\n# Update a config value\nIf for some reason you need to programmatically update a setting value, say the api key is not valid anymore, you can do it easily!\n\nself.updateConfig(\'configName\', \'configNewValue\')\n\n\nor\n\nself.ConfigManager.updateSkillConfigurationFile(\'skillName\', \'configName\', \'configNewValue\')\n\n\nor\n\nSuperManager.getInstance().configManager.updateSkillConfigurationFile(\'skillName\', \'configName\', \'configNewValue\')\n\n\n# en.sample\nEver got frustrated because something you ask your assistant isn\'t understood? What if I told you that Alice can try to find a on our skills store that could fulfill your request?\n\nThere\'s no black magic behind this, simply a little work for the dev to make it work! When a new version of your skill is published, our store is updated automagically. During this process, it also looks for files, in the dialogTemplate directory, with the .sample extension. The file is named after whatever language is contains, example en.sample or de.sample.\n\n# Example\nThe structure of the file is really simple! It\'s a json file that contains a list... Let\'s check an example, for the DateDayTimeYear \n\n[\n\t"what time is it",\n\t"what\'s the date",\n\t"what is the year",\n\t"what is the day",\n\t"tell me the time",\n\t"tell me the date",\n\t"time",\n\t"date"\n]\n\n\nThis file is named en.sample and is placed in dialogTemplate directory. Its content defines, or tries to guess, the most common ways a lambda user would ask or say to trigger your skill.\n\n# Rules\nThere aren\'t many rules about this file but keep these in mind:\n\n * Politeness forms are removed, so don\'t add please or could you or stuff like that.\n * The file is limited to 10 samples.\n * Do not use punctuations.\n * Try to think out of the box and find casual samples, like, everyday usage forms.\n * Do not cover disabledByDefault intents, or answer intents such as yes/no.\n * Think about it as What do I definitely want my skill to react to?\n\nPro tip\n\nRemember speakableName from the installation file? Well, this is why it exists! Alice will use that speakableName to propose your skill to download.',normalizedContent:'# let\'s go further\nshall we? don\'t be scared, i\'m just going to show you the content of some files and explain what they do and how they work.\n\n# talk files\npro tip\n\nif you want your assistant to feel natural, be natural. write her answers how you speak, be friendly, use slang, provide multiple ways of answering\n\nthese files are used by alice to respond to your requests and should by all means contain at least 2 different ways of answering, optimal would be 5 at least, so she doesn\'t always answer the same.\n\nwe have different ways of defining those text strings.\n\n# structure\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our talk file schema\n\n# example 1 - a list of strings\nlet\'s take this example:\n\n{\n\t"busy": [\n\t\t"sorry, but i\'m busy at the moment, please wait.",\n\t\t"wait a second, i\'m busy at the moment.",\n\t\t"please wait, i\'m kinda busy right now."\n\t]\n}\n\n\nin this example, the key is busy and that key is used by skills to retrieve the text to be spoken. it contains a list of 3 different strings, 3 different ways for alice to choose from when answering. the choice is random, you cannot influence it, but it feels more natural if alice doesn\'t always answer the same for the same question. this example is the very basic way of defining answers for a skill and is not the preferred way for skills.\n\n# example 2 - a dictionary of strings\nlet\'s take a look at another example, the preferred way:\n\n{\n\t"confirmaddition": {\n\t\t"default": [\n\t\t\t"ok, i have added this device.",\n\t\t\t"i added this new device.",\n            "sure, i just added it!"\n\t\t]\n\t}\n}\n\n\nin this example the key is confirmaddition but defines a dictionary this time. this dictionary is only defining the default way of answering and is not respectful of users that might have the option use short answers or night mode enabled. in this case, a random default string will be picked by alice to answer. to respect the use short answers or night mode users, we can define the same as the following:\n\n{\n\t"confirmaddition": {\n\t\t"default": [\n\t\t\t"ok, i have added this device!",\n\t\t\t"i added this new device!"\n\t\t],\n\t\t"short": [\n\t\t\t"ok!",\n\t\t\t"done!"\n\t\t]\n\t}\n}\n\n\nin the case a user prefers a short answer or has turned on night mode, alice will pick a random answer from the short list. otherwise, she will randomly pick from the default list.\n\n# variables\nthe time you will need variables in your answers will come very fast. imagine answering for the weather, you cannot make 100 strings declaration for each possible temperatures! two solutions exist.\n\n# unindexed variables\nthis is ok to use in case your string only contains one variable but should be avoided in case of more, simply because some languages may have to inverse the position of the variables.\n\n{\n\t"langswitch": {\n\t\t"default": [\n\t\t\t"ok, let\'s talk in {} then!",\n\t\t\t"sure, i can talk in {}",\n\t\t\t"no problem, i\'m switching to {}"\n\t\t],\n\t\t"short": [\n\t\t\t"ok",\n\t\t\t"yep"\n\t\t]\n\t}\n}\n\n\nas you can see, default strings all have a {} weirdness... we call them curly braces. well, this is your variable! alice will replace that by the content you tell her. in this example, you could ask her to speak in finnish, and she\'d answer, randomly, with ok, let\'s talk in finnish then!\n\n# indexed variables\nthis is better as we define what goes where, as sometimes languages don\'t use the same order. or sometimes a different way of saying inverts the order of the variables.\n\n{\n\t"nodevice": {\n\t\t"default": [\n\t\t\t"sorry, no {0} in room {1}",\n\t\t\t"i can\'t, room {1} doesn\'t have any {0}"\n\t\t]\n\t}\n}\n\n\nby reading this you notice that our curly braces now contain a number. they are the same variable as before but are indexed. if you take the first example, it could translate to sorry, no satellite in room kitchen and the second would translate to i can\'t, room kitchen doesn\'t have any satellite. you surely have noticed that the room, and the device type variable are reversed in both examples.\n\npro tip\n\nuse punctuation for your strings! even at the end of answers, just because it\'s correct, but also because most tts do respect them and will speak more naturally if punctuated correctly. talk files also support ssml markup. the <speak> and breath effects are auto-injected, you shouldn\'t add them! if the tts engine the user is using doesn\'t support ssml, alice will automatically remove the tags.\n\n# dialog templates\nthis is the "piece of resistance", the beef! this defines your , and your in a readable way. alice will then use this file to train the and components!\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our dialogue template schema\n\n# a basic file\na basic template look fairly simple, without any defined slot or intent\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [],\n\t"intents": []\n}\n\n\nfour mandatory fields:\n\n * skill: the name of your skill\n * description: the description of your skill, what users will be able to read before installing\n * slottypes: a list of slot definition, in this case empty\n * intents: a list of intent definition, in this case empty\n\nand that\'s it! every skill must ship with at least this. in this example, it would be a skill without any interaction user -> alice\n\n# let\'s define an intent\nok, say we want the user to be able to say hello to alice, we need to add an intent to our dialog template:\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [],\n\t"intents": [\n\t\t{\n\t\t\t"name": "helloworld_hello",\n\t\t\t"description": "the user says hello",\n\t\t\t"enabledbydefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"hello alice",\n\t\t\t\t"hi alice",\n\t\t\t\t"konitchiwa alice",\n\t\t\t\t"hey alice",\n\t\t\t\t"aloha alice"\n\t\t\t],\n\t\t\t"slots": []\n\t\t}\t\n\t]\n}\n\n\n * this just defined an intent named helloworld_hello. by standards, your intent names should always be prefixed with the skill name to avoid collisions with other skills.\n   \n   \n * there\'s then the description of that intent, what it does.\n   \n   \n * comes enabledbydefault that can be either true or false. an intent that is enabled by default can be caught at any time. if disabled, it will only be caught if your script previously activates it. it makes sense to disable intents like "yesorno" per example, and only activate it when needed.\n   \n   \n * next comes the utterances field, which are the ways of indicating your intent you teach to alice. she will understand that you are using the intent helloworld_hello if you say one of the four provided sentences. it is really important that you add up to at least 15 to 20 different ways of saying for a good training. the nlu then has enough data to start allowing small differences but still guess the correct intent at an acceptable percentage. do not use punctuation signs and adding capital letters is of no use.\n   \n   \n * the last filed is slots and is empty in the example.\n   \n   \n\n# add some variable to our utterances, aka slots\nimagine a shopping skill, and an intent to add an item to your shopping list. for sure, you won\'t define 10\'000 utterances with all possible items to say. for that you will use slots\n\n{\n\t"skill": "helloworld",\n\t"description": "this is my first skill",\n\t"slottypes": [\n\t\t{\n\t\t\t"name": "item",\n\t\t\t"matchingstrictness": null,\n\t\t\t"automaticallyextensible": true,\n\t\t\t"usesynonyms": true,\n\t\t\t"values": [\n\t\t\t\t{\n\t\t\t\t\t"value": "wheat"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"value": "hawaiian pizza",\n\t\t\t\t\t"synonyms": [\n\t\t\t\t\t\t"hawaii pizza",\n\t\t\t\t\t\t"pizza hawaii"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t"intents": [\n\t\t{\n\t\t\t"name": "helloworld_additem",\n\t\t\t"description": "the user adds item to his shopping list",\n\t\t\t"enabledbydefault": true,\n\t\t\t"utterances": [\n\t\t\t\t"add {hawaii pizza:=>item} to my shopping list",\n\t\t\t\t"add {wheat:=>item} to my shopping list please",\n\t\t\t\t"please add {wheat:=>item} to my shopping list",\n\t\t\t\t"can you please add {hawaiian pizza:=>item} to my shopping list"\n\t\t\t],\n\t\t\t"slots": [\n\t\t\t\t{\n\t\t\t\t\t"name": "shopitem",\n\t\t\t\t\t"description": null,\n\t\t\t\t\t"required": false,\n\t\t\t\t\t"type": "item",\n\t\t\t\t\t"missingquestion": ""\n\t\t\t\t}\n\t\t\t]\n\t\t}\t\n\t]\n}\n\n\n# slots declaration\nok, we went a little higher in our file and added a slot definition to our slottypes\n\n{\n\t"name": "item",\n\t"matchingstrictness": null,\n\t"automaticallyextensible": true,\n\t"usesynonyms": true,\n\t"values": [\n\t\t{\n\t\t\t"value": "wheat"\n\t\t},\n\t\t{\n\t\t\t"value": "hawaiian pizza",\n\t\t\t"synonyms": [\n\t\t\t\t"hawaii pizza",\n\t\t\t\t"pizza hawaii"\n\t\t\t]\n\t\t}\n\t]\n}\n\n\n * name: this is the slot type, that should never be translated\n   \n   \n * matchingstrictness: this is a float, from 0 to 1 or null on how strict the nlu will be on catching the word if small differences are detected.\n   \n   \n * automaticallyextensible: this allows or forbids, an automatic attempt at catching other words that are not defined in your values.\n   \n   \n * usesynonyms: allows or forbids the use of synonyms\n   \n   \n * values: defines your slot possible values\n   \n    * the first one is defined without synonym and the value would be wheat\n    * the second one is defined with synonyms. the raw value would be hawaiian pizze even if you say hawaii pizza, hawaiian pizzaor pizza hawaii. this synonyms field only works if usesynonyms is set to true\n   \n   that\'s it for our definition! we have some prebuilt slots available. always check if your slot does not already exist before implementing yours!\n   \n   now let\'s move to our intent:\n   \n   \n\n# utterances\n{\n\t"name": "helloworld_additem",\n\t"description": "the user adds item to his shopping list",\n\t"enabledbydefault": true,\n\t"utterances": [\n\t\t"add {hawaii pizza:=>item} to my shopping list",\n\t\t"add {wheat:=>item} to my shopping list please",\n\t\t"please add {wheat:=>item} to my shopping list",\n\t\t"can you please add {hawaiian pizza:=>item} to my shopping list"\n\t],\n\t"slots": [\n\t\t{\n\t\t\t"name": "shopitem",\n\t\t\t"description": null,\n\t\t\t"required": false,\n\t\t\t"type": "item",\n\t\t\t"missingquestion": ""\n\t\t}\n\t]\n}\n\n\ntake a look at the utterances. you surely see that weird syntax made of curly braces {hawaii pizza:=>item}. this is our slot! in this case you taught alice that hawaii pizza is of slot type item, the one you defined just before! it is important to know that slots you use in your intents are first defined, but the value is also declared in the slot definition.\n\n# slot definition\nwe also have now defined the intent slot itself:\n\n{\n\t"name": "shopitem",\n\t"description": null,\n\t"required": false,\n\t"type": "item"\n}\n\n\n * name: this is the name of the slot that is returned to your script and should never be translated\n * description: if you want to add a description of what that slot is\n * required: leave it at false, or you\'ll lose the ability to have alice random texts!\n * type: also never to be translated, this defines of what type that slot is and refers to the slot definition on top of the file\n\n# skill configuration file\nat some point, your skill will need some user dependant configuration, per example an api key, a threshold, login or a password. this is where skill configuration files come in the game!\n\nas a dev you have to provide a skill configuration template file. based on this file, when project alice installs your skill, a config file will be automatically created with your default provided values. if you happen to update your config template, let\'s say, to drop a login and password field in favour of an api key field, project alice will detect it and update the configuration file accordingly.\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our config file schema\n\n# the template file\nthe name of the file must be config.json.template. let\'s take a look at our helloworld skill that requires some configuration from the user:\n\n{\n\t"login": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "string",\n\t\t"issensitive": false,\n\t\t"description": "login for the helloworld database",\n\t\t"beforeupdate": "tryconnection",\n\t\t"onupdate": "reconnect"\n\t},\n\t"password": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "string",\n\t\t"issensitive": true,\n\t\t"description": "password for the helloworld database",\n\t\t"beforeupdate": "tryconnection",\n\t\t"onupdate": "reconnect"\n\t},\n\t"autoconnect": {\n\t\t"defaultvalue": true,\n\t\t"datatype": "boolean",\n\t\t"issensitive": false,\n\t\t"description": "check this is you want helloworld to automatically connect to the database"\n\t},\n\t"retries": {\n\t\t"defaultvalue": 3,\n\t\t"datatype": "integer",\n\t\t"issensitive": false,\n\t\t"description": "how many times should the skill retry to connect in case of failure before giving up"\n\t},\n\t"databasetouse": {\n\t\t"defaultvalue": "helloworld",\n\t\t"datatype": "list",\n\t\t"issensitive": false,\n\t\t"values": ["helloword", "byebyeworld", "hellokitty"],\n\t\t"description": "choose which database to connect to"\n\t},\n\t"language": {\n\t\t"defaultvalue": "en",\n\t\t"datatype": "list",\n\t\t"issensitive": false,\n\t\t"values": {"english": "en", "francais": "fr", "deutsch":  "de"},\n\t\t"description": "choose what language to use"\n\t},\n\t"maxtries": {\n\t\t"defaultvalue": 3,\n\t\t"datatype": "range",\n\t\t"min": 1,\n\t\t"max": 5,\n\t\t"step": 1,\n\t\t"issensitive": false,\n\t\t"description": "how many times should a user be allowed to fail authentication"\n\t},\n\t"notes": {\n\t\t"defaultvalue": "",\n\t\t"datatype": "longstring",\n\t\t"issensitive": false,\n\t\t"description": "anything you would like to add?"\n\t}\n}\n\n\nwith the above example you have the full overview of what is supported. as you might have understood, we define each config by a name, this is the name you will use then in code to get the set value. we can then define a default value to use, a datatype and in case of lists, a list of value.\n\nin our example:\n\n * login is a string, the text will be visible to the user.\n * password is a string, the text won\'t be visible thanks to the "issensitive" option.\n * autoconnect is a boolean, true or false, or on or off. this will display a checkbox.\n * retries is an integer. an integer is a full number, such as 1, 5, 9563, with no trailing decimals.\n * databasetouse is a list of type list. it means it will display a dropdown field containing the defined values.\n * language is a list of type dictionary. the difference with the above list, is that it will display the key (in this case "english" / "francais" / "deutsch") in a dropdown field, but the value selected will be "en" or "fr" or "de". useful when you have values to set that are not natural, the language example shows it well enough, it is nicer to display the full language name for the user to choose than a list with language codes.\n * maxtries is a slider. it needs to have a default value, a minimum allowed value, a maximum allowed value and a step which defines the increment by which the value is modified by each slider step. this setting cannot be made sensitive.\n * notes is a textarea, a text input that handles multiple lines.\n\nso we have, as setting types:\n\n * string\n * longstring\n * boolean\n * integer\n * list\n * range\n\nthere are three more options you can add to any configuration!\n\n * "issensitive": true|false: if true, the setting\'s value won\'t be shown, but replaced with * as passwords do per exemple. cannot be applied to range configuration.\n   \n   \n * "display": "hidden": hides the configuration field for the user. what\'s the use then? well, imagine a skill that requires an api key but to retrieve this api key, one needs his login and password. i\'d make "login" and "password" visible configurations, so the user can fill them, and the api key be hidden. my skill would use the login and password fields to automatically retrieve the api key and set it for next uses. the user doesn\'t need to change or see that api configuration.\n   \n   \n * "beforeupdate": "checkvalue": replace "checkvalue" with any method name in your skill and that method will be triggered before the value update passes. the method must return a boolean.\n   \n   \n * "onupdate": "reconnect": replace "reconnect" with any method name in your skill and that method will be triggered every time the user updates that configuration field.\n   \n   \n\n# the generated config file\nwhen alice loads her configuration she also loads all her active skills configurations. if there\'s a config template file available but no config file (config.json), she\'ll auto generate that said file! that file is git ignored, so it cannot be pushed on your repository, keeping your personal data safe. this is how the template example would look like:\n\n{\n  "login": "",\n  "password": "",\n  "autoconnect": true,\n  "retries": 3,\n  "databasetouse": "helloworld",\n  "language": "en",\n  "maxtries": 3,\n  "notes": ""\n}\n\n\n# using the settings in my skill\nnow that you have created your template, it\'s time to use those settings in your skill! happy you, it\'s very easy!\n\nconfigvalue = self.getconfig(\'login\')\n\n\nthat all! this will grab the login setting value, for your skill!\n\nanother way to access the settings, for another skill per example:\n\nconfigvalue = self.configmanager.getskillconfigbyname(\'skillname\', \'configname\')\n\n\nthis will grab the setting configname from the skill skillname\n\nand if you don\'t have access to self, in a class method per example:\n\nconfigvalue = supermanager.getinstance().configmanager.getskillconfigbyname(\'skillname\', \'configname\')\n\n\ni let you guess what it does.... same as above!\n\n# update a config value\nif for some reason you need to programmatically update a setting value, say the api key is not valid anymore, you can do it easily!\n\nself.updateconfig(\'configname\', \'confignewvalue\')\n\n\nor\n\nself.configmanager.updateskillconfigurationfile(\'skillname\', \'configname\', \'confignewvalue\')\n\n\nor\n\nsupermanager.getinstance().configmanager.updateskillconfigurationfile(\'skillname\', \'configname\', \'confignewvalue\')\n\n\n# en.sample\never got frustrated because something you ask your assistant isn\'t understood? what if i told you that alice can try to find a on our skills store that could fulfill your request?\n\nthere\'s no black magic behind this, simply a little work for the dev to make it work! when a new version of your skill is published, our store is updated automagically. during this process, it also looks for files, in the dialogtemplate directory, with the .sample extension. the file is named after whatever language is contains, example en.sample or de.sample.\n\n# example\nthe structure of the file is really simple! it\'s a json file that contains a list... let\'s check an example, for the datedaytimeyear \n\n[\n\t"what time is it",\n\t"what\'s the date",\n\t"what is the year",\n\t"what is the day",\n\t"tell me the time",\n\t"tell me the date",\n\t"time",\n\t"date"\n]\n\n\nthis file is named en.sample and is placed in dialogtemplate directory. its content defines, or tries to guess, the most common ways a lambda user would ask or say to trigger your skill.\n\n# rules\nthere aren\'t many rules about this file but keep these in mind:\n\n * politeness forms are removed, so don\'t add please or could you or stuff like that.\n * the file is limited to 10 samples.\n * do not use punctuations.\n * try to think out of the box and find casual samples, like, everyday usage forms.\n * do not cover disabledbydefault intents, or answer intents such as yes/no.\n * think about it as what do i definitely want my skill to react to?\n\npro tip\n\nremember speakablename from the installation file? well, this is why it exists! alice will use that speakablename to propose your skill to download.',charsets:{cjk:!0}},{title:"Going further",frontmatter:{title:"Going further",sidebarDepth:6,tags:["widget","device","node red","nr","css","api","structure"]},regularPath:"/skill-development/going-further.html",relativePath:"skill-development/going-further.md",key:"v-2f01e9b6",path:"/skill-development/going-further.html",headers:[{level:2,title:"Widgets",slug:"widgets",normalizedTitle:"widgets",charIndex:224},{level:3,title:"Widgets structure",slug:"widgets-structure",normalizedTitle:"widgets structure",charIndex:687},{level:3,title:"Widget calls to Alice Core",slug:"widget-calls-to-alice-core",normalizedTitle:"widget calls to alice core",charIndex:2987},{level:3,title:"Widget JS methods invoked by Alice",slug:"widget-js-methods-invoked-by-alice",normalizedTitle:"widget js methods invoked by alice",charIndex:6751},{level:3,title:"Built-in css rules",slug:"built-in-css-rules",normalizedTitle:"built-in css rules",charIndex:7599},{level:2,title:"Node-red",slug:"node-red",normalizedTitle:"node-red",charIndex:8908},{level:2,title:"Devices",slug:"devices",normalizedTitle:"devices",charIndex:6279}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Widgets Widgets structure Widget calls to Alice Core Widget JS methods invoked by Alice Built-in css rules Node-red Devices",content:'# Intro\nOk, so far so good, you\'ve discovered many aspects of a skill. The good news is that this is a never ending learning experience, and we\'ve implemented far more features for your skill to be as useful as possible!\n\n# Widgets\nWidgets are little tiles that a user can add to the interface home screen. They provide a quick overview or functions to your skills. Think a Philips Hue lamp adding a widget for every lamp the user has connected, allowing the user to click on the widget to toggle the light state. Or a widget for a shopping list displaying what\'s currently in your list. Or a widget displaying the temperature at your Netatmo devices. Or... Well, you got it I guess?\n\n# Widgets structure\nWidgets come embedded with your skill. They are not mandatory but can be a nice addition for users using the interface. You can add more than one widget per skill, and the user decides which ones to use. To add a widget you must create the following structure in your existing skill structure, our HelloWorld skill:\n\n.\n├─ widgets\n│  └─ css\n│     └─ Helloworld.css\n│  └─ img\n│     └─ .gitkeep\n│  └─ js\n│     └─ Helloworld.js\n│  └─ lang\n│     └─ Helloworld.lang.json\n│  └─ templates\n│     └─ Helloworld.html\n│  └─ __init__.py\n│  └─ HelloWorldWidget.py\n\n\nLet\'s break down this structure!\n\n# css/Helloworld.css\nThis is your widget dedicated css file! The default content should be as follows:\n\n.Helloworld {\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n  box-sizing: border-box;\n}\n\n\n# img\nIf your widgets uses image files, such as backgrounds, you could place them here, for organisation\'s sake.\n\n# js/Helloworld.js\nThe engine of your widget! If your widget is interactive, you can code whatever you want in there! A basic file should look like:\n\nclass Helloworld_Helloworld extends Widget {\n\n  constructor(uid, widgetId) {\n    super(uid, widgetId);\n  }\n}\n\n\nOk, so guidance here...\n\nFirst you should know that users can add your widget as many times as they want on the same page. If you\'ve ever done some HTML and/or javascript, you can immediately think about id collisions. Project Alice overcomes this issue by doing some magic for you, given you\'ve followed the structure very strictly.\n\n * Your widget is a class\n * The class name is of that type: Skillname_Widgetname. This is very important\n * The class extends an inbuilt Widget class. You can find it here. It is served through our API. The widget class is evolving, but for now offers * Easy access to the widget\'s main div with this.myDiv. It then accepts querySelectors from javascript.\n    * Easy way and hassle-free method to connect your widget to Alice\'s Mqtt server: Your widget calls this.subscribe(\'hermes/dialog/sessionStarted\', this.myCallbackFunction). As soon as something is published on \'hermes/dialog/sessionStarted\' your widget\'s myCallbackFunction will be called with the mqtt message as argument.\n    * Easy access to Alice\'s settings with this.aliceSettings\n    * Alice API calls with this.mySkill (see Widget calls to Alice Core)\n   \n   \n * The class constructor receives 2 immutable arguments: * uid: This uid is generated by the interface when loading the widgets. This uid is going to be appended to your widget main div\n    * widgetId: A reference to the widget row insert id from Alice\'s database.\n   \n   \n\nApart from that, you are free to do what you want!\n\n# lang/Helloworld.lang.json\nThis file can be used if your widget displays texts, such as html field labels, buttons or whatever that has text that should be translated. Remember what languages you made your skill compatible with! Your widget should support them too! The structure is the following:\n\n{\n\t"en": {\n\t\t"title": "Hello all"\n\t},\n\t"de": {\n\t\t"title": "Hallo zusammen"\n\t},\n\t"fr": {\n\t\t"title": "Hello à tous"\n\t}\n}\n\n\n# templates/Helloworld.html\nThis is what is rendered on the home page, it\'s your widget! A basic widget file looks like:\n\n<widget>\n  <icon>fas fa-biohazard</icon>\n  <div class="Helloworld" data-ref="Helloworld_Helloworld"></div>\n</widget>\n\n\nWe first define a widget as container and set its icon tp fas fa-biohazard. You can get other icons, from the free icons, on Fontawesome. These custom tags will be removed when parsed by Alice. What stays is the divof class Helloworld. It\'s important to note that there\'s no id, but a data-ref following the same naming convention as your javascript class! This is used by Alice to identify the widget instance and gets the uid appended.\n\nAlso, do you remember the language file? Using automatic translation isn\'t that hard! Instead of hardcoding your language string, simply replace it by {{ lang.yourStringIndex }}. This will automatically be replaced by, if your Alice instance runs in english, HelloWorldWidget.json[\'en\'][\'yourStringIndex\']\n\n# HelloWorldWidget.py\nThis is what makes your widget be loaded by Alice! A raw widget python file would be:\n\nimport sqlite3\n\nfrom core.webui.model.Widget import Widget\nfrom core.webui.model.WidgetSizes import WidgetSizes\n\n\nclass Helloworld(Widget):\n\n\tDEFAULT_SIZE = WidgetSizes.w_small\n\tDEFAULT_OPTIONS: dict = dict()\n\n\tdef __init__(self, data: sqlite3.Row):\n\t\tsuper().__init__(data)\n\n\nLet\'s take a little look at this!\n\n * SIZE: Defines the size your widget is going to render, in pixels:\n   \n    * w_tiny: 50x50\n    * w_tiny_wide: 100x50\n    * w_tiny_tall: 50x100\n    * \n    * w_small: 100x100\n    * w_small_wide: 200x100\n    * w_small_tall: 100x200\n    * \n    * w: 200x200\n    * w_wide: 300x200\n    * w_tall: 200x300\n    * \n    * w_large: 300x300\n    * w_large_wide: 400x300\n    * w_large_tall: 300x400\n    * \n    * w_extralarge: 500x500\n    * w_extralarge_wide: 700x500\n    * w_extralarge_tall: 500x700\n   \n   \n * OPTIONS\n   \n    * To be implemented, but will allow widget options\n   \n   \n\n# Widget calls to Alice Core\nBeside the API we also have the possibility for your widgets to call functions on the core directly! You want to know the best? It\'s very simple! Simply code your python function in your widget python file and make it return a dict (that will become a JS json object). In the example below, the function is getLocks, in your widget script\n\nclass Lock(Widget):\n\n\tDEFAULT_SIZE = WidgetSizes.w_wide\n\n\tdef getLocks(self) -> dict:\n\t\treturn {device.uid: device.toDict() for device in self.skillInstance.myDevices.values()}\n\n\nIn your JS, you can access this python function asynchronously just by calling\n\nself.mySkill.getLocks()\n\nThis returns a promise, which you can handle with then() such as\n\nself.mySkill.getLocks().then(response => response.json()).then(data => {console.log(data})\n\nYou can also pass arguments directly:\n\nself.mySkill.toggleLock({\'uid\': uid}) will call its python counterpart\n\n\tdef toggleLock(self, uid: str):\n\t\tself.skillInstance.toggleLock(uid=uid)\n\n\n# Widget JS methods invoked by Alice\nDuring display of a widget there a few methods Alice will call to keep everything clean and updated. The following chapter will handle these methods\n\n# refresh()\nCalled when the widgets settings are changed after the settings window is closed. Use this to directly react to new settings. Reload new information, adjust the display - you know best what changes are required for your new settings!\n\n# onResize(target, width, height, delta, direction)\nCalled while the widget is resized by the user. Use this to reorganize the widget, add more information to use the new space, or simplify it, when there is not that much space left.\n\n# stop()\nCalled when the page is switched in the UI and all widgets have to stop their execution. Usually you want to stop all periodic jobs and refreshes when stop() is called.\n\n# Built-in css rules\nThe interface loads our css rules, and these are available at all time! Let me try to list the ones that are most important for you as a widget dev!\n\n# Variables\nWe have some variables set for you to use in your widgets:\n\n# --hover : Color of a link when hovered\n# --mainBG : Main color of the background\n# --windowBG : Color of windows above the main background\n# --secondary : Secondary color of windows above the main background\n# --accent : Accentuated color, for items that need to draw attention\n# --text : Texts color\n# --normal: Normal font\n# --light: Light font\n# --medium: Medium font\n# --bold: Bold font\n# --italic: Italic font\n# --lightItalic: Light italic font\n# --mediumItalic: Medium italic font\n# --boldItalic: Bold italic font\n# --monospace: Monospace font\n# Classes\nSome reusable classes\n\n# .tileContainer : If you need to create a tile system, this is used for the container\n# .tile : If you create tiles, use this class for them\n# .red : Red color for texts\n# .disabled : Red color for texts\n# .warning : Red color for texts\n# .green : Green color for texts\n# .saved : Green color for texts\n# .yellow : Yellow color for texts\n# .active : Yellow color for texts\n# .saving : Yellow color for texts\n# .hidden : Display None\n# .button : If you use buttons, use this class\n# Node-red\nWIP\n\n# Devices\nWIP If you want to include custom devices into your skill, the folders structure is enhanced by a devices folder:\n\n.\n├─ devices\n│  ├─ img\n|  |  ├─ customImage.png\n│  |  └─ yourDevice.png\n|  ├─ __init__.py\n|  ├─ yourDevice.config.template\n│  └─ yourDevice.py\n\n\nThe default image is always named like your device and has a png-extension. You can provide different images by overwriting the method getDeviceIcon. For now only .png is possible\n\nyourDevice.py must extend Device and include at least a redefinition for:\n\n\t@classmethod\n\tdef getDeviceTypeDefinition(cls) -> dict:\n\t\treturn { \'deviceTypeName\'        : \'yourDevice\',\t\t\t# Must match your class name\n\t\t         \'perLocationLimit\'      : 0,\t\t\t\t\t# How many devices are allowed per location, with 0 being unlimited\n\t\t         \'totalDeviceLimit\'      : 0,\t\t\t\t\t# How many devices are allowed in total, again 0 being unlimited\n\t\t         \'allowLocationLinks\'    : True,\t\t\t\t# Are links from the device to a location allowed\n\t\t         \'allowHeartbeatOverride\': True,\t\t\t\t# Is it possible to set a custom Heartbeat per device?\n\t\t         \'heartbeatRate\'         : 2700,\t\t\t\t# The default heart rate for the device type\n\t\t         \'abilities\'             : [DeviceAbility.NONE]\t\t\t# The list of abilities the device type has\n\t\t}\n\n\nyourDevice.config.template contains the per device set-able configuration:\n\n{\n\t"deviceConfigs": {\n\t\t"someValue": {\n\t\t\t"defaultValue": true,\n\t\t\t"dataType"    : "boolean",\n\t\t\t"isSensitive" : false,\n\t\t\t"description" : "Some description to show as help for the user"\n\t\t},\n\t\t"someFreeTextInput": {\n\t\t\t"defaultValue": "They can be prefilled!",\n\t\t\t"dataType"    : "string",\n\t\t\t"isSensitive" : false,\n\t\t\t"description" : "Even more types are possible, try sensitive for passwords!"\n\t\t}\n\t}\n}',normalizedContent:'# intro\nok, so far so good, you\'ve discovered many aspects of a skill. the good news is that this is a never ending learning experience, and we\'ve implemented far more features for your skill to be as useful as possible!\n\n# widgets\nwidgets are little tiles that a user can add to the interface home screen. they provide a quick overview or functions to your skills. think a philips hue lamp adding a widget for every lamp the user has connected, allowing the user to click on the widget to toggle the light state. or a widget for a shopping list displaying what\'s currently in your list. or a widget displaying the temperature at your netatmo devices. or... well, you got it i guess?\n\n# widgets structure\nwidgets come embedded with your skill. they are not mandatory but can be a nice addition for users using the interface. you can add more than one widget per skill, and the user decides which ones to use. to add a widget you must create the following structure in your existing skill structure, our helloworld skill:\n\n.\n├─ widgets\n│  └─ css\n│     └─ helloworld.css\n│  └─ img\n│     └─ .gitkeep\n│  └─ js\n│     └─ helloworld.js\n│  └─ lang\n│     └─ helloworld.lang.json\n│  └─ templates\n│     └─ helloworld.html\n│  └─ __init__.py\n│  └─ helloworldwidget.py\n\n\nlet\'s break down this structure!\n\n# css/helloworld.css\nthis is your widget dedicated css file! the default content should be as follows:\n\n.helloworld {\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n  box-sizing: border-box;\n}\n\n\n# img\nif your widgets uses image files, such as backgrounds, you could place them here, for organisation\'s sake.\n\n# js/helloworld.js\nthe engine of your widget! if your widget is interactive, you can code whatever you want in there! a basic file should look like:\n\nclass helloworld_helloworld extends widget {\n\n  constructor(uid, widgetid) {\n    super(uid, widgetid);\n  }\n}\n\n\nok, so guidance here...\n\nfirst you should know that users can add your widget as many times as they want on the same page. if you\'ve ever done some html and/or javascript, you can immediately think about id collisions. project alice overcomes this issue by doing some magic for you, given you\'ve followed the structure very strictly.\n\n * your widget is a class\n * the class name is of that type: skillname_widgetname. this is very important\n * the class extends an inbuilt widget class. you can find it here. it is served through our api. the widget class is evolving, but for now offers * easy access to the widget\'s main div with this.mydiv. it then accepts queryselectors from javascript.\n    * easy way and hassle-free method to connect your widget to alice\'s mqtt server: your widget calls this.subscribe(\'hermes/dialog/sessionstarted\', this.mycallbackfunction). as soon as something is published on \'hermes/dialog/sessionstarted\' your widget\'s mycallbackfunction will be called with the mqtt message as argument.\n    * easy access to alice\'s settings with this.alicesettings\n    * alice api calls with this.myskill (see widget calls to alice core)\n   \n   \n * the class constructor receives 2 immutable arguments: * uid: this uid is generated by the interface when loading the widgets. this uid is going to be appended to your widget main div\n    * widgetid: a reference to the widget row insert id from alice\'s database.\n   \n   \n\napart from that, you are free to do what you want!\n\n# lang/helloworld.lang.json\nthis file can be used if your widget displays texts, such as html field labels, buttons or whatever that has text that should be translated. remember what languages you made your skill compatible with! your widget should support them too! the structure is the following:\n\n{\n\t"en": {\n\t\t"title": "hello all"\n\t},\n\t"de": {\n\t\t"title": "hallo zusammen"\n\t},\n\t"fr": {\n\t\t"title": "hello a tous"\n\t}\n}\n\n\n# templates/helloworld.html\nthis is what is rendered on the home page, it\'s your widget! a basic widget file looks like:\n\n<widget>\n  <icon>fas fa-biohazard</icon>\n  <div class="helloworld" data-ref="helloworld_helloworld"></div>\n</widget>\n\n\nwe first define a widget as container and set its icon tp fas fa-biohazard. you can get other icons, from the free icons, on fontawesome. these custom tags will be removed when parsed by alice. what stays is the divof class helloworld. it\'s important to note that there\'s no id, but a data-ref following the same naming convention as your javascript class! this is used by alice to identify the widget instance and gets the uid appended.\n\nalso, do you remember the language file? using automatic translation isn\'t that hard! instead of hardcoding your language string, simply replace it by {{ lang.yourstringindex }}. this will automatically be replaced by, if your alice instance runs in english, helloworldwidget.json[\'en\'][\'yourstringindex\']\n\n# helloworldwidget.py\nthis is what makes your widget be loaded by alice! a raw widget python file would be:\n\nimport sqlite3\n\nfrom core.webui.model.widget import widget\nfrom core.webui.model.widgetsizes import widgetsizes\n\n\nclass helloworld(widget):\n\n\tdefault_size = widgetsizes.w_small\n\tdefault_options: dict = dict()\n\n\tdef __init__(self, data: sqlite3.row):\n\t\tsuper().__init__(data)\n\n\nlet\'s take a little look at this!\n\n * size: defines the size your widget is going to render, in pixels:\n   \n    * w_tiny: 50x50\n    * w_tiny_wide: 100x50\n    * w_tiny_tall: 50x100\n    * \n    * w_small: 100x100\n    * w_small_wide: 200x100\n    * w_small_tall: 100x200\n    * \n    * w: 200x200\n    * w_wide: 300x200\n    * w_tall: 200x300\n    * \n    * w_large: 300x300\n    * w_large_wide: 400x300\n    * w_large_tall: 300x400\n    * \n    * w_extralarge: 500x500\n    * w_extralarge_wide: 700x500\n    * w_extralarge_tall: 500x700\n   \n   \n * options\n   \n    * to be implemented, but will allow widget options\n   \n   \n\n# widget calls to alice core\nbeside the api we also have the possibility for your widgets to call functions on the core directly! you want to know the best? it\'s very simple! simply code your python function in your widget python file and make it return a dict (that will become a js json object). in the example below, the function is getlocks, in your widget script\n\nclass lock(widget):\n\n\tdefault_size = widgetsizes.w_wide\n\n\tdef getlocks(self) -> dict:\n\t\treturn {device.uid: device.todict() for device in self.skillinstance.mydevices.values()}\n\n\nin your js, you can access this python function asynchronously just by calling\n\nself.myskill.getlocks()\n\nthis returns a promise, which you can handle with then() such as\n\nself.myskill.getlocks().then(response => response.json()).then(data => {console.log(data})\n\nyou can also pass arguments directly:\n\nself.myskill.togglelock({\'uid\': uid}) will call its python counterpart\n\n\tdef togglelock(self, uid: str):\n\t\tself.skillinstance.togglelock(uid=uid)\n\n\n# widget js methods invoked by alice\nduring display of a widget there a few methods alice will call to keep everything clean and updated. the following chapter will handle these methods\n\n# refresh()\ncalled when the widgets settings are changed after the settings window is closed. use this to directly react to new settings. reload new information, adjust the display - you know best what changes are required for your new settings!\n\n# onresize(target, width, height, delta, direction)\ncalled while the widget is resized by the user. use this to reorganize the widget, add more information to use the new space, or simplify it, when there is not that much space left.\n\n# stop()\ncalled when the page is switched in the ui and all widgets have to stop their execution. usually you want to stop all periodic jobs and refreshes when stop() is called.\n\n# built-in css rules\nthe interface loads our css rules, and these are available at all time! let me try to list the ones that are most important for you as a widget dev!\n\n# variables\nwe have some variables set for you to use in your widgets:\n\n# --hover : color of a link when hovered\n# --mainbg : main color of the background\n# --windowbg : color of windows above the main background\n# --secondary : secondary color of windows above the main background\n# --accent : accentuated color, for items that need to draw attention\n# --text : texts color\n# --normal: normal font\n# --light: light font\n# --medium: medium font\n# --bold: bold font\n# --italic: italic font\n# --lightitalic: light italic font\n# --mediumitalic: medium italic font\n# --bolditalic: bold italic font\n# --monospace: monospace font\n# classes\nsome reusable classes\n\n# .tilecontainer : if you need to create a tile system, this is used for the container\n# .tile : if you create tiles, use this class for them\n# .red : red color for texts\n# .disabled : red color for texts\n# .warning : red color for texts\n# .green : green color for texts\n# .saved : green color for texts\n# .yellow : yellow color for texts\n# .active : yellow color for texts\n# .saving : yellow color for texts\n# .hidden : display none\n# .button : if you use buttons, use this class\n# node-red\nwip\n\n# devices\nwip if you want to include custom devices into your skill, the folders structure is enhanced by a devices folder:\n\n.\n├─ devices\n│  ├─ img\n|  |  ├─ customimage.png\n│  |  └─ yourdevice.png\n|  ├─ __init__.py\n|  ├─ yourdevice.config.template\n│  └─ yourdevice.py\n\n\nthe default image is always named like your device and has a png-extension. you can provide different images by overwriting the method getdeviceicon. for now only .png is possible\n\nyourdevice.py must extend device and include at least a redefinition for:\n\n\t@classmethod\n\tdef getdevicetypedefinition(cls) -> dict:\n\t\treturn { \'devicetypename\'        : \'yourdevice\',\t\t\t# must match your class name\n\t\t         \'perlocationlimit\'      : 0,\t\t\t\t\t# how many devices are allowed per location, with 0 being unlimited\n\t\t         \'totaldevicelimit\'      : 0,\t\t\t\t\t# how many devices are allowed in total, again 0 being unlimited\n\t\t         \'allowlocationlinks\'    : true,\t\t\t\t# are links from the device to a location allowed\n\t\t         \'allowheartbeatoverride\': true,\t\t\t\t# is it possible to set a custom heartbeat per device?\n\t\t         \'heartbeatrate\'         : 2700,\t\t\t\t# the default heart rate for the device type\n\t\t         \'abilities\'             : [deviceability.none]\t\t\t# the list of abilities the device type has\n\t\t}\n\n\nyourdevice.config.template contains the per device set-able configuration:\n\n{\n\t"deviceconfigs": {\n\t\t"somevalue": {\n\t\t\t"defaultvalue": true,\n\t\t\t"datatype"    : "boolean",\n\t\t\t"issensitive" : false,\n\t\t\t"description" : "some description to show as help for the user"\n\t\t},\n\t\t"somefreetextinput": {\n\t\t\t"defaultvalue": "they can be prefilled!",\n\t\t\t"datatype"    : "string",\n\t\t\t"issensitive" : false,\n\t\t\t"description" : "even more types are possible, try sensitive for passwords!"\n\t\t}\n\t}\n}',charsets:{cjk:!0}},{title:"Adding a new language support",frontmatter:{title:"Adding a new language support",sidebarDepth:4,tags:["language support","translate"]},regularPath:"/skill-development/new-language-support.html",relativePath:"skill-development/new-language-support.md",key:"v-a71cd67a",path:"/skill-development/new-language-support.html",headers:[{level:2,title:'What means "Adding a new language support"',slug:"what-means-adding-a-new-language-support",normalizedTitle:"what means &quot;adding a new language support&quot;",charIndex:null},{level:2,title:"How to add a new language support",slug:"how-to-add-a-new-language-support",normalizedTitle:"how to add a new language support",charIndex:1301},{level:2,title:"Adding a new system language support",slug:"adding-a-new-system-language-support",normalizedTitle:"adding a new system language support",charIndex:2019},{level:3,title:"Basic skills",slug:"basic-skills",normalizedTitle:"basic skills",charIndex:2479},{level:3,title:"System",slug:"system",normalizedTitle:"system",charIndex:2819},{level:2,title:"Translating a skill via the Alice Web Interface",slug:"translating-a-skill-via-the-alice-web-interface",normalizedTitle:"translating a skill via the alice web interface",charIndex:3098}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:'What means "Adding a new language support" How to add a new language support Adding a new system language support Basic skills System Translating a skill via the Alice Web Interface',content:'# Intro\nWe currently natively support the following languages:\n\n * English\n * French\n * German\n * Italian\n * Polish\n\nThis means those languages are available as a configuration, and the entire system can run with them.\n\nBeside these languages, we provide support for nearly all languages in the world, for skills only, for as long as you do not set Alice as offline only. We can use Google Translate free services to obtain a good result when sending the request to our NLU.\n\nYou can add easily add a new language support for either the entire system or some skills or both\n\nWARNING\n\nAlice is a friend of yours, she\'s familiar and not impersonal. She uses the familiar "you" and not the formal "you". In French, she uses "tu" and not "vous", in german "du" and not "Sie" etc etc\n\n# What means "Adding a new language support"\nWe speak of translation, but it\'s not really a translation, it\'s basically adding the language support. It\'s of no use to translate word for word what\'s in the files. It\'s really about creating a new language support for the skill. Don\'t just translate, but add new ways of saying, remove those that are not used in your language, turn utterances around, make it lively. Same goes for the talk files, just use your imagination to make Alice sound natural in your language!\n\n# How to add a new language support\nYou will need a GitHub account to translate skills or the system. Once you have your account and are logged in, simply Fork the skill you want to translate. Clone your fork on your computer and do the translation.\n\nCommit your changes sporadically and Push them on your repository. When translated, do not forget to increment the version number in the .installfile. Once everything is done, and you successfully ran the basic verifications, you can create a Pull request which we will review and merge if possible and otherwise inform you of what\'s still needed.\n\nThe sections talk files and dialog templates provide further information about the files that need to be translated.\n\n# Adding a new system language support\nIf you feel like adding a new system language support, we strongly encourage you to first get in touch with us. It\'s easy to add a new language support, but requires some Alice knowledge to better grasp the context in which the language strings are used. Again, it\'s not about translating, it\'s about adding a new language. Make it feel real, lively, familiar! There are quite a few files to translate, let\'s list them!\n\n# Basic skills\n * AliceCore\n * ContextSensitive\n * DateDayTimeYear\n * RedQueen\n * Telemetry\n\nSkills can have language files in the following directories:\n\n * talks\n * dialogTemplate\n * widgets\n * devices\n\nDon\'t forget to:\n\n * Add yourself in the maintainers in the .install file\n * Add your language code as supported in the .install file\n\n# System\n * ProjectAlice/system/manager/LanguageManager/strings.json\n * ProjectAlice/system/manager/TalkManager/talks\n * ProjectAlice/system/manager/WebUIManager/*.json\n\nOnce these files are made, please contact us so that we can add the language as supported on the core side!\n\n# Translating a skill via the Alice Web Interface\nAs of version 1.0.0 we introduce the developer mode in the web interface. While you can create skills from scratch with its help, it makes translating existing skills even easier!\n\nTo get started, make sure you have the dev mode enabled in your admin settings. Only then the "devmode" in your menu:\n\nOnce you enter the devmode page, you will see all your installed skills. Currently, you can\'t translate a skill you haven\'t installed, and you can\'t install a skill that isn\'t in your language. (This will change! For now - please change your active language to english as all skills require an english version.)\n\nSelect the skill you want to translate by clicking on the coq in the corresponding tile. This will open up the content of your *.install file for editing directly in the web browser.Scroll down, and enable the language you want to translate this skill to. Once you hit save - the floppy disc in the upper right corner - the skill will be available in that language as well, although, it won\'t have any text yet!\n\nNow you can jump to the first tab where you will start your translation. Start with the training data, select your target language in the dropdown at the top. You will see, all intents that need translation are already waiting for you!Add them tou your language by clicking on the red plus and start entering the translations on the right-hand side. While you should NEVER just translate the english wordings, feel free to jump between the different translations to get an idea how the user will interact with the different intents. You don\'t have to save, while having a quick look at another language. Only when you are done, don\'t forget to save the save icon in the top right corner!Don\'t forget to add and translate all the required slot types as well, but take care, some slot types have "technical values" - these don\'t have to be translated.\n\nOnce you have created the slot type and added it to an intent, you can classify the slots in your intents. Either press ALT+1, ALT+2 etc. directly while typing the slot(it will always select the last word you wrote) or mark the word and press the corresponding button above.\n\nWhen you are done with the intents, don\'t forget to save and switch over to the next tab. Here you will translate all the things alice will be able to say. Keep an eye out for placeholders while translating! When the original text contains two brackets {}, your translation has to contain the same number of brackets!Once you are done all red talk categories should be gone and replaced by white ones.\n\nThe next tab can be skipped - currently the custom settings don\'t have some language specific files! Move on to the tab after it, the instruction files. Take care, this tab is the only one where you can\'t jump between the languages without saving first, but don\'t worry, Alice will remind you before you lose anything!Enter your translation and take care to include all the requirements for that skill. When the user needs to create an account, don\'t leave out that information!\n\nThe next two tabs are work in progress, they will be the home for settings and translations of devices in MyHome and widgets. Skip them for now!\n\nThe final step: Upload your skill to GitHub and create a pull request for us to review and publish for everybody! When you start, this page should look something like this:Click on "Fork" to create your own version of that skill on GitHub, a second line will appear containing a link to your own GitHub repository!\n\nFor now only the "Upload" button is relevant for you, as all your work is just locally available! Press it and wait for the upload to finish.As you can see, the "Uncommitted changes" changed to 0 - all changes are pushed to GitHub!\n\nThe final step: Create PR Enter a meaning full short description e.g. "skill translation for pt" A new window will open where you can add more information on GitHub - finalize your work by clicking on "Create pull request"!',normalizedContent:'# intro\nwe currently natively support the following languages:\n\n * english\n * french\n * german\n * italian\n * polish\n\nthis means those languages are available as a configuration, and the entire system can run with them.\n\nbeside these languages, we provide support for nearly all languages in the world, for skills only, for as long as you do not set alice as offline only. we can use google translate free services to obtain a good result when sending the request to our nlu.\n\nyou can add easily add a new language support for either the entire system or some skills or both\n\nwarning\n\nalice is a friend of yours, she\'s familiar and not impersonal. she uses the familiar "you" and not the formal "you". in french, she uses "tu" and not "vous", in german "du" and not "sie" etc etc\n\n# what means "adding a new language support"\nwe speak of translation, but it\'s not really a translation, it\'s basically adding the language support. it\'s of no use to translate word for word what\'s in the files. it\'s really about creating a new language support for the skill. don\'t just translate, but add new ways of saying, remove those that are not used in your language, turn utterances around, make it lively. same goes for the talk files, just use your imagination to make alice sound natural in your language!\n\n# how to add a new language support\nyou will need a github account to translate skills or the system. once you have your account and are logged in, simply fork the skill you want to translate. clone your fork on your computer and do the translation.\n\ncommit your changes sporadically and push them on your repository. when translated, do not forget to increment the version number in the .installfile. once everything is done, and you successfully ran the basic verifications, you can create a pull request which we will review and merge if possible and otherwise inform you of what\'s still needed.\n\nthe sections talk files and dialog templates provide further information about the files that need to be translated.\n\n# adding a new system language support\nif you feel like adding a new system language support, we strongly encourage you to first get in touch with us. it\'s easy to add a new language support, but requires some alice knowledge to better grasp the context in which the language strings are used. again, it\'s not about translating, it\'s about adding a new language. make it feel real, lively, familiar! there are quite a few files to translate, let\'s list them!\n\n# basic skills\n * alicecore\n * contextsensitive\n * datedaytimeyear\n * redqueen\n * telemetry\n\nskills can have language files in the following directories:\n\n * talks\n * dialogtemplate\n * widgets\n * devices\n\ndon\'t forget to:\n\n * add yourself in the maintainers in the .install file\n * add your language code as supported in the .install file\n\n# system\n * projectalice/system/manager/languagemanager/strings.json\n * projectalice/system/manager/talkmanager/talks\n * projectalice/system/manager/webuimanager/*.json\n\nonce these files are made, please contact us so that we can add the language as supported on the core side!\n\n# translating a skill via the alice web interface\nas of version 1.0.0 we introduce the developer mode in the web interface. while you can create skills from scratch with its help, it makes translating existing skills even easier!\n\nto get started, make sure you have the dev mode enabled in your admin settings. only then the "devmode" in your menu:\n\nonce you enter the devmode page, you will see all your installed skills. currently, you can\'t translate a skill you haven\'t installed, and you can\'t install a skill that isn\'t in your language. (this will change! for now - please change your active language to english as all skills require an english version.)\n\nselect the skill you want to translate by clicking on the coq in the corresponding tile. this will open up the content of your *.install file for editing directly in the web browser.scroll down, and enable the language you want to translate this skill to. once you hit save - the floppy disc in the upper right corner - the skill will be available in that language as well, although, it won\'t have any text yet!\n\nnow you can jump to the first tab where you will start your translation. start with the training data, select your target language in the dropdown at the top. you will see, all intents that need translation are already waiting for you!add them tou your language by clicking on the red plus and start entering the translations on the right-hand side. while you should never just translate the english wordings, feel free to jump between the different translations to get an idea how the user will interact with the different intents. you don\'t have to save, while having a quick look at another language. only when you are done, don\'t forget to save the save icon in the top right corner!don\'t forget to add and translate all the required slot types as well, but take care, some slot types have "technical values" - these don\'t have to be translated.\n\nonce you have created the slot type and added it to an intent, you can classify the slots in your intents. either press alt+1, alt+2 etc. directly while typing the slot(it will always select the last word you wrote) or mark the word and press the corresponding button above.\n\nwhen you are done with the intents, don\'t forget to save and switch over to the next tab. here you will translate all the things alice will be able to say. keep an eye out for placeholders while translating! when the original text contains two brackets {}, your translation has to contain the same number of brackets!once you are done all red talk categories should be gone and replaced by white ones.\n\nthe next tab can be skipped - currently the custom settings don\'t have some language specific files! move on to the tab after it, the instruction files. take care, this tab is the only one where you can\'t jump between the languages without saving first, but don\'t worry, alice will remind you before you lose anything!enter your translation and take care to include all the requirements for that skill. when the user needs to create an account, don\'t leave out that information!\n\nthe next two tabs are work in progress, they will be the home for settings and translations of devices in myhome and widgets. skip them for now!\n\nthe final step: upload your skill to github and create a pull request for us to review and publish for everybody! when you start, this page should look something like this:click on "fork" to create your own version of that skill on github, a second line will appear containing a link to your own github repository!\n\nfor now only the "upload" button is relevant for you, as all your work is just locally available! press it and wait for the upload to finish.as you can see, the "uncommitted changes" changed to 0 - all changes are pushed to github!\n\nthe final step: create pr enter a meaning full short description e.g. "skill translation for pt" a new window will open where you can add more information on github - finalize your work by clicking on "create pull request"!',charsets:{}},{title:"Publishing your skill",frontmatter:{title:"Publishing your skill",sidebarDepth:3,tags:["publishing","skill","store"]},regularPath:"/skill-development/publishing-to-skill-store.html",relativePath:"skill-development/publishing-to-skill-store.md",key:"v-88c0dfb6",path:"/skill-development/publishing-to-skill-store.html",headers:[{level:2,title:"Checking your skill",slug:"checking-your-skill",normalizedTitle:"checking your skill",charIndex:256},{level:3,title:"Code guideline",slug:"code-guideline",normalizedTitle:"code guideline",charIndex:342},{level:3,title:"Skill validation",slug:"skill-validation",normalizedTitle:"skill validation",charIndex:770},{level:2,title:"Publishing",slug:"publishing",normalizedTitle:"publishing",charIndex:1492},{level:2,title:"After publishing",slug:"after-publishing",normalizedTitle:"after publishing",charIndex:2063}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Checking your skill Code guideline Skill validation Publishing After publishing",content:"# Intro\nSo you think your freshly written skill is ready to be shared with the rest of the world? That's great! Here are the steps to have your skill published, from checking that everything is ok to have it published, let's review the remaining steps.\n\n# Checking your skill\nBecause we like things clean and following a strict guideline!\n\n# Code guideline\nVery first step, to make sure the demon Psycho doesn't eat you alive, you want to check your syntax and code formatting. Are they following our code guidelines? Did you indent your code with tabs and not 4 spaces? Did you strong type your methods, adding variable type hints and return type hint? Your methods names are following camelCase and so do your variables? Check the guidelines and you'll be all set!\n\n# Skill validation\nThen we want to make sure your skill is operational and clean. For that, your need a handy tool that we provide, called projectalice-sk. Let's first install it:\n\npip3 install projectalice-sk\n\nNavigate to the parent directory where you have your skill. If we continue our HelloWorld example:\n\ncd ~/ProjectAlice/skills\n\nAnd start the check!\n\nprojectalice-sk validate --paths HelloWorld\n\nThis will output a few things while checking your talk files, your dialog templates, your install file and others. If everything comes out clean it will tell you the skill is valid. Keep in mind it still doesn't mean it is working but at least it won't crash Alice's start if deployed on an existing assistant. Great\n\n# Publishing\nAs of now, I'm still thinking on how people are going to publish their skills to our store. I want to keep an eye on the proposed skills and make sure it's not malicious code and that it is of quality. I'm a real pain, I can tell you, but that's only for the good of the many. Knowing this, you understand that the publishing is made exclusively by the Project Alice team, after some checking and deployments on our side, in fact, we have several things to do to make your skill available.\n\nWhat you want to do though, is proposing your skill for the store\n\n# After publishing\nOnce we get your request, we'll fork your repository into Project Alice organisation, review your skill and make sure everything's ok. If there's something not ok, we'll let you know. Once we have forked your skill, you'll need to open Pull Requests onto it to keep it updated!\n\nOnce we have forked it and added it to our quality and store control Continuous integration, you can check its status by going to:\n\nhttps://projectalice.io/skill_YOUR_SKILL_NAME\n\nOn top of the readme, you will find two badges:\n\nThe pipeline badge should say \"passed\" and be green. In case not, something went wrong publishing the skill. Simply click on the badge to be redirected to gitlab where you will be able to understand what failed. We have 5 jobs that run before a skill is available, and you can influence the 3 first ones because they test your code and react to your changes in files:\n\nThe third one, the sonarcube check won't stop a deployment but reflects the quality of your code. It is allowed to fail. The first 2 jobs though cannot fail or your skill won't get published. If either one of them or both failed, click on their icons to navigate to the test and a report of what failed. You'll need to correct those and submit pull requests to fix the issues. Once the first 2 tests succeeded and the third ran, the deployment will begin and should take about 2 minutes.\n\nThe second badge on the readme is the \"Quality gate\" status, run by SonarQube. This test evaluates your code quality and should be green too. If not, you can click on it to be redirected to Sonarcloud where you will find the issues related to your skill code.\n\nSubscribe\n\nPlease subscribe to the fork of your skill, so you get alerted when someone reports a bug on your skill.\n\nPlease subscribe to the repository on Gitlab, so you get email alerted if a job fails for your skill.",normalizedContent:"# intro\nso you think your freshly written skill is ready to be shared with the rest of the world? that's great! here are the steps to have your skill published, from checking that everything is ok to have it published, let's review the remaining steps.\n\n# checking your skill\nbecause we like things clean and following a strict guideline!\n\n# code guideline\nvery first step, to make sure the demon psycho doesn't eat you alive, you want to check your syntax and code formatting. are they following our code guidelines? did you indent your code with tabs and not 4 spaces? did you strong type your methods, adding variable type hints and return type hint? your methods names are following camelcase and so do your variables? check the guidelines and you'll be all set!\n\n# skill validation\nthen we want to make sure your skill is operational and clean. for that, your need a handy tool that we provide, called projectalice-sk. let's first install it:\n\npip3 install projectalice-sk\n\nnavigate to the parent directory where you have your skill. if we continue our helloworld example:\n\ncd ~/projectalice/skills\n\nand start the check!\n\nprojectalice-sk validate --paths helloworld\n\nthis will output a few things while checking your talk files, your dialog templates, your install file and others. if everything comes out clean it will tell you the skill is valid. keep in mind it still doesn't mean it is working but at least it won't crash alice's start if deployed on an existing assistant. great\n\n# publishing\nas of now, i'm still thinking on how people are going to publish their skills to our store. i want to keep an eye on the proposed skills and make sure it's not malicious code and that it is of quality. i'm a real pain, i can tell you, but that's only for the good of the many. knowing this, you understand that the publishing is made exclusively by the project alice team, after some checking and deployments on our side, in fact, we have several things to do to make your skill available.\n\nwhat you want to do though, is proposing your skill for the store\n\n# after publishing\nonce we get your request, we'll fork your repository into project alice organisation, review your skill and make sure everything's ok. if there's something not ok, we'll let you know. once we have forked your skill, you'll need to open pull requests onto it to keep it updated!\n\nonce we have forked it and added it to our quality and store control continuous integration, you can check its status by going to:\n\nhttps://projectalice.io/skill_your_skill_name\n\non top of the readme, you will find two badges:\n\nthe pipeline badge should say \"passed\" and be green. in case not, something went wrong publishing the skill. simply click on the badge to be redirected to gitlab where you will be able to understand what failed. we have 5 jobs that run before a skill is available, and you can influence the 3 first ones because they test your code and react to your changes in files:\n\nthe third one, the sonarcube check won't stop a deployment but reflects the quality of your code. it is allowed to fail. the first 2 jobs though cannot fail or your skill won't get published. if either one of them or both failed, click on their icons to navigate to the test and a report of what failed. you'll need to correct those and submit pull requests to fix the issues. once the first 2 tests succeeded and the third ran, the deployment will begin and should take about 2 minutes.\n\nthe second badge on the readme is the \"quality gate\" status, run by sonarqube. this test evaluates your code quality and should be green too. if not, you can click on it to be redirected to sonarcloud where you will find the issues related to your skill code.\n\nsubscribe\n\nplease subscribe to the fork of your skill, so you get alerted when someone reports a bug on your skill.\n\nplease subscribe to the repository on gitlab, so you get email alerted if a job fails for your skill.",charsets:{}},{title:"Work made for you",frontmatter:{title:"Work made for you",sidebarDepth:5,tags:["intents","slots","dialog state","dialogue"]},regularPath:"/skill-development/work-made-for-you.html",relativePath:"skill-development/work-made-for-you.md",key:"v-5d8c4f65",path:"/skill-development/work-made-for-you.html",headers:[{level:2,title:"Built-in intents",slug:"built-in-intents",normalizedTitle:"built-in intents",charIndex:254},{level:3,title:"Listing",slug:"listing",normalizedTitle:"listing",charIndex:647},{level:2,title:"Built-in slots",slug:"built-in-slots",normalizedTitle:"built-in slots",charIndex:1896},{level:3,title:"Alice slots",slug:"alice-slots",normalizedTitle:"alice slots",charIndex:2479},{level:3,title:"Snips slots",slug:"snips-slots",normalizedTitle:"snips slots",charIndex:3229},{level:2,title:"Dialog states",slug:"dialog-states",normalizedTitle:"dialog states",charIndex:3594},{level:3,title:"The problem",slug:"the-problem",normalizedTitle:"the problem",charIndex:3741},{level:3,title:"The solutions",slug:"the-solutions",normalizedTitle:"the solutions",charIndex:4696}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Built-in intents Listing Built-in slots Alice slots Snips slots Dialog states The problem The solutions",content:"# Intro\nThere are things you can benefit from when you create your new shiny skill. We preloaded, and continue to preload, core , slot types and so on. Always check here before creating a new slot type, or a new intent, it might already be available!\n\n# Built-in intents\nThere are that are already available for you to use due to the fact the AliceCore needs to be loaded and run for Alice to start. You should always check if the intents you are creating do not already exist. Those intents are usually used for answering to missing information and are disabled by default. They take advantage of our built-in . Let's list those intents here:\n\n# Listing\n * UserRandomAnswer The user answers with random words. * Type: Alice/RandomWords\n    * SlotName: RandomWord\n   \n   \n * AnswerYesOrNo User answers yes or no. * Type: Alice/AnswerYesNo\n    * SlotName: Answer\n    * Note: Did you know you can use self.Commons.isYes(session)?\n   \n   \n * AnswerLocation User answers with a location name. * Type: Alice/Location\n    * SlotName: Location\n   \n   \n * AnswerName User answers with a name. * Type: Alice/Name\n    * SlotName: Name\n   \n   \n * AnswerNumber User answers with a name. * Type: snips/number\n    * SlotName: Number\n   \n   \n * SpellWord User answers with a name. * Type: Alice/Letter\n    * SlotName: Letters\n    * Notes: * You can use self.Commons.isSpelledWord(TheString) to check if a string is a spelled word\n       * You can build a string from Letters slots with string = ''.join([slot.value['value'] for slot in session.slotsAsObjects['Letters']])\n      \n      \n   \n   \n * AnswerAccessLevel User answers with access level * Type: Alice/UserAccessLevel\n    * SlotName: UserAccessLevel\n   \n   \n * AnswerPercent User answers with access level * Type: snips/number\n    * SlotName: Percent\n   \n   \n\nWe will implement more inbuilt intents over time, such as answering with time, dates etc.\n\n# Built-in slots\nWe have some slots ready for you to use. You don't need to worry if they exist or not, they do, as they are coming from required skills! Beside former snips skills that are supported, the Alice/XXX skills are also available. Let's list them here! This listing is about the english version. Other languages might differ in numbers. If you want to create a skill that needs additional values for these slots, you can extend them! Just declare the slot like every other slot, but use the exact same name as the official Alice/* slot. Alice will take care of the rest!\n\n# Alice slots\n * Alice/Countries: Contains all countries on the world, with country code 2 as master value and spoken name as synonyms\n * Alice/CityNames: Contains about 4500 city names\n * Alice/UserAccessLevel: The five supported access levels: admin, default, kid, worker, guest\n * Alice/Languages: A few languages: FR, EN, DE, SW, JP, FI, ES, RU, IT\n * Alice/Letters: Alphabet letter [A-Z]\n * Alice/Location: Contains about 130 location/room type names\n * Alice/AnswerYesNo: Yes or no, with synonyms\n * Alice/Name: Contains about 580 common names\n * Alice/RandomWords: Contains about 3200 common words\n * Alice/PersonalPronoun: I, you, he, she, it, we, you, they 😃\n * Alice/Colors: A collection of spoken colors, with RGB values as master value\n\n# Snips slots\nThese are only available with snips nlu\n\n * snips/date\n * snips/timePeriod\n * snips/datePeriod\n * snips/amountOfMoney\n * snips/time\n * snips/musicArtist\n * snips/musicTrack\n * snips/region\n * snips/musicAlbum\n * snips/country\n * snips/number\n * snips/percentage\n * snips/datetime\n * snips/city\n * snips/duration\n * snips/temperature\n * snips/ordinal\n\n# Dialog states\nNow comes the very important part, understanding the problematic behind using those intents and how to overcome those limitations\n\n# The problem\nLet's imagine you are building a skill that gives the user the ability to add reminders. At some point, you might want to ask the user if the reminder can be deleted, to which, the user is going to answer with either yes or no:\n\nHey, you told me to remind you this: Buy some beer before weekend.Can I now delete this reminder?Yes thank youOk, deletedTo this point, nothing big or hard. What if I told you that the AnswerYesOrNo intent is already used by many skills? So if you have a little chance, your skill might be the first one to catch the intent but what if the Yes the user is answering is not meant for your skill? See where I'm going? You need to make sure the AnswerYesOrNo is actually meant for your skill at this moment. It is important to understand that Alice doesn't lock a skill while in dialogue. You could hypothetically answer What time is it instead of Yes and she'd answer you, forgetting about the reminder question.\n\n# The solutions\nTo solve these collision issues, we have implemented what we call dialogStates. You can either do the mapping in the __init__ method, or you can use the IntentHandler decorator for easier cases.\n\n# The decorator way\nFirst thing, add your method for Alice to ask if the reminder can be safely deleted. I'd imagine this method to be triggered if a reminder was just spoken.\n\ndef askDeleteReminder(self, siteId):\n\tself.ask(\n\t\tsiteId=siteId,\n\t\ttext=self.randomTalk(text='CanTheReminderBeDeleted'),\n\t\tintentFilter=['AnswerYesOrNo'],\n\t\tcurrentDialogState='askingToDeleteReminder'\n\t)\n\n\nTwo important things here:\n\n * intentFilter: This is used to limit the NLU on parsing the user answer on the specified intent. You don't want the user to answer with What time is it, but only with yes or no.\n * currentDialogState: This is the very important part! It tells Alice that she is in dialogue with the user and that the state or next turn, is askingToDeleteReminder. You can use literally whatever you want here, as long as you remember what you've declared.\n\nOk, so the user is going to answer with Yes!. Now we need an intent handler to take care of that!\n\n@IntentHandler(intent='AnswerYesOrNo', requiredState='askingToDeleteReminder')\ndef answerDeleteReminder(self, session: DialogSession):\n\tif self.Commons.isYes(session):\n\t\tself.endDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='okDeleted')\n\t\t)\n\telse:\n\t\tself.endDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='okKeepingIt')\n\t\t)\n\n\nThe important part here is that our IntentHandler decorator took one more important argument, the requiredState. This means that your skill supports the AnswerYesOrNo intent only if the current dialog state is askingToDeleteReminder! No more collision with other skills!\n\n# Manual mapping\nWe call mapping the declaration of intents vs dialog states. Same example as above, but not by using decorators and adding another intent. It is useful when you have a more complex structure of intents or skill.\n\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.base.model.Intent import Intent\nfrom core.dialog.model.DialogSession import DialogSession\n\n\nclass Reminder(AliceSkill):\n\t# Declare our intents\n\t_INTENT_ANSWER_YES_OR_NO = Intent('AnswerYesOrNo')\n\t_INTENT_ANSWER_ROOM = Intent('AnswerRoom')\n\t_INTENT_ADD_REMINDER = Intent('NewReminder')\n\n\n\tdef __init__(self):\n\t\t# Declare the skill's supported intents\n\t\t# The two first ones have no direct mapping, the last one directly declares its mapping\n\t\tself._INTENTS = [\n\t\t\tself._INTENT_ANSWER_YES_OR_NO,\n\t\t\tself._INTENT_ANSWER_ROOM,\n\t\t\t(self._INTENT_ADD_REMINDER, self.addReminder),\n\t\t]\n\n\t\t# Create a mapping for the intent YES_OR_NO\n\t\t# Depending on the dialogue state, either answerDeleteReminder or answerReminderIsCorrect will be called\n\t\tself._INTENT_ANSWER_YES_OR_NO.dialogMapping = {\n\t\t\t'askingToDeleteReminder': self.answerDeleteReminder,\n\t\t\t'askingIfCorrect': self.answerReminderIsCorrect,\n\t\t}\n\t\t\n\t\t# Create a mapping for the intent AnswerRoom\n\t\tself._INTENT_ANSWER_ROOM.dialogMapping = {\n\t\t\t'askingWhereToRemind': self.addReminder\n\t\t}\n\n\t\tsuper().__init__(self._INTENTS)\n\n\n\t# This is called directly by the mapping for intents AddReminder and AnswerRoom on lines 18 and 19\n\tdef addReminder(self, session: DialogSession):\n\t\tif 'Room' not in session.slots:\n\t\t\tself.continueDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='inWhichRoom'),\n\t\t\t\tintentFilter=['AnswerRoom'],\n\t\t\t\tcurrentDialogState='askingWhereToRemind'\n\t\t\t)\n\t\t\treturn\n\n\t\tself.continueDialog(\n\t\t\tsessionId=session.sessionId,\n\t\t\ttext=self.randomTalk(text='isItCorrect', replace=[session.slots['reminder']]),\n\t\t\tintentFilter=['AnswerYesOrNo'],\n\t\t\tcurrentDialogState='askingIfCorrect'\n\t\t)\n\n\n\t# This would be called after you've read out loud a reminder\n\t# It asks if the reminder can be deleted and sets the dialogue state to 'askingToDeleteReminder'\n\tdef askDeleteReminder(self, siteId):\n\t\tself.ask(\n\t\t\tsiteId=siteId,\n\t\t\ttext=self.randomTalk(text='CanTheReminderBeDeleted'),\n\t\t\tintentFilter=['AnswerYesOrNo'],\n\t\t\tcurrentDialogState='askingToDeleteReminder'\n\t\t)\n\n\n\t# This is called by the intent YesOrNo ONLY if the current dialogue state is 'askingToDeleteReminder'\n\t# As declared in our mapping on line 25\n\tdef answerDeleteReminder(self, session: DialogSession):\n\t\tif self.Commons.isYes(session):\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okDeleted')\n\t\t\t)\n\t\telse:\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okKeepingIt')\n\t\t\t)\n\n\t# This is called by the intent YesOrNo ONLY if the current dialogue state is 'askingIfCorrect'\n\t# As declared in our mapping on line 26\n\tdef answerReminderIsCorrect(self, session: DialogSession):\n\t\tif self.Commons.isYes(session):\n\t\t\tself.endDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='okAdded')\n\t\t\t)\n\t\telse:\n\t\t\tself.continueDialog(\n\t\t\t\tsessionId=session.sessionId,\n\t\t\t\ttext=self.randomTalk(text='sorryWhatIsItThen')\n\t\t\t\t.....\n\n\n\nThe important parts here are how we declare our mappings. You can add as many routes as you wish, just take a look at AliceCore skill. We are still declaring dialogue states the same in continueDialog. Keep in mind this manual approach is useful for complex structures, and you should take advantage of the decorator approach first!",normalizedContent:"# intro\nthere are things you can benefit from when you create your new shiny skill. we preloaded, and continue to preload, core , slot types and so on. always check here before creating a new slot type, or a new intent, it might already be available!\n\n# built-in intents\nthere are that are already available for you to use due to the fact the alicecore needs to be loaded and run for alice to start. you should always check if the intents you are creating do not already exist. those intents are usually used for answering to missing information and are disabled by default. they take advantage of our built-in . let's list those intents here:\n\n# listing\n * userrandomanswer the user answers with random words. * type: alice/randomwords\n    * slotname: randomword\n   \n   \n * answeryesorno user answers yes or no. * type: alice/answeryesno\n    * slotname: answer\n    * note: did you know you can use self.commons.isyes(session)?\n   \n   \n * answerlocation user answers with a location name. * type: alice/location\n    * slotname: location\n   \n   \n * answername user answers with a name. * type: alice/name\n    * slotname: name\n   \n   \n * answernumber user answers with a name. * type: snips/number\n    * slotname: number\n   \n   \n * spellword user answers with a name. * type: alice/letter\n    * slotname: letters\n    * notes: * you can use self.commons.isspelledword(thestring) to check if a string is a spelled word\n       * you can build a string from letters slots with string = ''.join([slot.value['value'] for slot in session.slotsasobjects['letters']])\n      \n      \n   \n   \n * answeraccesslevel user answers with access level * type: alice/useraccesslevel\n    * slotname: useraccesslevel\n   \n   \n * answerpercent user answers with access level * type: snips/number\n    * slotname: percent\n   \n   \n\nwe will implement more inbuilt intents over time, such as answering with time, dates etc.\n\n# built-in slots\nwe have some slots ready for you to use. you don't need to worry if they exist or not, they do, as they are coming from required skills! beside former snips skills that are supported, the alice/xxx skills are also available. let's list them here! this listing is about the english version. other languages might differ in numbers. if you want to create a skill that needs additional values for these slots, you can extend them! just declare the slot like every other slot, but use the exact same name as the official alice/* slot. alice will take care of the rest!\n\n# alice slots\n * alice/countries: contains all countries on the world, with country code 2 as master value and spoken name as synonyms\n * alice/citynames: contains about 4500 city names\n * alice/useraccesslevel: the five supported access levels: admin, default, kid, worker, guest\n * alice/languages: a few languages: fr, en, de, sw, jp, fi, es, ru, it\n * alice/letters: alphabet letter [a-z]\n * alice/location: contains about 130 location/room type names\n * alice/answeryesno: yes or no, with synonyms\n * alice/name: contains about 580 common names\n * alice/randomwords: contains about 3200 common words\n * alice/personalpronoun: i, you, he, she, it, we, you, they 😃\n * alice/colors: a collection of spoken colors, with rgb values as master value\n\n# snips slots\nthese are only available with snips nlu\n\n * snips/date\n * snips/timeperiod\n * snips/dateperiod\n * snips/amountofmoney\n * snips/time\n * snips/musicartist\n * snips/musictrack\n * snips/region\n * snips/musicalbum\n * snips/country\n * snips/number\n * snips/percentage\n * snips/datetime\n * snips/city\n * snips/duration\n * snips/temperature\n * snips/ordinal\n\n# dialog states\nnow comes the very important part, understanding the problematic behind using those intents and how to overcome those limitations\n\n# the problem\nlet's imagine you are building a skill that gives the user the ability to add reminders. at some point, you might want to ask the user if the reminder can be deleted, to which, the user is going to answer with either yes or no:\n\nhey, you told me to remind you this: buy some beer before weekend.can i now delete this reminder?yes thank youok, deletedto this point, nothing big or hard. what if i told you that the answeryesorno intent is already used by many skills? so if you have a little chance, your skill might be the first one to catch the intent but what if the yes the user is answering is not meant for your skill? see where i'm going? you need to make sure the answeryesorno is actually meant for your skill at this moment. it is important to understand that alice doesn't lock a skill while in dialogue. you could hypothetically answer what time is it instead of yes and she'd answer you, forgetting about the reminder question.\n\n# the solutions\nto solve these collision issues, we have implemented what we call dialogstates. you can either do the mapping in the __init__ method, or you can use the intenthandler decorator for easier cases.\n\n# the decorator way\nfirst thing, add your method for alice to ask if the reminder can be safely deleted. i'd imagine this method to be triggered if a reminder was just spoken.\n\ndef askdeletereminder(self, siteid):\n\tself.ask(\n\t\tsiteid=siteid,\n\t\ttext=self.randomtalk(text='canthereminderbedeleted'),\n\t\tintentfilter=['answeryesorno'],\n\t\tcurrentdialogstate='askingtodeletereminder'\n\t)\n\n\ntwo important things here:\n\n * intentfilter: this is used to limit the nlu on parsing the user answer on the specified intent. you don't want the user to answer with what time is it, but only with yes or no.\n * currentdialogstate: this is the very important part! it tells alice that she is in dialogue with the user and that the state or next turn, is askingtodeletereminder. you can use literally whatever you want here, as long as you remember what you've declared.\n\nok, so the user is going to answer with yes!. now we need an intent handler to take care of that!\n\n@intenthandler(intent='answeryesorno', requiredstate='askingtodeletereminder')\ndef answerdeletereminder(self, session: dialogsession):\n\tif self.commons.isyes(session):\n\t\tself.enddialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='okdeleted')\n\t\t)\n\telse:\n\t\tself.enddialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='okkeepingit')\n\t\t)\n\n\nthe important part here is that our intenthandler decorator took one more important argument, the requiredstate. this means that your skill supports the answeryesorno intent only if the current dialog state is askingtodeletereminder! no more collision with other skills!\n\n# manual mapping\nwe call mapping the declaration of intents vs dialog states. same example as above, but not by using decorators and adding another intent. it is useful when you have a more complex structure of intents or skill.\n\nfrom core.base.model.aliceskill import aliceskill\nfrom core.base.model.intent import intent\nfrom core.dialog.model.dialogsession import dialogsession\n\n\nclass reminder(aliceskill):\n\t# declare our intents\n\t_intent_answer_yes_or_no = intent('answeryesorno')\n\t_intent_answer_room = intent('answerroom')\n\t_intent_add_reminder = intent('newreminder')\n\n\n\tdef __init__(self):\n\t\t# declare the skill's supported intents\n\t\t# the two first ones have no direct mapping, the last one directly declares its mapping\n\t\tself._intents = [\n\t\t\tself._intent_answer_yes_or_no,\n\t\t\tself._intent_answer_room,\n\t\t\t(self._intent_add_reminder, self.addreminder),\n\t\t]\n\n\t\t# create a mapping for the intent yes_or_no\n\t\t# depending on the dialogue state, either answerdeletereminder or answerreminderiscorrect will be called\n\t\tself._intent_answer_yes_or_no.dialogmapping = {\n\t\t\t'askingtodeletereminder': self.answerdeletereminder,\n\t\t\t'askingifcorrect': self.answerreminderiscorrect,\n\t\t}\n\t\t\n\t\t# create a mapping for the intent answerroom\n\t\tself._intent_answer_room.dialogmapping = {\n\t\t\t'askingwheretoremind': self.addreminder\n\t\t}\n\n\t\tsuper().__init__(self._intents)\n\n\n\t# this is called directly by the mapping for intents addreminder and answerroom on lines 18 and 19\n\tdef addreminder(self, session: dialogsession):\n\t\tif 'room' not in session.slots:\n\t\t\tself.continuedialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='inwhichroom'),\n\t\t\t\tintentfilter=['answerroom'],\n\t\t\t\tcurrentdialogstate='askingwheretoremind'\n\t\t\t)\n\t\t\treturn\n\n\t\tself.continuedialog(\n\t\t\tsessionid=session.sessionid,\n\t\t\ttext=self.randomtalk(text='isitcorrect', replace=[session.slots['reminder']]),\n\t\t\tintentfilter=['answeryesorno'],\n\t\t\tcurrentdialogstate='askingifcorrect'\n\t\t)\n\n\n\t# this would be called after you've read out loud a reminder\n\t# it asks if the reminder can be deleted and sets the dialogue state to 'askingtodeletereminder'\n\tdef askdeletereminder(self, siteid):\n\t\tself.ask(\n\t\t\tsiteid=siteid,\n\t\t\ttext=self.randomtalk(text='canthereminderbedeleted'),\n\t\t\tintentfilter=['answeryesorno'],\n\t\t\tcurrentdialogstate='askingtodeletereminder'\n\t\t)\n\n\n\t# this is called by the intent yesorno only if the current dialogue state is 'askingtodeletereminder'\n\t# as declared in our mapping on line 25\n\tdef answerdeletereminder(self, session: dialogsession):\n\t\tif self.commons.isyes(session):\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okdeleted')\n\t\t\t)\n\t\telse:\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okkeepingit')\n\t\t\t)\n\n\t# this is called by the intent yesorno only if the current dialogue state is 'askingifcorrect'\n\t# as declared in our mapping on line 26\n\tdef answerreminderiscorrect(self, session: dialogsession):\n\t\tif self.commons.isyes(session):\n\t\t\tself.enddialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='okadded')\n\t\t\t)\n\t\telse:\n\t\t\tself.continuedialog(\n\t\t\t\tsessionid=session.sessionid,\n\t\t\t\ttext=self.randomtalk(text='sorrywhatisitthen')\n\t\t\t\t.....\n\n\n\nthe important parts here are how we declare our mappings. you can add as many routes as you wish, just take a look at alicecore skill. we are still declaring dialogue states the same in continuedialog. keep in mind this manual approach is useful for complex structures, and you should take advantage of the decorator approach first!",charsets:{}},{title:"Your first skill",frontmatter:{Title:"Your first skill",sidebarDepth:3,tags:["first skill","skill","introduction","development"]},regularPath:"/skill-development/your-first-skill.html",relativePath:"skill-development/your-first-skill.md",key:"v-2aedfd5d",path:"/skill-development/your-first-skill.html",headers:[{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:157},{level:2,title:"Understand the flow of your :skill:skill:",slug:"understand-the-flow-of-your",normalizedTitle:'understand the flow of your <term term="skill" show="skill"/>',charIndex:null},{level:2,title:"Using Alice's :interface:",slug:"using-alice-s",normalizedTitle:'using alice\'s <term term="interface"/>',charIndex:null},{level:2,title:"Using ProjectAlice-SK",slug:"using-projectalice-sk",normalizedTitle:"using projectalice-sk",charIndex:1461},{level:2,title:"Structure of a skill",slug:"structure-of-a-skill",normalizedTitle:"structure of a skill",charIndex:2581},{level:3,title:"You don't care directories and files explained",slug:"you-don-t-care-directories-and-files-explained",normalizedTitle:"you don't care directories and files explained",charIndex:2954},{level:3,title:"Talks directory",slug:"talks-directory",normalizedTitle:"talks directory",charIndex:3768},{level:3,title:"DialogTemplate directory",slug:"dialogtemplate-directory",normalizedTitle:"dialogtemplate directory",charIndex:4344},{level:3,title:"HelloWorld.py",slug:"helloworld-py",normalizedTitle:"helloworld.py",charIndex:2872},{level:3,title:"HelloWorld.install",slug:"helloworld-install",normalizedTitle:"helloworld.install",charIndex:2850},{level:3,title:"README.md",slug:"readme-md",normalizedTitle:"readme.md",charIndex:2912},{level:2,title:"What have we learned",slug:"what-have-we-learned",normalizedTitle:"what have we learned",charIndex:9958}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Prerequisites Understand the flow of your :skill:skill: Using Alice's :interface: Using ProjectAlice-SK Structure of a skill You don't care directories and files explained Talks directory DialogTemplate directory HelloWorld.py HelloWorld.install README.md What have we learned",content:'# Your first skill\nReady to create your first ? See how easy it is to get a new up and running, then we will step through the basic anatomy of an Alice .\n\n# Prerequisites\nIf you haven\'t already, check out our Introduction to Skill Development. This walk through assumes you:\n\n * Know some basic knowledge of Python programming\n * Have an account on GitHub\n * Have a working version of ProjectAlice\n\n# Understand the flow of your \nIt is always a good idea to start by writing down what you have in mind, the purpose of your . Think about the following points\n\n * What words will the user speak to activate the ?\n * What will Alice speak in response?\n * What data will you need to deliver the ?\n * Will you need any additional packages or dependencies?\n\nOnce you\'ve given these some thought, you can get started.\n\n# Using Alice\'s \nOpen up your Alice and go to the dev part. If the dev navigation button isn\'t showing make sure to:\n\n * Be logged in the \n * Enable dev mode in your settings\n\nThe page presented is rather self-explanatory, just fill the fields with the required information. Once you\'ve hit the Create button, the basic structure will be created for you. You\'ll find the freshly created in Project Alice\'s directory.\n\nThis uses ProjectAlice-SK which we\'ll discuss next and that provides more advanced tools for you to publish a perfect . Although you created the from the , it is recommended that you still use projectalice-sk to validate your .\n\n# Using ProjectAlice-SK\nYou can download the Skill Kit from pypi or by installing it directly using\n\npip install projectalice-sk\n\n\nThis tool is maintained by us and provides the same workflow as Alice\'s .\n\nOnce installed, you can start it for different modes:\n\n * Create a new , with projectalice-sk create\n * Validate a , which verifies the files, with projectalice-sk validate\n\nLet\'s create our first ! Type projectalice-sk create and hit enter.\n\n * Enter your GitHub username\n * Enter a name, for this example it\'s going to be HelloWorld\n * Enter a speakable name. This is the same as the name, but in a human-readable and speakable way: Hello world\n * Enter a description for our test : My first skill for Alice!\n * Choose a category in the list, by using the down and up arrows, and Enter to select\n * Choose the languages your will support. English is mandatory. Use the up and down arrows and space to select or deselect a language. Hit Enter once your selection is made. For the sake of this example, we are going to select only en.\n * Answer No to all the following questions. We will come back to them later.\n\n# Structure of a skill\nLet\'s take a look at what files were created.\n\n.\n├─ .github\n│  └─ workflows\n│     └─ test.yml\n│  └─ PULL_REQUEST_TEMPLATE.md\n├─ dialogTemplate\n│  ├─ en.json\n│  └─ en.sample\n├─ talks\n│  └─ en.json\n├─ .editorconfig\n├─ .gitignore\n├─ .gitlab-ci.yml\n├─ HelloWorld.install\n├─ HelloWorld.py\n├─ LICENSE\n├─ mypy.ini\n├─ README.md\n└─ sonar-project.properties\n\n\n# You don\'t care directories and files explained\n * .github: Contains a template for pull requests that other users could open on your as well as a GitHub workflow that validates your everytime your push modifications\n * .editorconfig: It\'s a file that tells your editor, if compliant to that norm, some of our code guidelines\n * .gitignore: A file that tells Git what files should be ignored and not pushed online when you commit your changes\n * .gitlab-ci.yml: Once published, your is automatically mirrored on Gitlab. This file contains a workflow that validates and tests your \n * LICENSE: The default licence file\n * mypy.ini: A file needed for mypy to run Python syntax check on your \n * sonar-project.properties: A file that tells SonarCloud how to run the code quality checks as well as the code coverage\n\n# Talks directory\nThe talks directories contains a file for each spoken language the supports, named using the ISO639-1 Language Codes for the language. For example, German is \'de\', and English is \'en\'.\n\nThe File created by the Kit does only contain some dummy answers that show the structure of the file:\n\n{\n\t"dummy": [\n        "example sentence",\n        "another example sentence"\n    ]\n}\n\n\nWhen instructed to use a particular dialog, Alice will choose one of these sentences at random. This is closer to natural speech. That is, many similar phrases mean the same thing.\n\n# DialogTemplate directory\nEach defines one or more . are defined in the dialogTemplate directory. The dialogTemplate directory is organized by language as well, one json file for each language like en.json for english.\n\nWe will learn about in more detail shortly.\n\n# HelloWorld.py\nThe HelloWorld.py file is where most of the is defined using Python code.\n\nLet\'s take a look at it:\n\n# Importing libraries\nfrom core.base.model.AliceSkill import AliceSkill\nfrom core.dialog.model.DialogSession import DialogSession\nfrom core.util.Decorators import IntentHandler\n\n\nThis section of code imports the required libraries. Some libraries will be required on every , and your may need to import additional libraries.\n\n# Class definition\nThe class definition extends the AliceSkill class:\n\nclass Helloworld(AliceSkill):\n\n\nThe class should be named logically, for example "Time", "Weather", "News", "IPAddress". If you would like guidance on what to call your , please join the skills Channel on our Discord chat. It is vital that the class wears the same name as the file it is in, and the file wears the same name as the directory.\n\n# handlers\nBy default, the file uses our @IntentHandler decorator that allows easy coding. By default, you don\'t need to use the __init__ function, but can for more advanced use cases.\n\nThe default file has two defined, MyIntentName and MySecondIntentName\n\n\t@IntentHandler(\'MyIntentName\')\n\tdef testIntent(self, session: DialogSession, **_kwargs):\n\t\tpass\n\n\t@IntentHandler(\'MySecondIntentName\')\n\tdef secondTestIntent(self, session: DialogSession, **_kwargs):\n\t\tpass\n\n\nThe functions receive two parameters:\n\n * self - a reference to the HelloWorld object itself\n * session - a DialogSession object, that includes information like the :slot:slots: an was called with.\n\n# HelloWorld.install\nThis file defines what is required to get the up and running. It includes parameters like the version number, a description, supported languages and conditions for your to be started.\n\nPro tip\n\nIf you are using an IDE able to handle json schema, it is highly recommended using our .install file Schema\n\nLet\'s take a look at a basic install file:\n\n{\n  "name": "Helloworld",\n  "speakableName": "Hello world",\n  "version": "0.0.1",\n  "icon": "fab fa-battle-net",\n  "category": "information",\n  "author": "Psycho",\n  "maintainers": [],\n  "desc": "My first skill for alice!",\n  "aliceMinVersion": "1.0.0-b3",\n  "pipRequirements": [],\n  "systemRequirements": [],\n  "conditions": {\n\t"lang": [\n\t  "en"\n\t]\n  }\n}\n\n\n# name\nDefines the name of the . Everything should carry the same name and yes, it is case-sensitive!\n\n# speakablename\nThe name of the in a human-readable and speakable form.\n\n# version\nDefines the current version of your , in a "3 positions" versioning system, like X.X.X. The first position is used for major releases, the second is used for improved or added functions to current release, and the third one is commonly used for hotfixes.\n\n# icon\nThis is the icon that will be displayed for your on the store. It supports any free Font Awesome icons\n\n# category\nDefines a category your belongs to. This helps categorize your to better search results on the store. Available categories:\n\n * weather\n * information\n * entertainment\n * music\n * game\n * kid\n * automation\n * assistance\n * security\n * planning\n * shopping\n * organisation\n * household\n * health\n\n# author\nThis is you! Make sure to use the same GitHub username!\n\n# maintainers\nWe believe in sharing, and people helping you should also be rewarded for their input. If you improve a that isn\'t yours, add yourself into the maintainers list!\n\n# desc\nA description of what your does\n\n# aliceMinVersion\nThe minimum Alice version users must be running for this to be usable. This is useful if your is using alpha or beta functions not yet available to everyone\n\n# pipRequirements\nWhatever you add here will be installed using pip install --no-cache\n\n# systemRequirements\nWhatever you add here will be installed using apt install\n\n# script\nBy specifying a shell script name here, the script will be run after installation. The script must be placed in your root directory. It is very useful for a that needs to git clone a repo per example!\n\n# conditions\nThis is where you define conditions for your to run. Let\'s say your is only english, german users won\'t be able to use it. There\'s quite a few conditions you can use:\n\nKey                   Description                                                                                                                                 \nlang                  Define the languages that are supported. User running languages not listed here won\'t be able to use your                                   \nonline                If set to true, your will only be usable for users not enforcing offline only for Alice                                                     \nskill                 This lists other needed for your to run. The must be installed and activated! In case the is missing, it will be automatically downloaded   \nnotSkill              Add any here that are known to conflict with yours. If any of the listed are detected, your won\'t install                                   \nasrArbitraryCapture   If set to true, the user must use an that is able to capture any text spoken to it and not only trained text                                \nactiveManager         List managers here that need to be active for your to run. This only concerns managers that can be deactivated, such as InterfaceManager    \n\n# README.md\nThe README file contains human-readable information about your .\n\n# What have we learned\nYou have now successfully created a new and have an understanding of the basic components that make up an Alice . Next we will dive into each component in more detail.',normalizedContent:'# your first skill\nready to create your first ? see how easy it is to get a new up and running, then we will step through the basic anatomy of an alice .\n\n# prerequisites\nif you haven\'t already, check out our introduction to skill development. this walk through assumes you:\n\n * know some basic knowledge of python programming\n * have an account on github\n * have a working version of projectalice\n\n# understand the flow of your \nit is always a good idea to start by writing down what you have in mind, the purpose of your . think about the following points\n\n * what words will the user speak to activate the ?\n * what will alice speak in response?\n * what data will you need to deliver the ?\n * will you need any additional packages or dependencies?\n\nonce you\'ve given these some thought, you can get started.\n\n# using alice\'s \nopen up your alice and go to the dev part. if the dev navigation button isn\'t showing make sure to:\n\n * be logged in the \n * enable dev mode in your settings\n\nthe page presented is rather self-explanatory, just fill the fields with the required information. once you\'ve hit the create button, the basic structure will be created for you. you\'ll find the freshly created in project alice\'s directory.\n\nthis uses projectalice-sk which we\'ll discuss next and that provides more advanced tools for you to publish a perfect . although you created the from the , it is recommended that you still use projectalice-sk to validate your .\n\n# using projectalice-sk\nyou can download the skill kit from pypi or by installing it directly using\n\npip install projectalice-sk\n\n\nthis tool is maintained by us and provides the same workflow as alice\'s .\n\nonce installed, you can start it for different modes:\n\n * create a new , with projectalice-sk create\n * validate a , which verifies the files, with projectalice-sk validate\n\nlet\'s create our first ! type projectalice-sk create and hit enter.\n\n * enter your github username\n * enter a name, for this example it\'s going to be helloworld\n * enter a speakable name. this is the same as the name, but in a human-readable and speakable way: hello world\n * enter a description for our test : my first skill for alice!\n * choose a category in the list, by using the down and up arrows, and enter to select\n * choose the languages your will support. english is mandatory. use the up and down arrows and space to select or deselect a language. hit enter once your selection is made. for the sake of this example, we are going to select only en.\n * answer no to all the following questions. we will come back to them later.\n\n# structure of a skill\nlet\'s take a look at what files were created.\n\n.\n├─ .github\n│  └─ workflows\n│     └─ test.yml\n│  └─ pull_request_template.md\n├─ dialogtemplate\n│  ├─ en.json\n│  └─ en.sample\n├─ talks\n│  └─ en.json\n├─ .editorconfig\n├─ .gitignore\n├─ .gitlab-ci.yml\n├─ helloworld.install\n├─ helloworld.py\n├─ license\n├─ mypy.ini\n├─ readme.md\n└─ sonar-project.properties\n\n\n# you don\'t care directories and files explained\n * .github: contains a template for pull requests that other users could open on your as well as a github workflow that validates your everytime your push modifications\n * .editorconfig: it\'s a file that tells your editor, if compliant to that norm, some of our code guidelines\n * .gitignore: a file that tells git what files should be ignored and not pushed online when you commit your changes\n * .gitlab-ci.yml: once published, your is automatically mirrored on gitlab. this file contains a workflow that validates and tests your \n * license: the default licence file\n * mypy.ini: a file needed for mypy to run python syntax check on your \n * sonar-project.properties: a file that tells sonarcloud how to run the code quality checks as well as the code coverage\n\n# talks directory\nthe talks directories contains a file for each spoken language the supports, named using the iso639-1 language codes for the language. for example, german is \'de\', and english is \'en\'.\n\nthe file created by the kit does only contain some dummy answers that show the structure of the file:\n\n{\n\t"dummy": [\n        "example sentence",\n        "another example sentence"\n    ]\n}\n\n\nwhen instructed to use a particular dialog, alice will choose one of these sentences at random. this is closer to natural speech. that is, many similar phrases mean the same thing.\n\n# dialogtemplate directory\neach defines one or more . are defined in the dialogtemplate directory. the dialogtemplate directory is organized by language as well, one json file for each language like en.json for english.\n\nwe will learn about in more detail shortly.\n\n# helloworld.py\nthe helloworld.py file is where most of the is defined using python code.\n\nlet\'s take a look at it:\n\n# importing libraries\nfrom core.base.model.aliceskill import aliceskill\nfrom core.dialog.model.dialogsession import dialogsession\nfrom core.util.decorators import intenthandler\n\n\nthis section of code imports the required libraries. some libraries will be required on every , and your may need to import additional libraries.\n\n# class definition\nthe class definition extends the aliceskill class:\n\nclass helloworld(aliceskill):\n\n\nthe class should be named logically, for example "time", "weather", "news", "ipaddress". if you would like guidance on what to call your , please join the skills channel on our discord chat. it is vital that the class wears the same name as the file it is in, and the file wears the same name as the directory.\n\n# handlers\nby default, the file uses our @intenthandler decorator that allows easy coding. by default, you don\'t need to use the __init__ function, but can for more advanced use cases.\n\nthe default file has two defined, myintentname and mysecondintentname\n\n\t@intenthandler(\'myintentname\')\n\tdef testintent(self, session: dialogsession, **_kwargs):\n\t\tpass\n\n\t@intenthandler(\'mysecondintentname\')\n\tdef secondtestintent(self, session: dialogsession, **_kwargs):\n\t\tpass\n\n\nthe functions receive two parameters:\n\n * self - a reference to the helloworld object itself\n * session - a dialogsession object, that includes information like the :slot:slots: an was called with.\n\n# helloworld.install\nthis file defines what is required to get the up and running. it includes parameters like the version number, a description, supported languages and conditions for your to be started.\n\npro tip\n\nif you are using an ide able to handle json schema, it is highly recommended using our .install file schema\n\nlet\'s take a look at a basic install file:\n\n{\n  "name": "helloworld",\n  "speakablename": "hello world",\n  "version": "0.0.1",\n  "icon": "fab fa-battle-net",\n  "category": "information",\n  "author": "psycho",\n  "maintainers": [],\n  "desc": "my first skill for alice!",\n  "aliceminversion": "1.0.0-b3",\n  "piprequirements": [],\n  "systemrequirements": [],\n  "conditions": {\n\t"lang": [\n\t  "en"\n\t]\n  }\n}\n\n\n# name\ndefines the name of the . everything should carry the same name and yes, it is case-sensitive!\n\n# speakablename\nthe name of the in a human-readable and speakable form.\n\n# version\ndefines the current version of your , in a "3 positions" versioning system, like x.x.x. the first position is used for major releases, the second is used for improved or added functions to current release, and the third one is commonly used for hotfixes.\n\n# icon\nthis is the icon that will be displayed for your on the store. it supports any free font awesome icons\n\n# category\ndefines a category your belongs to. this helps categorize your to better search results on the store. available categories:\n\n * weather\n * information\n * entertainment\n * music\n * game\n * kid\n * automation\n * assistance\n * security\n * planning\n * shopping\n * organisation\n * household\n * health\n\n# author\nthis is you! make sure to use the same github username!\n\n# maintainers\nwe believe in sharing, and people helping you should also be rewarded for their input. if you improve a that isn\'t yours, add yourself into the maintainers list!\n\n# desc\na description of what your does\n\n# aliceminversion\nthe minimum alice version users must be running for this to be usable. this is useful if your is using alpha or beta functions not yet available to everyone\n\n# piprequirements\nwhatever you add here will be installed using pip install --no-cache\n\n# systemrequirements\nwhatever you add here will be installed using apt install\n\n# script\nby specifying a shell script name here, the script will be run after installation. the script must be placed in your root directory. it is very useful for a that needs to git clone a repo per example!\n\n# conditions\nthis is where you define conditions for your to run. let\'s say your is only english, german users won\'t be able to use it. there\'s quite a few conditions you can use:\n\nkey                   description                                                                                                                                 \nlang                  define the languages that are supported. user running languages not listed here won\'t be able to use your                                   \nonline                if set to true, your will only be usable for users not enforcing offline only for alice                                                     \nskill                 this lists other needed for your to run. the must be installed and activated! in case the is missing, it will be automatically downloaded   \nnotskill              add any here that are known to conflict with yours. if any of the listed are detected, your won\'t install                                   \nasrarbitrarycapture   if set to true, the user must use an that is able to capture any text spoken to it and not only trained text                                \nactivemanager         list managers here that need to be active for your to run. this only concerns managers that can be deactivated, such as interfacemanager    \n\n# readme.md\nthe readme file contains human-readable information about your .\n\n# what have we learned\nyou have now successfully created a new and have an understanding of the basic components that make up an alice . next we will dive into each component in more detail.',charsets:{}},{title:"Sponsors",frontmatter:{title:"Sponsors",sidebarDepth:3},regularPath:"/sponsors/",relativePath:"sponsors/README.md",key:"v-36a43626",path:"/sponsors/",headers:[{level:2,title:"Jetbrains",slug:"jetbrains",normalizedTitle:"jetbrains",charIndex:829},{level:2,title:"Gitlab",slug:"gitlab",normalizedTitle:"gitlab",charIndex:1402},{level:2,title:"Zenhub",slug:"zenhub",normalizedTitle:"zenhub",charIndex:1896}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Jetbrains Gitlab Zenhub",content:"Project Alice says a huge thanks to the following persons and companies for supporting us! It's not an easy world for those developing free software for open source and the costs involved with creating can quickly become crushing if you aim for efficiency and quality.\n\nIf you too want to sponsor Project Alice, we currently have two ways on place, either by a monthly support, with Liberapay that is clearer than Patreons and gives 100% of the funds to the receiver or a one shot donation through PayPal.\n\nLiberapay: https://liberapay.com/Psycho/donate\n\n\nAt the moment I do not have any plans on how to thank patrons other than naming them here with some link of their will, but feel free to shoot ideas through if you have any.\n\nBlockchain.com: 1Dv6CtEHUmDgv6tkgbsbrVRrBLh1KxUKPA\n\nPaypal: https://paypal.me/Psychokiller1888\n\n# Jetbrains\n Are you looking for perfect tools for whatever language you code in? Look no further, Jetbrains offers the perfect suite for developers in python, php, html, java, rust, c# and many more! With dedicated apps for each language, powerful code completion and analysis there's no excuses for typos anymore! Refactoring brought to a whole other level, debugging sweetened, remote auto deployment, themes, plugins and so much more make it the perfect platform for all your needs!\n\nThank you for providing some full pack free licenses for open source development!\n\n\n\n# Gitlab\n Looking to host your code? For a complete and very powerful Continuous Integration system? Managing your issues? Maybe you are already using another repository, but you still want to benefit from the CI? Give Gitlab a try! And even more than a try! The hosted solution is perfect for starters but if your needs increase, Gitlab can be easily downloaded and installed. Best part of it? Fear no data leakage, it's open source!\n\nThank you gitlab for providing us with a Gold license!\n\n\n\n# Zenhub\n From self-driving vehicles and planetary rovers to artificial intelligence that powers the early detection and treatment of cancer, Zenhub enables the most forward-thinking organizations to engineer a brighter future. As software projects become more and more complex, the way we manage these projects doesn’t have to be. Zenhub’s mission is to make managing software projects more transparent, accurate, and simple.\n\nThank you Zenhub to allow us to use your great software for free!",normalizedContent:"project alice says a huge thanks to the following persons and companies for supporting us! it's not an easy world for those developing free software for open source and the costs involved with creating can quickly become crushing if you aim for efficiency and quality.\n\nif you too want to sponsor project alice, we currently have two ways on place, either by a monthly support, with liberapay that is clearer than patreons and gives 100% of the funds to the receiver or a one shot donation through paypal.\n\nliberapay: https://liberapay.com/psycho/donate\n\n\nat the moment i do not have any plans on how to thank patrons other than naming them here with some link of their will, but feel free to shoot ideas through if you have any.\n\nblockchain.com: 1dv6ctehumdgv6tkgbsbrvrrblh1kxukpa\n\npaypal: https://paypal.me/psychokiller1888\n\n# jetbrains\n are you looking for perfect tools for whatever language you code in? look no further, jetbrains offers the perfect suite for developers in python, php, html, java, rust, c# and many more! with dedicated apps for each language, powerful code completion and analysis there's no excuses for typos anymore! refactoring brought to a whole other level, debugging sweetened, remote auto deployment, themes, plugins and so much more make it the perfect platform for all your needs!\n\nthank you for providing some full pack free licenses for open source development!\n\n\n\n# gitlab\n looking to host your code? for a complete and very powerful continuous integration system? managing your issues? maybe you are already using another repository, but you still want to benefit from the ci? give gitlab a try! and even more than a try! the hosted solution is perfect for starters but if your needs increase, gitlab can be easily downloaded and installed. best part of it? fear no data leakage, it's open source!\n\nthank you gitlab for providing us with a gold license!\n\n\n\n# zenhub\n from self-driving vehicles and planetary rovers to artificial intelligence that powers the early detection and treatment of cancer, zenhub enables the most forward-thinking organizations to engineer a brighter future. as software projects become more and more complex, the way we manage these projects doesn’t have to be. zenhub’s mission is to make managing software projects more transparent, accurate, and simple.\n\nthank you zenhub to allow us to use your great software for free!",charsets:{}},{title:"Nobody's perfect",frontmatter:{title:"Nobody's perfect",sidebarDepth:3},regularPath:"/troubleshooting/",relativePath:"troubleshooting/README.md",key:"v-dc05a280",path:"/troubleshooting/",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. But hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... Ok, I stop.... Let's find a solution to your problem!\n\n * Main unit",normalizedContent:"yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. but hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... ok, i stop.... let's find a solution to your problem!\n\n * main unit",charsets:{}},{title:"Main unit",frontmatter:{title:"Main unit",sidebarDepth:3,tags:["bugs","troubleshoot","main unit","problem"]},regularPath:"/troubleshooting/main-unit.html",relativePath:"troubleshooting/main-unit.md",key:"v-834a41b6",path:"/troubleshooting/main-unit.html",headers:[{level:2,title:"Auto bug report",slug:"auto-bug-report",normalizedTitle:"auto bug report",charIndex:1803},{level:3,title:"Alice is started",slug:"alice-is-started",normalizedTitle:"alice is started",charIndex:1946},{level:3,title:"Alice doesn't start",slug:"alice-doesn-t-start",normalizedTitle:"alice doesn't start",charIndex:2142},{level:3,title:"Tell Alice to report the bugs",slug:"tell-alice-to-report-the-bugs",normalizedTitle:"tell alice to report the bugs",charIndex:2366}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Auto bug report Alice is started Alice doesn't start Tell Alice to report the bugs",content:"Keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! Do not unplug your device if nothing happens, you might cut Alice in the middle of her training!\n\nFirst thing we want to do is SSH to your device. Find out your device's IP and ssh to it using whatever you have. On Windows, the terminal now supports SSH Windows Terminal or you can use Kitty, on other platforms your can simply connect through your terminal.\n\nThere are many things we can check, this is one path I'm giving you, but it's not the only one!\n\nFirst, let's check if the Project Alice service is up and running:\n\nsudo systemctl status ProjectAlice\n\nYou should get some info about the service. If you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nIf the service is dead or restarts all the time, let's debug it! Stop Project Alice. First pres CTRL+C to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop ProjectAlice\n\nLet's start it manually to have a better vision of the logs. In your ssh terminal type\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nThis will manually start ProjectAlice printing out every detail and stopping if any unrecoverable error arises. Read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nIf there isn't any error and Alice seems to start fine, the last log line, on first boot, should be something like\n\n[Project Alice] Started in 7.23 seconds\n\nAnd you should hear a little chime.\n\nIf you see errors, if she shuts down or reboots by herself in a loop, time for some reporting 🦖\n\n# Auto bug report\nGitHub\n\nYou need an account on GitHub to use this feature as well as a GitHub API token\n\n * https://github.com\n * API Token\n\n# Alice is started\nOpen you web console and go into admin then settings and make sure the GitHub username as well as the API token are inserted. Stop Alice with sudo systemctl stop ProjectAlice.\n\n# Alice doesn't start\nSSH to your device and edit Alice's config file: nano ~/ProjectAlice/config.json. Search for githubToken and insert your GitHub API token and search for githubUsername and insert your GitHub username.\n\n# Tell Alice to report the bugs\nThis is a one command operation that can also be made through AliceCLI. The reason for no configuration or simpler way to do it, is that everything can fail, and reporting can also fail. But not a command entered willingly by a user...\n\n * If you don't start Alice manually, SSH to your device and stop her with sudo systemctl stop ProjectAlice.\n * Create the bug report flag by typing: touch ~/ProjectAlice/alice.bugreport.\n * Start Alice with cd ~/ProjectAlice && ./venv/bin/python main.py.\n\nAround line 5, you should see the BugReporterManager saying: [BugReportManager] Flag file detected, recording errors for this run\n\nThe whole logs will be automatically sent to our GitHub issues when Alice goes down. Which means, if she's running, you need to stop her with CTRL+C so the report is sent to us.\n\nTowards the end of the logs, you'll see something like [BugReportManager] Created new issue: https://github.com/project-alice-assistant/ProjectAlice/issues/599 which means the report was made, and you can find the issue at the given link\n\n * If you want to have Alice run automatically again, type sudo systemctl start ProjectAlice.\n\nThe report flag file is automatically deleted everytime Alice goes down",normalizedContent:"keep in mind that the first boot can take up to 15 minutes of silence depending on your settings, hardware and all! do not unplug your device if nothing happens, you might cut alice in the middle of her training!\n\nfirst thing we want to do is ssh to your device. find out your device's ip and ssh to it using whatever you have. on windows, the terminal now supports ssh windows terminal or you can use kitty, on other platforms your can simply connect through your terminal.\n\nthere are many things we can check, this is one path i'm giving you, but it's not the only one!\n\nfirst, let's check if the project alice service is up and running:\n\nsudo systemctl status projectalice\n\nyou should get some info about the service. if you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nif the service is dead or restarts all the time, let's debug it! stop project alice. first pres ctrl+c to stop the systemctl command and in your terminal type.\n\nsudo systemctl stop projectalice\n\nlet's start it manually to have a better vision of the logs. in your ssh terminal type\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\nthis will manually start projectalice printing out every detail and stopping if any unrecoverable error arises. read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nif there isn't any error and alice seems to start fine, the last log line, on first boot, should be something like\n\n[project alice] started in 7.23 seconds\n\nand you should hear a little chime.\n\nif you see errors, if she shuts down or reboots by herself in a loop, time for some reporting 🦖\n\n# auto bug report\ngithub\n\nyou need an account on github to use this feature as well as a github api token\n\n * https://github.com\n * api token\n\n# alice is started\nopen you web console and go into admin then settings and make sure the github username as well as the api token are inserted. stop alice with sudo systemctl stop projectalice.\n\n# alice doesn't start\nssh to your device and edit alice's config file: nano ~/projectalice/config.json. search for githubtoken and insert your github api token and search for githubusername and insert your github username.\n\n# tell alice to report the bugs\nthis is a one command operation that can also be made through alicecli. the reason for no configuration or simpler way to do it, is that everything can fail, and reporting can also fail. but not a command entered willingly by a user...\n\n * if you don't start alice manually, ssh to your device and stop her with sudo systemctl stop projectalice.\n * create the bug report flag by typing: touch ~/projectalice/alice.bugreport.\n * start alice with cd ~/projectalice && ./venv/bin/python main.py.\n\naround line 5, you should see the bugreportermanager saying: [bugreportmanager] flag file detected, recording errors for this run\n\nthe whole logs will be automatically sent to our github issues when alice goes down. which means, if she's running, you need to stop her with ctrl+c so the report is sent to us.\n\ntowards the end of the logs, you'll see something like [bugreportmanager] created new issue: https://github.com/project-alice-assistant/projectalice/issues/599 which means the report was made, and you can find the issue at the given link\n\n * if you want to have alice run automatically again, type sudo systemctl start projectalice.\n\nthe report flag file is automatically deleted everytime alice goes down",charsets:{}},{title:"Satellite",frontmatter:{title:"Satellite",sidebarDepth:3},regularPath:"/troubleshooting/satellite.html",relativePath:"troubleshooting/satellite.md",key:"v-2a25b445",path:"/troubleshooting/satellite.html",lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:null,content:"Yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. But hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... Ok, I stop.... Let's find a solution to your problem! Keep in mind that the first boot can take up to 15 minutes on your settings, hardware and all! Do not unplug your device if nothing happens, you might cut Alice in the middle of her installing!\n\nFirst thing we want to do is SSH to your device. Find out your device's IP and ssh to it using whatever you have. You can simply connect through your terminal.\n\nThere are many things we can check, this is one path I'm giving you, but it's not the only one!\n\nFirst, let's check if the Project Alice service is up and running:\n\nsudo systemctl status ProjectAlice\n\nYou should get some info about the service. If you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nIf the service is dead or restarts all the time, let's debug it! Stop Project Alice. First pres CTRL+C to stop the systemctl command and in your terminal type\n\nsudo systemctl stop ProjectAlice\n\nLet's start it manually to have a better vision of the logs. In your ssh terminal type\n\ncd /home/pi/ProjectAlice\n./venv/bin/python main.py\n\n\nThis will manually start ProjectAlice printing out every detail and stopping if any unrecoverable error arises. Check for these errors and report them if any on GitHub. Read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nIf there are no error and Alice seems to start fine, the last log line, on first boot, should be something like\n\nThis satellite is not yet registered for Project Alice. Searching for main unit\n\n# The logs say \"This satellite is not yet registered for Project Alice. Searching for main unit\" but nothing happens\nAt this point, you should ask alice to \"Add a new satellite\"",normalizedContent:"yes, nobody and nothing's perfect, but we try hard to be as close as perfect as possible. but hey, let's face it, it's a ton of code, and it can go wrong, or maybe you made something wrong, or you're using hardware we've never tested, or.... ok, i stop.... let's find a solution to your problem! keep in mind that the first boot can take up to 15 minutes on your settings, hardware and all! do not unplug your device if nothing happens, you might cut alice in the middle of her installing!\n\nfirst thing we want to do is ssh to your device. find out your device's ip and ssh to it using whatever you have. you can simply connect through your terminal.\n\nthere are many things we can check, this is one path i'm giving you, but it's not the only one!\n\nfirst, let's check if the project alice service is up and running:\n\nsudo systemctl status projectalice\n\nyou should get some info about the service. if you check it for a while you'll notice that it either continues with normal operations in which case you have to wait for it to start, or you'll notice it crashes and restarts all the time or even says that the service is dead.\n\nif the service is dead or restarts all the time, let's debug it! stop project alice. first pres ctrl+c to stop the systemctl command and in your terminal type\n\nsudo systemctl stop projectalice\n\nlet's start it manually to have a better vision of the logs. in your ssh terminal type\n\ncd /home/pi/projectalice\n./venv/bin/python main.py\n\n\nthis will manually start projectalice printing out every detail and stopping if any unrecoverable error arises. check for these errors and report them if any on github. read the logs carefully, they always give hint if something's missing, a setting not set, something wrong.\n\nif there are no error and alice seems to start fine, the last log line, on first boot, should be something like\n\nthis satellite is not yet registered for project alice. searching for main unit\n\n# the logs say \"this satellite is not yet registered for project alice. searching for main unit\" but nothing happens\nat this point, you should ask alice to \"add a new satellite\"",charsets:{}},{title:"Basic usage",frontmatter:{title:"Basic usage",sidebarDepth:3},regularPath:"/usage/",relativePath:"usage/README.md",key:"v-3b1acf32",path:"/usage/",headers:[{level:2,title:"Not understood",slug:"not-understood",normalizedTitle:"not understood",charIndex:686},{level:3,title:"Example",slug:"example",normalizedTitle:"example",charIndex:1792}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"Not understood Example",content:"# Voice\nAlice is a voice assistant, so technically we've tried to make the most of the functions voice supported. Some functions are still under work, others might get voice support at a later point, but usually you interact with Alice with your voice!\n\nOne thing people usually tend to do is being shy or not knowing what to say to a voice assistant, they don't have a physical person in front of them and speaking to a machine doesn't always come natural. With Alice, you don't need to be afraid, just talk to her and ask whatever you want. If she doesn't understand, she'll let you know! The best part of it is that for many of the cases you can add a to make her understand you!\n\n# Not understood\nAlice is able to capture what you say thanks to her component and try to decipher it by using her component. Once she has what you said, it still doesn't mean she knows what to do with it... First she'll need a to handle that request. If there's no skill, she won't know what to do and apologize about it. But she is able to check directly on our skill store to try to find a skill that can handle that request! If one is found she'll propose to download and install it for you!\n\nIf there's a that should, in your opinion, handle what you ask her, but she still doesn't, that would mean her confidence score is too low. The confidence score threshold can be set in the admin part of the .\n\nTIP\n\nSometimes Alice doesn't understand something the way you say it. She knows you're asking for the time, but she's not confident about it and thus says she doesn't understand. Instead of saying the same twice, three times or more, or set the confidence score lower, try to slightly change, she might then understand! And you know what? She'll even learn from that after confirming if that's ok!\n\n# Example\nWhat's better than an example?\n\nHey Alice?That's me!Gimme the temp outsideSorry? I did not understand...At that point, instead of naturally say it again the same way, try to change the way you are asking:\n\nWhat's the temperature outside?It's currently 6°C outsideIs that what you meant before?YesOk, cool, I'll remember that!Hey Alice?That's me!Gimme the temp outsideIt's currently 6°C outside",normalizedContent:"# voice\nalice is a voice assistant, so technically we've tried to make the most of the functions voice supported. some functions are still under work, others might get voice support at a later point, but usually you interact with alice with your voice!\n\none thing people usually tend to do is being shy or not knowing what to say to a voice assistant, they don't have a physical person in front of them and speaking to a machine doesn't always come natural. with alice, you don't need to be afraid, just talk to her and ask whatever you want. if she doesn't understand, she'll let you know! the best part of it is that for many of the cases you can add a to make her understand you!\n\n# not understood\nalice is able to capture what you say thanks to her component and try to decipher it by using her component. once she has what you said, it still doesn't mean she knows what to do with it... first she'll need a to handle that request. if there's no skill, she won't know what to do and apologize about it. but she is able to check directly on our skill store to try to find a skill that can handle that request! if one is found she'll propose to download and install it for you!\n\nif there's a that should, in your opinion, handle what you ask her, but she still doesn't, that would mean her confidence score is too low. the confidence score threshold can be set in the admin part of the .\n\ntip\n\nsometimes alice doesn't understand something the way you say it. she knows you're asking for the time, but she's not confident about it and thus says she doesn't understand. instead of saying the same twice, three times or more, or set the confidence score lower, try to slightly change, she might then understand! and you know what? she'll even learn from that after confirming if that's ok!\n\n# example\nwhat's better than an example?\n\nhey alice?that's me!gimme the temp outsidesorry? i did not understand...at that point, instead of naturally say it again the same way, try to change the way you are asking:\n\nwhat's the temperature outside?it's currently 6°c outsideis that what you meant before?yesok, cool, i'll remember that!hey alice?that's me!gimme the temp outsideit's currently 6°c outside",charsets:{}},{title:"Web Interface",frontmatter:{title:"Web Interface",sidebarDepth:5,tags:["web","interface"]},regularPath:"/usage/web-interface.html",relativePath:"usage/web-interface.md",key:"v-8f2e0e76",path:"/usage/web-interface.html",headers:[{level:2,title:"What is it?",slug:"what-is-it",normalizedTitle:"what is it?",charIndex:18},{level:2,title:"Where to find it",slug:"where-to-find-it",normalizedTitle:"where to find it",charIndex:502},{level:2,title:"Pages and their uses",slug:"pages-and-their-uses",normalizedTitle:"pages and their uses",charIndex:697},{level:3,title:"First timers",slug:"first-timers",normalizedTitle:"first timers",charIndex:720},{level:3,title:"Widgets",slug:"widgets",normalizedTitle:"widgets",charIndex:1348},{level:2,title:"FAQ",slug:"faq",normalizedTitle:"faq",charIndex:3186},{level:3,title:"My Google credentials are not showing in the admin tab!",slug:"my-google-credentials-are-not-showing-in-the-admin-tab",normalizedTitle:"my google credentials are not showing in the admin tab!",charIndex:3192}],lastUpdated:"9/5/2023, 12:56:58 PM",headersStr:"What is it? Where to find it Pages and their uses First timers Widgets FAQ My Google credentials are not showing in the admin tab!",content:"# Web interface\n# What is it?\nThe web interface is a graphical tool, on your own browser, to access, configure, play, speak and more with Alice and all its devices. But not only... It can be used to display relevant information in widgets in magic mirror mode! Or it can be used to chat with Alice while others are sleeping, directly from your keyboard. The interface is able to play sound, so Alice can talk to you directly through it, on your computer, phone or whatever can display the web page!\n\n# Where to find it\nThe Alice web is exposed over port 5000 (configurable in your settings) and can be accessed on the IP or local host name for your Alice host, e.g:\n\nhttp://192.168.1.101:5000/\n\n# Pages and their uses\n# First timers\nIf it's the first time you open the web interface page, you will be presented with a connection page. Enter Alice's main unit ip address as well as the port. The port should be 5000 if you haven't changed it manually. By default, those settings are not remembered, privacy first, but the slider will allow the browser to retain the information.\n\nOnce the connection is established, you will be presented with a very scarce page where you can only view information but not really interact as you are not yet logged in. The top left corner indicates the page you are currently on, in this case, you should be on the \"Widgets\" page, with no widgets installed yet.\n\nHead to \"Login\" and enter your username and pin code. Remember the pin code you've set in ProjectAlice.yaml? That one, yes, and as user, if you haven't created your own yet, you can use admin. Again as privacy comes first, you'll need to toggle the Remember me slider for your browser to auto log you in next time.\n\nNow we are talking! Once connected you gain access to many other pages and tools! Let's round them up and quickly present each of them\n\n# Widgets\nThis page contains by default one sub-page with a \"Bio hazard\" icon. Widgets are provided by skills you install, if the developer made some. Widgets are tiles that can visually present you relevant information.\n\nUsing the + icon, you can add a new page. Because your interface is a web page, you can open it on different devices, so maybe you want a \"Kitchen\" page for your fridge screen, where you can display timer widgets and some shopping list widgets. And in the living room, you'd like to have a TV program widget? This is what those pages are for!\n\nBy clicking on the pen icon, you'll be presented with different buttons.\n\n# Theater mode\nPuts the actual widget page as full screen. Exit the mode by pressing esc\n\n# Magic mirror mode\nPuts the actual widget page as magic mirror mode. Similar to theater mode, but with a totally black background.. Ext the mode by pressing esc\n\n# Settings\nEnables the settings cog on the widgets, allowing you to access their own individual settings and allow dragging/resizing/rotating the widgets on the page.\n\n# Add widgets\nPresents you an overlay with widgets you can add to your page.\n\n# Remove widgets\nActivate the widget deletion mode.\n\nWIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP WIP\n\n# FAQ\n# My Google credentials are not showing in the admin tab!\n * These credentials are marked as sensitive data and are meant to be hidden! You can always paste your new credentials, and they will overwrite the old ones.",normalizedContent:"# web interface\n# what is it?\nthe web interface is a graphical tool, on your own browser, to access, configure, play, speak and more with alice and all its devices. but not only... it can be used to display relevant information in widgets in magic mirror mode! or it can be used to chat with alice while others are sleeping, directly from your keyboard. the interface is able to play sound, so alice can talk to you directly through it, on your computer, phone or whatever can display the web page!\n\n# where to find it\nthe alice web is exposed over port 5000 (configurable in your settings) and can be accessed on the ip or local host name for your alice host, e.g:\n\nhttp://192.168.1.101:5000/\n\n# pages and their uses\n# first timers\nif it's the first time you open the web interface page, you will be presented with a connection page. enter alice's main unit ip address as well as the port. the port should be 5000 if you haven't changed it manually. by default, those settings are not remembered, privacy first, but the slider will allow the browser to retain the information.\n\nonce the connection is established, you will be presented with a very scarce page where you can only view information but not really interact as you are not yet logged in. the top left corner indicates the page you are currently on, in this case, you should be on the \"widgets\" page, with no widgets installed yet.\n\nhead to \"login\" and enter your username and pin code. remember the pin code you've set in projectalice.yaml? that one, yes, and as user, if you haven't created your own yet, you can use admin. again as privacy comes first, you'll need to toggle the remember me slider for your browser to auto log you in next time.\n\nnow we are talking! once connected you gain access to many other pages and tools! let's round them up and quickly present each of them\n\n# widgets\nthis page contains by default one sub-page with a \"bio hazard\" icon. widgets are provided by skills you install, if the developer made some. widgets are tiles that can visually present you relevant information.\n\nusing the + icon, you can add a new page. because your interface is a web page, you can open it on different devices, so maybe you want a \"kitchen\" page for your fridge screen, where you can display timer widgets and some shopping list widgets. and in the living room, you'd like to have a tv program widget? this is what those pages are for!\n\nby clicking on the pen icon, you'll be presented with different buttons.\n\n# theater mode\nputs the actual widget page as full screen. exit the mode by pressing esc\n\n# magic mirror mode\nputs the actual widget page as magic mirror mode. similar to theater mode, but with a totally black background.. ext the mode by pressing esc\n\n# settings\nenables the settings cog on the widgets, allowing you to access their own individual settings and allow dragging/resizing/rotating the widgets on the page.\n\n# add widgets\npresents you an overlay with widgets you can add to your page.\n\n# remove widgets\nactivate the widget deletion mode.\n\nwip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip wip\n\n# faq\n# my google credentials are not showing in the admin tab!\n * these credentials are marked as sensitive data and are meant to be hidden! you can always paste your new credentials, and they will overwrite the old ones.",charsets:{}}],themeConfig:{yuu:{defaultDarkTheme:!0,defaultColorTheme:"blue"},logo:"/images/umbrella.png",repo:"project-alice-assistant/ProjectAlice",docsRepo:"project-alice-assistant/docs",docsDir:"docs",editLinks:!0,smoothScroll:!0,sidebarDepth:6,locales:{"/":{selectText:" Languages",label:"English",ariaLabel:"Languages",editLinkText:"Help us improve this page!",repoLabel:"Contribute!",lastUpdated:"Last Updated",nav:[{text:"About Alice",link:"/about-alice/"},{text:"Setup",items:[{text:"Main unit",link:"/setup/alice-cli"},{text:"Satellite",link:"/satsetup/"}]},{text:"Troubleshooting",items:[{text:"Main unit",link:"/troubleshooting/main-unit"},{text:"Satellite",link:"/troubleshooting/main-unit"}]},{text:"Usage",items:[{text:"Using Alice",link:"/usage/"},{text:"Using satellites",link:""},{text:"Using the web interface",link:"/usage/web-interface"},{text:"Skill store",link:"https://store.projectalice.io"}]},{text:"Learn more",items:[{text:"Contributing",link:"/contribute/"},{text:"Get started with Pycharm",link:"/community-made/getting-started-pycharm"},{text:"Frequent questions and answers",link:"/community-made/frequent-questions-and-answer"},{text:"Skill development",link:"/skill-development/"},{text:"Core development",link:"/core-development/"},{text:"Hotword and wakeword",link:"/setup/wakeword"},{text:"API",link:"https://api.projectalice.io/"}]},{text:"Sponsors",link:"/sponsors/"},{text:"Links",link:"/links/"}],sidebar:{"/about-alice/":[{title:"About Alice",collapsable:!1,children:["",["GLOSSARY","Glossary"]]}],"/setup/":[{title:"Setup",collapsable:!1,children:["","requirements","alice-cli","developer-install"]}],"/setup/developer-install/":[{title:"Developer install",collapsable:!1,children:["","manual-install","image-install","docker"]}],"/satsetup/":[{title:"Satellite setup",collapsable:!1,children:[""]}],"/troubleshooting/":[{title:"Troubleshooting",collapsable:!1,children:["","main-unit","satellite"]}],"/usage/":[{title:"Using Alice",collapsable:!1,children:["","web-interface"]}],"/contribute/":[{title:"Contribute",collapsable:!1,children:["","code-guidelines"]}],"/skill-development/":[{title:"Skill Development",collapsable:!1,children:["","your-first-skill","files-in-depth","work-made-for-you","down-the-rabbit-hole","going-further","new-language-support","publishing-to-skill-store"]}],"/core-development/":[{title:"Core Development",collapsable:!1,children:[""]}],"/community-made/":[{title:"By the community for the community",collapsable:!1,children:["","getting-started-pycharm"]}]}},"/de/":{selectText:" Sprachen",label:"Deutsch",ariaLabel:"Sprachen",editLinkText:"Hilf uns diese Seite zu verbessern!",repoLabel:"Mitwirken!",lastUpdated:"Zuletzte aktualisiert",nav:[{text:"Über Alice",link:"/de/about-alice/"},{text:"Setup",items:[{text:"Installation Haupteinheit",link:"/de/setup/"},{text:"Installation Satellit",link:"/de/satsetup/"}]},{text:"Verwendung",items:[{text:"Alice verwenden",link:"/de/usage"},{text:"Satelliten verwenden",link:""},{text:"Skill Store",link:"https://store.projectalice.io"}]},{text:"Learn more",items:[{text:"Mitwirken",link:"/de/contribute/"},{text:"Lege los mit Pycharm",link:"/de/community-made/getting-started-pycharm"},{text:"Skill Entwicklung",link:"/de/skill-development/"},{text:"Core Entwicklung",link:"/de/core-development/"},{text:"API",link:"https://api.projectalice.io/"}]},{text:"Sponsoren",link:"/de/sponsors/"},{text:"Links",link:"/de/links/"}],sidebar:{"/de/about-alice/":[{title:"Über Alice",collapsable:!1,children:["",["GLOSSARY","Glossar"]]}],"/de/setup/":[{title:"Installation",collapsable:!1,children:["","requirements","manual-install","image-install","preinstalled","docker","troubleshooting","wakeword"]}],"/de/satsetup/":[{title:"Installation Satellit",collapsable:!1,children:["","preinstalled","manual-install","updateToB1","troubleshooting"]}],"/de/usage/":[{title:"Alice verwenden",collapsable:!1,children:["","web-interface"]}],"/de/contribute/":[{title:"Mitwirken",collapsable:!1,children:["","code-guidelines"]}],"/de/skill-development/":[{title:"Skill Entwicklung",collapsable:!1,children:["","your-first-skill","missing-slot-info","talk-file","dialog-template","builtin-slots","builtin-intents","logging","events","widgets","skill-configuration-file","skill-download-suggestion","publishing-to-skill-store","new-language-support","database-access"]}],"/de/core-development/":[{title:"Core Entwicklung",collapsable:!1,children:[""]}],"/de/community-made/":[{title:"Von der Community für die Community",collapsable:!1,children:["","getting-started-pycharm"]}]}}}},locales:{"/":{lang:"en-US",title:"ProjectAlice",description:"A smart voice assistant that guarantees your privacy",path:"/"}}};n(237);i.a.component("Badge",()=>Promise.all([n.e(0),n.e(5)]).then(n.bind(null,403))),i.a.component("CodeBlock",()=>Promise.all([n.e(0),n.e(6)]).then(n.bind(null,322))),i.a.component("CodeGroup",()=>Promise.all([n.e(0),n.e(7)]).then(n.bind(null,323)));n(238),n(239);function pt(e){const t=document.documentElement.getBoundingClientRect(),n=e.getBoundingClientRect();return{x:n.left-t.left,y:n.top-t.top}}function ft(e,t){let n=!0;void 0===e?(e="Term not found in the glossary",n=!1):e=mt(e);return`<a title="${e}" class="term${n?"":" term-not-found"}">${t=gt(t)}</a>`}function mt(e){return e.replace(/:[\w+]*:([\w+]*):/g,(e,t)=>t).replace(/:([\w+]*):/g,(e,t)=>t)}function gt(e){return e.split("_").join(" ")}function yt(e){return e.split("_").join(" ")}var wt={name:"Term",props:{term:{type:String,required:!0},show:{type:String,required:!1,default:""}},data:()=>({termNotFound:!1}),computed:{terms(){return this.$site.pages.find(e=>"/GLOSSARY.html"===e.path).frontmatter.terms},definition(){const e=yt(this.term),t=this.terms[e];return t?mt(t):(this.termNotFound=!0,"Term not found in the glossary")},displayText(){return yt(this.show?this.show:this.term)}}},vt=Object(ct.a)(wt,(function(){var e=this.$createElement;return(this._self._c||e)("a",{class:{"term-not-found":this.termNotFound,term:!0},attrs:{title:this.definition}},[this._v(this._s(this.displayText))])}),[],!1,null,null,null).exports,bt={props:{terms:{type:Object,required:!0}},methods:{definition(e){return function(e,t){let n=t[gt(e)];return n=n.replace(/:([\w+]*):([\w+]*):/g,(e,n,i)=>ft(t[gt(n)],i)),n=n.replace(/:([\w+]*):/g,(e,n,i)=>ft(t[gt(n)],n)),n}(e,this.terms)}}},kt=(n(240),Object(ct.a)(bt,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("dl",e._l(Object.keys(e.terms),(function(t){return n("div",[n("dt",{staticClass:"defined-term"},[e._v(e._s(t))]),e._v(" "),n("dd",{staticClass:"term-definition",domProps:{innerHTML:e._s(e.definition(t,e.terms))}})])})),0)}),[],!1,null,null,null).exports);class xt{constructor(e){Object.defineProperty(this,"registration",{value:e,configurable:!0,writable:!0})}update(){return this.registration.update()}skipWaiting(){const e=this.registration.waiting;return e?(console.log("[vuepress:sw] Doing worker.skipWaiting()."),new Promise((t,n)=>{const i=new MessageChannel;i.port1.onmessage=e=>{console.log("[vuepress:sw] Done worker.skipWaiting()."),e.data.error?n(e.data.error):t(e.data)},e.postMessage({type:"skip-waiting"},[i.port2])})):Promise.resolve()}}var At=n(14);i.a.component("SWUpdatePopup",()=>Promise.all([n.e(0),n.e(4)]).then(n.bind(null,321)));var St=[{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e,router:t})=>{t.options.scrollBehavior=(t,n,i)=>{if(i)return window.scrollTo({top:i.y,behavior:"smooth"});if(t.hash){if(e.$vuepress.$get("disableScrollBehavior"))return!1;const n=document.querySelector(t.hash);return!!n&&window.scrollTo({top:pt(n).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}},({Vue:e,options:t,router:n,siteData:i})=>{e.component("Term",vt),e.component("Glossary",kt)},async({router:e,isServer:t})=>{if(!t){const{register:t}=await n.e(8).then(n.bind(null,318));e.onReady(()=>{t("/service-worker.js",{registrationOptions:{},ready(){console.log("[vuepress:sw] Service worker is active."),At.a.$emit("sw-ready")},cached(e){console.log("[vuepress:sw] Content has been cached for offline use."),At.a.$emit("sw-cached",new xt(e))},updated(e){console.log("[vuepress:sw] Content updated."),At.a.$emit("sw-updated",new xt(e))},offline(){console.log("[vuepress:sw] No internet connection found. App is running in offline mode."),At.a.$emit("sw-offline")},error(e){console.error("[vuepress:sw] Error during service worker registration:",e),At.a.$emit("sw-error",e),GA_ID&&ga("send","exception",{exDescription:e.message,exFatal:!1})}})})}}],jt=["SWUpdatePopup"];class Tt extends class{constructor(){this.store=new i.a({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,t){i.a.set(this.store.state,e,t)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Tt.prototype,{getPageAsyncComponent:Ve.d,getLayoutAsyncComponent:Ve.c,getAsyncComponent:Ve.b,getVueComponent:Ve.e});var _t={install(e){const t=new Tt;e.$vuepress=t,e.prototype.$vuepress=t}};function It(e,t){return e.options.routes.filter(e=>e.path.toLowerCase()===t.toLowerCase()).length>0}var Pt={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const t=this.pageKey||this.$parent.$page.key;return Object(Ve.h)("pageKey",t),i.a.component(t)||i.a.component(t,Object(Ve.d)(t)),i.a.component(t)?e(t):e("")}},zt={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:t,slots:n})=>e("div",{class:["content__"+t.slotKey]},n()[t.slotKey])},Ct={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Et=(n(241),Object(ct.a)(Ct,(function(){var e=this.$createElement,t=this._self._c||e;return t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-labelledby":"outbound-link-title",role:"img",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("title",{attrs:{id:"outbound-link-title"}},[this._v(this._s(this.openInNewWindowTitle))]),this._v(" "),t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})])}),[],!1,null,null,null).exports),Ot={functional:!0,render(e,{parent:t,children:n}){if(t._isMounted)return n;t.$once("hook:mounted",()=>{t.$forceUpdate()})}};i.a.config.productionTip=!1,i.a.use(Fe),i.a.use(_t),i.a.mixin(function(e,t,n=i.a){!function(e){e.locales&&Object.keys(e.locales).forEach(t=>{e.locales[t].path=t});Object.freeze(e)}(t),n.$vuepress.$set("siteData",t);const o=new(e(n.$vuepress.$get("siteData"))),a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),s={};return Object.keys(a).reduce((e,t)=>(t.startsWith("$")&&(e[t]=a[t].get),e),s),{computed:s}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let t,n;for(const i in e)"/"===i?n=e[i]:0===this.$page.path.indexOf(i)&&(t=e[i]);return t||n||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $title(){const e=this.$page,{metaTitle:t}=this.$page.frontmatter;if("string"==typeof t)return t;const n=this.$siteTitle,i=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?i?i+" | "+n:n:i||"VuePress"}get $description(){const e=function(e){if(e){const t=e.filter(e=>"description"===e.name)[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,t){for(let n=0;n<e.length;n++){const i=e[n];if(i.path.toLowerCase()===t.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},ht)),i.a.component("Content",Pt),i.a.component("ContentSlotsDistributor",zt),i.a.component("OutboundLink",Et),i.a.component("ClientOnly",Ot),i.a.component("Layout",Object(Ve.c)("Layout")),i.a.component("NotFound",Object(Ve.c)("NotFound")),i.a.prototype.$withBase=function(e){const t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.6.0",hash:"4a0fa4b"},async function(e){const t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ht.routerBase||ht.base,n=new Fe({base:t,mode:"history",fallback:!1,routes:ut,scrollBehavior:(e,t,n)=>n||(e.hash?!i.a.$vuepress.$get("disableScrollBehavior")&&{selector:e.hash}:{x:0,y:0})});!function(e){e.beforeEach((t,n,i)=>{if(It(e,t.path))i();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){const n=t.path.replace(/\/$/,"")+".html";It(e,n)?i(n):i()}else i();else{const n=t.path+"/",o=t.path+".html";It(e,o)?i(o):It(e,n)?i(n):i()}})}(n);const o={};try{await Promise.all(St.filter(e=>"function"==typeof e).map(t=>t({Vue:i.a,options:o,router:n,siteData:ht,isServer:e})))}catch(e){console.error(e)}return{app:new i.a(Object.assign(o,{router:n,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},jt.map(t=>e(t)))])})),router:n}}(!1).then(({app:e,router:t})=>{t.onReady(()=>{e.$mount("#app")})})}]);